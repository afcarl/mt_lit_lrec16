<PAPER>
  <FILENO/>
  <TITLE>Domain Adaptation for Machine Translation by Mining Unseen Words</TITLE>
  <AUTHORS>
    <AUTHOR>Hal Daum&#233;</AUTHOR>
  </AUTHORS>
  <ABSTRACT>
    <A-S ID="S-33550">We show that unseen words account for a large part of the translation error when moving to new domains.</A-S>
    <A-S ID="S-33551">Using an extension of a recent approach to mining translations from comparable corpora (<REF ID="R-04" RPTR="3">Haghighi et al., 2008</REF>), we are able to find translations for otherwise OOV terms.</A-S>
    <A-S ID="S-33552">We show several approaches to integrating such translations into a phrasebased translation system, yielding consistent improvements in translations quality (between 0.5 and 1.5 Bleu points) on four domains and two language pairs.</A-S>
  </ABSTRACT>
  <BODY>
    <DIV DEPTH="0">
      <HEADER>1 Introduction</HEADER>
      <P>
        <S ID="S-33553">Large amounts of data are currently available to train statistical machine translation systems.</S>
        <S ID="S-33554">Unfortunately, these training data are often qualitatively different from the target task of the translation system.</S>
        <S ID="S-33555">In this paper, we consider one specific aspect of domain divergence (<REF ID="R-07" RPTR="8">Jiang, 2008</REF>; Blitzer and Daum&#233; III, 2010): the out-of-vocabulary problem.</S>
        <S ID="S-33556">By considering four different target domains (news, medical, movie subtitles, technical documentation) in two source languages (German, French), we: (1) Ascertain the degree to which domain divergence causes increases in unseen words, and the degree to which this degrades translation performance.</S>
        <S ID="S-33557">(For instance, if all unknown words are names, then copying them verbatim may be sufficient.</S>
        <S ID="S-33558">) (2) Extend known methods for mining dictionaries from comparable corpora to the domain adaptation setting, by &#8220;bootstrapping&#8221; them based on known translations from the source domain.</S>
        <S ID="S-33559">(3) Develop methods for integrating these mined dictionaries into a phrase-based translation system (<REF ID="R-10" RPTR="11">Koehn et al., 2007</REF>).</S>
      </P>
      <P>
        <S ID="S-33560">As we shall see, for most target domains, out of vocabulary terms are the source of approximately half of the additional errors made.</S>
        <S ID="S-33561">The only exception is the news domain, which is sufficiently similar to parliament proceedings (Europarl) that there are essentially no new, frequent words in news.</S>
        <S ID="S-33562">By mining a dictionary and naively incorporating it into a translation system, one can only do slightly better than baseline.</S>
        <S ID="S-33563">However, with a more clever integration, we can close about half of the gap between baseline (unadapted) performance and an oracle experiment.</S>
        <S ID="S-33564">In most cases this amounts to an improvement of about 1.5 Bleu points (<REF ID="R-12" RPTR="14">Papineni et al., 2002</REF>) and 1.5 Meteor points (<REF ID="R-00" RPTR="0">Banerjee and Lavie, 2005</REF>).</S>
        <S ID="S-33565">The specific setting we consider is the one in which we have plentiful parallel (&#8220;labeled&#8221;) data in a source domain (eg., parliament) and plentiful comparable (&#8220;unlabeled&#8221;) data in a target domain (eg., medical).</S>
        <S ID="S-33566">We can use the unlabeled data in the target domain to build a good language model.</S>
        <S ID="S-33567">Finally, we assume access to a very small amount of parallel (&#8220;labeled&#8221;) target data, but only enough to evaluate on, or run weight tuning (<REF ID="R-11" RPTR="12">Och, 2003</REF>).</S>
        <S ID="S-33568">All knowledge about unseen words must come from the comparable data.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>2 Background and Challenges</HEADER>
      <P>
        <S ID="S-33569">Domain adaptation is a well-studied field, both in the NLP community as well as the machine learning and statistics communities.</S>
        <S ID="S-33570">Unlike in machine learning, in the case of translation, it is not enough to simply</S>
      </P>
      <P>
        <S ID="S-33571">adjust the weights of a learned translation model to do well on a new domain.</S>
        <S ID="S-33572">As expected, we shall see that unseen words pose a major challenge for adapting translation systems to distant domains.</S>
        <S ID="S-33573">No machine learning approach to adaptation could hope to attenuate this problem.</S>
      </P>
      <P>
        <S ID="S-33574">There have been a few attempts to measure or perform domain adaptation in machine translation.</S>
        <S ID="S-33575">One of the first approaches essentially performs test-set relativization (choosing training samples that look most like the test data) to improve translation performance, but applies the approach only to very small data sets (<REF ID="R-05" RPTR="6">Hildebrand et al., 2005</REF>).</S>
        <S ID="S-33576">Later approaches are mostly based on a data set made available in the 2007 StatMT workshop (<REF ID="R-09" RPTR="10">Koehn and Schroeder, 2007</REF>), and have attempted to use monolingual (<REF ID="R-03" RPTR="2">Civera and Juan, 2007</REF>; <REF ID="R-01" RPTR="1">Bertoldi and Federico, 2009</REF>) or comparable (Snover et al., 2008) corpus resources.</S>
        <S ID="S-33577">These papers all show small, but significant, gains in performance when moving from Parliament domain to News domain.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>3 Data</HEADER>
      <P>
        <S ID="S-33578">Dom Most frequent OOV Words News behavior, favor, neighbors, fueled, neighboring, abe, wwii, favored, nicolas, fa- (17%)</S>
      </P>
      <P>
        <S ID="S-33579">vorable, zhao, ahmedinejad, bernanke, favorite, phelps, ccp, skeptical, neighbor, skeptics, skepticism Emea renal, hepatic, subcutaneous, irbesartan, (49%) ribavirin, olanzapine, serum, patienten,</S>
      </P>
      <P>
        <S ID="S-33580">dl, eine, sie, pharmacokinetics, ritonavir, hydrochlorothiazide, erythropoietin, efavirenz, hypoglycaemia, epoetin, blister, pharmacokinetic Subs (68%)</S>
      </P>
      <P>
        <S ID="S-33581">PHP (44%) gonna, yeah, f...ing, s..., f..., gotta, uh, wanna, mom, lf, ls, em, b....h, daddy, sia, goddamn, sammy, tyler, bye, bigweld php, apache, sql, integer, socket, html, filename, postgresql, unix, mysql, color, constants, syntax, sesam, cookie, cgi, numeric, pdf, ldap, byte</S>
      </P>
      <P>
        <S ID="S-33582">All of these data sets actually come with parallel target domain data.</S>
        <S ID="S-33583">To obtain comparable data, we applied to standard trick of taking the first 50% of the English text as English and the last 50% of the German text as German.</S>
        <S ID="S-33584">While such data is more parallel than, say, Wikipedia, it is far from parallel.</S>
      </P>
      <P>
        <S ID="S-33585">To get a better sense of the differences between these domains, we give some simple statistics about out of vocabulary words and examples in Table 1.</S>
        <S ID="S-33586">Here, for each domain, we show the percentage of words (types) in the target domain that are unseen in the Parliament data.</S>
        <S ID="S-33587">As we can see, it is markedly higher in Emea, Subs and PHP than in News.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>4 Dictionary Mining</HEADER>
      <P>
        <S ID="S-33588">Our dictionary mining approach is based on Canonical Correlation Analysis, as used previously by (<REF ID="R-04" RPTR="4">Haghighi et al., 2008</REF>).</S>
        <S ID="S-33589">Briefly, given a multi-view data set, Canonical Correlation Analysis is a technique to find the projection directions in each view so that the objects when projected along these di-</S>
      </P>
      <P>
        <S ID="S-33590">rections are maximally aligned (<REF ID="R-06" RPTR="7">Hotelling, 1936</REF>).</S>
        <S ID="S-33591">Given any new pair of points, the similarity between the them can be computed by first projecting onto the lower dimensions space and computing the cosine similarity between their projections.</S>
        <S ID="S-33592">In general, using all the eigenvectors is sub optimal and thus retaining top eigenvectors leads to an improved generalizability.</S>
      </P>
      <P>
        <S ID="S-33593">Here we describe the use of CCA to find the translations for the OOV German words (<REF ID="R-04" RPTR="5">Haghighi et al., 2008</REF>).</S>
        <S ID="S-33594">From the target domain corpus we extract the most frequent words (approximately 5000) for both the languages.</S>
        <S ID="S-33595">Of these, words that have translation in the bilingual dictionary (learnt from Europarl) are used as training data.</S>
        <S ID="S-33596">We use these words to learn the CCA projections and then mine the translations for the remaining frequent words.</S>
        <S ID="S-33597">The dictionary mining involves multiple stages.</S>
        <S ID="S-33598">In the first stage, we extract feature vectors for all the words.</S>
        <S ID="S-33599">We use context and orthographic features.</S>
        <S ID="S-33600">In the second stage, using the dictionary probabilities of seen words, we identify pairs of words whose feature vectors are used to learn the CCA projection directions.</S>
        <S ID="S-33601">In the final stage, we project all the words into the sub-space identified by CCA and mine translations for the OOV words.</S>
        <S ID="S-33602">We will describe each of these steps in detail in this section.</S>
      </P>
      <P>
        <S ID="S-33603">For each of the frequent words we extract the context vectors using a window of length five.</S>
        <S ID="S-33604">To overcome data sparsity issue, we truncate each context word to its first seven characters.</S>
        <S ID="S-33605">We discard all the context features which co-occur with less than five words.</S>
        <S ID="S-33606">Among the remaining features, we consider only the most frequent 2000 features in each language.</S>
        <S ID="S-33607">We convert the frequency vectors into TFIDF vectors, center the data and then binarize the vectors depending on if the feature value is positive of not.</S>
        <S ID="S-33608">We convert this data into word similarities using linear dot product kernel.</S>
        <S ID="S-33609">We also represent each word using the orthographic features, with n-grams of length 1-3 and convert them into TFIDF form and subsequently turn them into word similarities (again using the linear kernel).</S>
        <S ID="S-33610">Since we convert the data into word similarities, the orthographic features are relevant even though the script of source and target languages differ.</S>
        <S ID="S-33611">Where as using the features directly rending them useless for languages whose script is completely different like Arabic and Enwaste</S>
      </P>
      <P>
        <S ID="S-33612">glish.</S>
        <S ID="S-33613">For each language we linearly combine the kernel matrices obtained using the context vectors and the orthographic features.</S>
        <S ID="S-33614">We use incomlete cholesky decomposition to reduce the dimensionality of the kernel matrices.</S>
        <S ID="S-33615">We do the same preprocessng for all words, the training words and the OOV words.</S>
        <S ID="S-33616">And the resulting feature vectors for each word are used for learning the CCA projections</S>
      </P>
      <P>
        <S ID="S-33617">Since a word can have multiple translations, and that CCA uses only one translation, we form a bipartite graph with the training words in each language as nodes and the edge weight being the translation probability of the word pair.</S>
        <S ID="S-33618">We then run Hungarian algorithm to extract maximum weighted bipartite matching (<REF ID="R-08" RPTR="9">Jonker and Volgenant, 1987</REF>).</S>
        <S ID="S-33619">We then run CCA on the resulting pairs of the bipartite matching to get the projection directions in each language.</S>
        <S ID="S-33620">We retain only the top 35% of the eigenvectors.</S>
        <S ID="S-33621">In other relevant experiments, we have found that this setting of CCA outperforms the baseline approach.</S>
        <S ID="S-33622">We project all the frequent words, including the training words, in both the languages into the lower dimensional spaces and for each of the OOV word return the closest five points from the other language as potential new translations.</S>
        <S ID="S-33623">The dictionary mining, viewed subjectively and intrinsically, performs quite well.</S>
        <S ID="S-33624">In Table 2, we show four randomly selected unseen German words from Emea (that do not occur in the Parliament data), together with the top three translations and associated scores (which are not normalized).</S>
        <S ID="S-33625">Based on a cursory evaluation of 5 randomly selected words in French and German</S>
      </P>
      <P>
        <S ID="S-33626">by native speakers (not the authors!</S>
        <S ID="S-33627">), we found that 8/10 had correct mined translations.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>5 Integration into MT System</HEADER>
      <P>
        <S ID="S-33628">The output of the dicionary mining approach is a list of pairs (f,e) of foreign words and predicted English translations.</S>
        <S ID="S-33629">Each of these comes with an associated score.</S>
        <S ID="S-33630">There are two obvious ways to integrate such a dictionary into a phrase-based translation system: (1) Provide the dictionary entries as (weighted) &#8220;sentence&#8221; pairs in the parallel corpus.</S>
        <S ID="S-33631">These &#8220;sentences&#8221; would each contain exactly one word.</S>
        <S ID="S-33632">The weighting can be derived from the translation probability from the dictionary mining.</S>
        <S ID="S-33633">(2) Append the phrase table of a baseline phrase-based translation model trained only on source domain data with the word pairs.</S>
        <S ID="S-33634">Use the mining probability as the phrase translation probabilities.</S>
      </P>
      <P>
        <S ID="S-33635">It turned out in preliminary experiments (on German/Emea) that neither of these approaches worked particularly well.</S>
        <S ID="S-33636">The first approach did not work at all, even with fairly extensive hand-tuning of the sentence weights.</S>
        <S ID="S-33637">It often hurt translation performance.</S>
        <S ID="S-33638">The second approach did not hurt translation performance, but did not help much either.</S>
        <S ID="S-33639">It led to an average improvement of only about 0.5 Bleu points, on development data.</S>
        <S ID="S-33640">This is likely because weight tuning tuned a single weight to account for the import of the phrase probabilities across both &#8220;true&#8221; phrases as well as these &#8220;mined&#8221; phrases.</S>
      </P>
      <P>
        <S ID="S-33641">We therefore came up with a slightly more complex, but still simple, method for adding the dictionary entries to the phrase table.</S>
        <S ID="S-33642">We add four new features to the model, and set the plain phrasetranslation probabilities for the dictionary entries to zero.</S>
        <S ID="S-33643">These new features are:</S>
      </P>
      <P>
        <S ID="S-33644">1.</S>
        <S ID="S-33645">The dictionary mining translation probability.</S>
        <S ID="S-33646">(Zero for original phrase pairs.</S>
        <S ID="S-33647">)</S>
      </P>
      <P>
        <S ID="S-33648">2.</S>
        <S ID="S-33649">An indicator feature that says whether all German words in this phrase pair were seen in the source data.</S>
        <S ID="S-33650">(This will always be true for source phrases and always be false for dictionary entries.</S>
        <S ID="S-33651">)</S>
      </P>
      <P>
        <S ID="S-33652">3.</S>
        <S ID="S-33653">An indicator that says whether all German words in this phrase pair were seen in target data.</S>
        <S ID="S-33654">(This is not the negation of the previous feature, because there are plenty of words in the target data that had also been seen.</S>
        <S ID="S-33655">This feature might mean something like &#8220;trust this phrase pair a lot.&#8221;)</S>
      </P>
      <P>
        <S ID="S-33656">4.</S>
        <S ID="S-33657">The conjunction of the previous two features.</S>
      </P>
      <P>
        <S ID="S-33658">Interestingly, only adding the first feature was not helpful (performance remained about 0.5 Bleu points above baseline).</S>
        <S ID="S-33659">Adding only the last three features (the indicator features) alone did not help at all (performance was roughly on par with baseline).</S>
        <S ID="S-33660">Only when all four features were included did performance improve significantly.</S>
        <S ID="S-33661">In the results discussed in Section 6.2, we report results on test data using the combination of these four features.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>6 Experiments</HEADER>
      <P>
        <S ID="S-33688">In all of our experiments, we use two trigram language models.</S>
        <S ID="S-33689">The first is trained on the Gigaword corpus.</S>
        <S ID="S-33690">The second is trained on the English side of the target domain corpus.</S>
        <S ID="S-33691">The two language models are traded-off against each other during weight tuning.</S>
        <S ID="S-33692">In all cases we perform parameter tuning with MERT (<REF ID="R-11" RPTR="13">Och, 2003</REF>), and results are averaged over three runs with different random initializations.</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>6.1 Baselines and Oracles</HEADER>
        <P>
          <S ID="S-33662">Our first set of experiments is designed to establish baseline performance for the domains.</S>
          <S ID="S-33663">In these experiments, we built a translation model based only on the Parliament proceedings.</S>
          <S ID="S-33664">We then tune it using the small amount of target-domain tuning data and test on the corresponding test data.</S>
          <S ID="S-33665">This is row</S>
        </P>
        <P>
          <S ID="S-33666">BASELINE in Table 3.</S>
          <S ID="S-33667">Next, we build an oracle,</S>
        </P>
        <P>
          <S ID="S-33668">based on using the parallel target domain data.</S>
          <S ID="S-33669">This system, OR in Table 3 is constructed by training a system on a mix of Parliament data and targetdomain data.</S>
          <S ID="S-33670">The last line in this table shows the percent improvement when moving to this oracle system.</S>
          <S ID="S-33671">As we can see, the gains range from tiny (4% relative Bleu points, or1.2 absolute Bleu points for news, which may just be because we have more data) to quite significant (73% for medical texts).</S>
        </P>
        <P>
          <S ID="S-33672">Finally, we consider how much of this gain we could possible hope to realize by our dictionary mining technique.</S>
          <S ID="S-33673">In order to estimate this, we take the OR system, and remove any phrases that contain source-language words that appear in neither</S>
        </P>
        <P>
          <S ID="S-33674">BLEU Meteor News Emea Subs PHP News Emea Subs PHP</S>
        </P>
        <P>
          <S ID="S-33675">BASELINE approach from Table 3.</S>
        </P>
        <P>
          <S ID="S-33676">the Parliament proceedings nor our list of high frequency OOV terms.</S>
          <S ID="S-33677">In other words, if our dictionary mining system found as-good translations for the words in its list as the (cheating) oracle system, this is how well it would do.</S>
          <S ID="S-33678">This is referred to as OR-OOV in Table 3.</S>
          <S ID="S-33679">As we can see, the upper bound on performance based only on mining unseen words is about halfway (absolute) between the baseline and the full Oracle.</S>
          <S ID="S-33680">Except in news, when it is essentially useless (because the vocabulary differences between news and Parliament proceedings are negligible).</S>
          <S ID="S-33681">(Results using Meteor are analogous, but omitted for space.</S>
          <S ID="S-33682">)</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>6.2 Mining Results</HEADER>
        <P>
          <S ID="S-33683">The results of the dictionary mining experiment, in terms of its effect on translation performance, are shown in Table 4.</S>
          <S ID="S-33684">As we can see, there is a modest improvement in Subtitles and PHP, a markedly large improvement in Emea, and a modest improvement in News.</S>
          <S ID="S-33685">Given how tight the ORACLE results were to the BASELINE results in Subs and PHP, it is quite impressive that we were able to improve performance as much as we did.</S>
          <S ID="S-33686">In general, across all the data sets and both languages, we roughly split the difference (in absolute terms) between the</S>
        </P>
        <P>
          <S ID="S-33687">BASELINE and ORACLE-OOV systems.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>7 Discussion</HEADER>
      <P>
        <S ID="S-33693"></S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>BASELINE and ORACLE-OOV systems. 7 Discussion</HEADER>
      <P>
        <S ID="S-33694">In this paper we have shown that dictionary mining techniques can be applied to mine unseen words in a domain adaptation task.</S>
        <S ID="S-33695">We have seen positive, consistent results across two languages and four domains.</S>
        <S ID="S-33696">The proposed approach is generic enough to be integrated into a wide variety of translation systems other than simple phrase-based translation.</S>
        <S ID="S-33697">Of course, unseen words are not the only cause of translation divergence between two domains.</S>
        <S ID="S-33698">We have not addressed other issues, such as better estimation of translation probabilities or words that change word sense across domains.</S>
        <S ID="S-33699">The former is precisely the area to which one might apply domain adaptation techniques from the machine learning community.</S>
        <S ID="S-33700">The latter requires significant additional work, since it is quite a bit more difficult to spot foreign language words that are used in new senses, rather that just never seen before.</S>
        <S ID="S-33701">An alternative area of work is to extend these results beyond simply the top-most-frequent words in the target domain.</S>
      </P>
    </DIV>
  </BODY>
  <ACKNOWLEDGMENTS/>
  <REFERENCES>
    <REFERENCE ID="0">
      <RAUTHOR>Satanjeev Banerjee</RAUTHOR>
      <REFTITLE>Meteor: An automatic metric for MT evaluation with improved correlation with human judgments.</REFTITLE>
      <DATE>2005</DATE>
    </REFERENCE>
    <REFERENCE ID="1">
      <RAUTHOR>Nicola Bertoldi</RAUTHOR>
      <REFTITLE>Domain adaptation for statistical machine translation with monolingual resources.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="2">
      <RAUTHOR>John Blitzer</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="3">
      <RAUTHOR>Jorge Civera</RAUTHOR>
      <REFTITLE>Domain adaptation in statistical machine translation with mixture modelling.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="4">
      <RAUTHOR>Aria Haghighi</RAUTHOR>
      <REFTITLE>Learning bilingual lexicons from monolingual corpora.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="5">
      <RAUTHOR>Almut Silja Hildebrand</RAUTHOR>
      <REFTITLE>Adaptation of the translation model for statistical machine translation based on information retrieval.</REFTITLE>
      <DATE>2005</DATE>
    </REFERENCE>
    <REFERENCE ID="6">
      <RAUTHOR>H Hotelling</RAUTHOR>
      <REFTITLE>Relation between two sets of variables.</REFTITLE>
      <DATE>1936</DATE>
    </REFERENCE>
    <REFERENCE ID="7">
      <RAUTHOR>J Jiang</RAUTHOR>
      <REFTITLE>A literature survey on domain adaptation of statistical classifiers. Available at http://sifaka.cs.uiuc.edu/jiang4/ domain_adaptation/survey.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="8">
      <RAUTHOR>R Jonker</RAUTHOR>
      <REFTITLE>A shortest augmenting path algorithm for dense and sparse linear assignment problems.</REFTITLE>
      <DATE>1987</DATE>
    </REFERENCE>
    <REFERENCE ID="9">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Experiments in domain adaptation for statistical machine translation.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="10">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Moses: Open source toolkit for statistical machine translation.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="11">
      <RAUTHOR>Franz Josef Och</RAUTHOR>
      <REFTITLE>Minimum error rate training for statistical machine translation.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="12">
      <RAUTHOR>Kishore Papineni</RAUTHOR>
      <REFTITLE>Bleu: a method for automatic evaluation of machine translation.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
  </REFERENCES>
</PAPER>
