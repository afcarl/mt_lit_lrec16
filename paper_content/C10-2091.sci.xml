<PAPER>
  <FILENO/>
  <TITLE>Finite-state Scriptural Translation</TITLE>
  <AUTHORS>
    <AUTHOR>M G Abbas Malik Christian Boitet Pushpak Bhattacharyya</AUTHOR>
  </AUTHORS>
  <ABSTRACT>
    <A-S ID="S-3418">We use robust and fast Finite-State Machines (FSMs) to solve scriptural translation problems.</A-S>
    <A-S ID="S-3419">We describe a phonetico-morphotactic pivot UIT (universal intermediate transcription), based on the common phonetic repository of Indo-Pak languages.</A-S>
    <A-S ID="S-3420">It is also extendable to other language groups.</A-S>
    <A-S ID="S-3421">We describe a finitestate scriptural translation model based on finite-state transducers and UIT.</A-S>
    <A-S ID="S-3422">We report its performance on Hindi, Urdu, Punjabi and Seraiki corpora.</A-S>
    <A-S ID="S-3423">For evaluation, we design two classification scales based on the word and sentence accuracies for translation system classifications.</A-S>
    <A-S ID="S-3424">We also show that subjective evaluations are vital for real life usage of a translation system in addition to objective evaluations.</A-S>
  </ABSTRACT>
  <BODY>
    <DIV DEPTH="0">
      <HEADER>1 Introduction</HEADER>
      <P>
        <S ID="S-3425">Transliteration refers to phonetic translation across two languages with different writing systems, such as Arabic to English (<REF ID="R-02" RPTR="4">Arbabi et al., 1994</REF>; <REF ID="R-24" RPTR="25">Stall and Knight, 1998</REF>; <REF ID="R-01" RPTR="2">Al-Onaizan and Knight, 2002</REF>; <REF ID="R-00" RPTR="0">AbdulJaleel and Larkey, 2003</REF>).</S>
        <S ID="S-3426">Most prior work on transliteration has been done for MT of English, Arabic, Japanese, Chinese, Korean, etc., for CLIR (Lee and Choi., 1998; <REF ID="R-07" RPTR="10">Jeong et al., 1999</REF>; <REF ID="R-04" RPTR="6">Fujii and Ishikawa, 2001</REF>; <REF ID="R-23" RPTR="24">Sakai et al., 2002</REF>; <REF ID="R-17" RPTR="19">Pirkola et al., 2003</REF>; <REF ID="R-25" RPTR="26">Virga and Khudanpur, 2003</REF>; <REF ID="R-27" RPTR="32">Yan et al., 2003</REF>), and for the development of multilingual resources (<REF ID="R-08" RPTR="11">Kang and Choi, 2000</REF>; Yan, Gregory et al., 2003).</S>
      </P>
      <P>
        <S ID="S-3427">The terms transliteration and transcription are often used as generic terms for various processes like transliteration, transcription, romanization, transcribing and technography (<REF ID="R-05" RPTR="7">Halpern, 2002</REF>).</S>
        <S ID="S-3428">In general, the speech processing community uses the term transcription to denote a process of conversion from the script or writing system to the sound (phonetic representation).</S>
        <S ID="S-3429">For example, the transcription of the word &#8220;love&#8221; in the International Phonetic Alphabet (IPA) is [l&#601;v].</S>
        <S ID="S-3430">While the text processing community uses the term transliteration and defines it as a process of converting a word written in one writing system into another writing system while preserving the sound of the original word (<REF ID="R-01" RPTR="3">Al-Onaizan and Knight, 2002</REF>; <REF ID="R-00" RPTR="1">AbdulJaleel and Larkey, 2003</REF>).</S>
        <S ID="S-3431">More precisely, the text processing community defines the term transliteration as two transcription processes &#8220;source script to sound transcription&#8221; and &#8220;sound to target script transcription&#8221; and sometimes as one transcription process &#8220;source script to target script transcription&#8221;.</S>
      </P>
      <P>
        <S ID="S-3432">We propose a new term Scriptural Translation for this combined process.</S>
        <S ID="S-3433">Scriptural translation is a process of transcribing a word written in the source language script into the target language script by preserving its articulation in the original language in such a way that the native speaker of the target language can produce the original pronunciation.</S>
      </P>
      <P>
        <S ID="S-3434">FSMs have been successfully used in various domains of Computational Linguistics and Natural Language Processing (NLP).</S>
        <S ID="S-3435">The successful use of FSMs have already been shown in various fields of computational linguistics (<REF ID="R-16" RPTR="18">Mohri, 1997</REF>; Roche and Schabes, 1997; Knight and Al- Onaizan, 1998).</S>
        <S ID="S-3436">Their practical and advantageous features make them very strong candidates to be used for solving scriptural translation problems.</S>
      </P>
      <P>
        <S ID="S-3437">First, we describe scriptural translation and identify its problems that fall under weak translation problems.</S>
        <S ID="S-3438">Then, we analyze various challenges for solving weak scriptural translation problems.</S>
        <S ID="S-3439">We describe our finite-state scriptural translation model and report our results on Indo- Pak languages.</S>
      </P>
      <P>
        <S ID="S-3440">Coling 2010: Poster Volume, pages 791&#8211;800, Beijing, August 2010</S>
      </P>
      <P>
        <S ID="S-3441">2 Scriptural Translation &#8211; a weak translation problem</S>
      </P>
      <P>
        <S ID="S-3442">A weak translation problem is a translation problem in which the number of possible valid translations, say N, is either very small, less than 5, or almost always 1.</S>
      </P>
      <P>
        <S ID="S-3443">Scriptural Translation is a sub-problem of general translation and almost always a weak translation problem.</S>
        <S ID="S-3444">For example, French-IPA and Hindi-Urdu scriptural translation problems are weak translation problems due to their small number of valid translations.</S>
        <S ID="S-3445">On the other hand, Japanese-English and French-Chinese scriptural translation problems are not weak.</S>
      </P>
      <P>
        <S ID="S-3446">Scriptural translation is not only vital for translation between different languages, but also becomes inevitable when the same language is written in two or more mutually incomprehensible scripts.</S>
        <S ID="S-3447">For example, Punjabi is written in three different scripts: Shahmukhi (a derivation of the Perso-Arabic script), Gurmukhi and Devanagari.</S>
        <S ID="S-3448">Kazakh and Kurdish are also written in three different scripts, Arabic, Latin and Cyrillic.</S>
        <S ID="S-3449">Malay has two writing systems, Latin and Jawi (a derivation of the Arabic script), etc.</S>
        <S ID="S-3450">Figure 1 shows an example of scriptural divide between Hindi and Urdu.</S>
      </P>
      <P>
        <S ID="S-3451">X&#236; ]gzu[&#162; &#204;&#208; &#225;&#240;Z &#226;&#167; 6&#65533;3[3e</S>
      </P>
      <P>
        <S ID="S-3452">&#2335;&#2369; &#2367;&#2344;&#2351;&#2366; &#2325;&#2379; &#2309;&#2350;&#2344; &#2325;&#2368; &#2395;&#65533;&#2352;&#2340; &#2361;&#2376;&#2404;</S>
      </P>
      <P>
        <S ID="S-3453">[&#7699;&#650;n&#618;j&#593; ko &#601;m&#601;n ki z&#601;rur&#601;&#7793; h&#230;.</S>
        <S ID="S-3454">] The world needs peace.</S>
      </P>
      <P>
        <S ID="S-3455">Thus, solving the scriptural translation problem is vital to bridge the scriptural divide between the speakers of different languages as well as of the same language.</S>
      </P>
      <P>
        <S ID="S-3456">Punjabi, Sindhi, Seraiki and Kashmiri exist on both sides of the common border between India and Pakistan and all of them are written in two or more mutually incomprehensible scripts.</S>
        <S ID="S-3457">The Hindi&#8211;Urdu pair exists both in India and Pakistan.</S>
        <S ID="S-3458">We call all these languages the Indo-Pak languages.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>3 Challenges of Scriptural Translation</HEADER>
      <P>
        <S ID="S-3525">In this section, we describe the main challenges of scriptural translation.</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>3.1 Scriptural divide</HEADER>
        <P>
          <S ID="S-3459">There exists a written communication gap between people who can understand each other verbally but cannot read each other.</S>
          <S ID="S-3460">They are virtually divided and become scriptural aliens.</S>
          <S ID="S-3461">Examples are the Hindi &amp; Urdu communities, the Punjabi/Shahmukhi &amp; Punjabi/Gurmukhi communities, etc. An example of scriptural divide is shown in Figure 1.</S>
          <S ID="S-3462">Such a gap also appears when people want to read some foreign language or access a bilingual dictionary and are not familiar with the writing system.</S>
          <S ID="S-3463">For example, Japanese&#8211;French or French&#8211;Urdu dictionaries are useless for French learners because of the scriptural divide.</S>
          <S ID="S-3464">Table 1 gives some figures on how this scriptural divide affects a large population of the world.</S>
          <S ID="S-3465">Sr.</S>
          <S ID="S-3466">Language Number of Speakers</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.2 Under-resourced languages</HEADER>
        <P>
          <S ID="S-3467">Under-resourced and under-written features of the source or target language are the second big challenge for scriptural translation.</S>
          <S ID="S-3468">The lack of standard writing practices or even the absence of a standard code page for a language makes transliteration or transcription very hard.</S>
          <S ID="S-3469">The existence of various writing styles and systems for a language leads towards a large number of variants and it becomes difficult and complex to handle them.</S>
        </P>
        <P>
          <S ID="S-3470">In the case of Indo-Pak languages, Punjabi is the largest language of Pakistan (more than 70 million) and is more a spoken language than a written one.</S>
          <S ID="S-3471">There existed only two magazines (one weekly and one monthly) in 1992 (<REF ID="R-19" RPTR="20">Rahman, 1997</REF>).</S>
          <S ID="S-3472">In the words of (<REF ID="R-20" RPTR="22">Rahman, 2004</REF>), &#8220;&#8230; there is little development in Punjabi, Pashto, Balochi and other languages&#8230;&#8221;.</S>
          <S ID="S-3473">(<REF ID="R-12" RPTR="14">Malik, 2005</REF>) reports the first effort towards establishing a standard code page for Punjabi-Shahmukhi and till date, a standard code page for Shahmukhi does not exist.</S>
          <S ID="S-3474">Similar problems also exist for the Kashmiri and Seraiki languages.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.3 Absence of necessary information</HEADER>
        <P>
          <S ID="S-3475">There are cases where the necessary and indispensable information for scriptural translation are missing in the source text.</S>
          <S ID="S-3476">For example, the first word &#1583;&#1606;&#1610;&#1575; [&#7699;&#650;n&#618;j&#593;] (world) of the example sentence of Figure 1 misses crucial diacritical information, mandatory to perform Urdu to Hindi scriptural translation.</S>
          <S ID="S-3477">Like in Arabic, diacritical marks are part of the Urdu writing system but are sparingly used in writings (Zia, 1999; <REF ID="R-14" RPTR="16">Malik et al., 2008</REF>; <REF ID="R-13" RPTR="15">Malik et al., 2009</REF>).</S>
        </P>
        <P>
          <S ID="S-3478">Figure 2(a) shows the example word without diacritical marks and its wrong Hindi conversion according to conversion rules (explained later).</S>
          <S ID="S-3479">The Urdu community can understand the word in its context or without the context because people are tuned to understand the Urdu text or word without diacritical marks, but the Hindi conversion of Figure 2(a) is not at all acceptable or readable in the Hindi community.</S>
        </P>
        <P>
          <S ID="S-3480">Figure 2(b) shows the example word with diacritical marks and its correct Hindi conversion according to conversion rules.</S>
          <S ID="S-3481">Similar problems also arise for the other Indo-Pak languages.</S>
          <S ID="S-3482">Therefore, missing information in the source text makes the scriptural translation problem computationally complex and difficult.</S>
          <S ID="S-3483">[&#593;] &#1575; [j] &#618;] &#1616; [n] &#1583;&#1615;&#8207; &#1606;&#1616;&#1610;&#1575; = &#1583; [&#7699;] &#650;] &#1615; &#1740;]&#8207; &#1606;]&#8207;</S>
        </P>
        <P>
          <S ID="S-3484">&#2342;&#2369;&#2367;&#2344;&#2351;&#2366; = &#2342; [ &#7699;] &#9676;&#2369; [ &#650;] &#2344; [ n] &#2367;&#9676; [ &#618;] &#2351; [ j] &#9676;&#2366; [ &#593;]</S>
        </P>
        <P>
          <S ID="S-3485">(b) with necessary information &#1583;&#1606;&#1610;&#1575; = &#1583; &#7699;] [j] n] &#1575; [&#593;]</S>
        </P>
        <P>
          <S ID="S-3486">&#2342;&#2344;&#2351;&#2366; = &#2342; [ &#7699;] &#2344; [ n] &#2351; [ j] &#9676;&#2366; [ &#593;] &#1740;]&#8207; &#1606;]&#8207;</S>
        </P>
        <P>
          <S ID="S-3487">(a) without necessary information Figure 2: Example of missing information</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.4 Different spelling conventions</HEADER>
        <P>
          <S ID="S-3488">Different spelling conventions exist across different scripts used for the same language or for different languages because users of a script are tuned to write certain words in a traditional way.</S>
          <S ID="S-3489">For example, the words &#1610;&#1729; [je] (this) = &#1740; [j] + &#1729; [h] and &#1608;&#1729; [vo] (that) = &#1608; [v] + &#1729; [h] are used in Urdu and Punjabi/Shahmukhi.</S>
          <S ID="S-3490">The character &#1729; [h] produces the vowel sounds [e] and [o] in the example words respectively.</S>
          <S ID="S-3491">On the other hand, the example words are written as &#2351;&#2375; [je] &amp; &#2357;&#2379; [vo] and</S>
        </P>
        <P>
          <S ID="S-3492">&#2607;&#2631; [je] &amp; &#2613;&#2635; [vo] in Devanagari and Gurmukhi,</S>
        </P>
        <P>
          <S ID="S-3493">respectively.</S>
          <S ID="S-3494">There exist a large number of such conventions between Punjabi/Shahmukhi&#8211; Punjabi Gurmukhi, Hindi&#8211;Urdu, etc.</S>
        </P>
        <P>
          <S ID="S-3495">Different spelling conventions are also driven by different religious influences on different communities.</S>
          <S ID="S-3496">In the Indian sub-continent, Hindi is a part of the Hindu identity, while Urdu is a part of the Muslim identity 1 (<REF ID="R-19" RPTR="21">Rahman, 1997</REF>; <REF ID="R-21" RPTR="23">Rai, 2000</REF>).</S>
          <S ID="S-3497">Hindi derives its vocabulary from Sanskrit, while Urdu borrows its literary and scientific vocabulary from Persian and Arabic.</S>
          <S ID="S-3498">Hindi and Urdu not only borrow from Sanskrit and Persian/Arabic, but also adopt the original spellings of the borrowed word due the sacredness of the original language.</S>
          <S ID="S-3499">These differences make scriptural translation across scripts, dialects or languages more challenging and complex.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.5 Transcriptional ambiguities</HEADER>
        <P>
          <S ID="S-3500">Character level scriptural translation across different scripts is ambiguous.</S>
          <S ID="S-3501">For example, the Sindhi word &#1575;&#1616;&#1606;&#1587;&#1575;&#1606; [&#618;&#626;s&#593;n] (human being) can be converted into Devanagari either as &#2311;&#2306;&#2360;&#2366;&#2344; [&#618;&#626;s&#593;n] or</S>
        </P>
        <P>
          <S ID="S-3502">&#2311;&#2360;&#2366;&#2344; * [&#618;ns&#593;n] ( * means wrong spellings).</S>
          <S ID="S-3503">The transliteration process of the example word from Sindhi to Devanagari is shown in Figure 3(a).</S>
          <S ID="S-3504">The transliteration of the third character from the left, Noon &#8207;(&#1606;)&#8207; [n], is ambiguous because in the middle of a word, Noon may represent a consonant [n] or the nasalization [&#626;] of a vowel.</S>
        </P>
        <P>
          <S ID="S-3505">In the reverse direction, the Sindhi Devanagari word &#2311;&#2306;&#2360;&#2366;&#2344; [&#618;&#626;s&#593;n] can be converted into a set of possible transliterations &#1575;&#1616;&#1606;&#1579;&#1575;&#1606; , * &#1575;&#1616;&#1606;&#1589;&#1575;&#1606; &#8207;,&#1575;&#1616;&#1606;&#1587;&#1575;&#1606;]&#8207; * ].</S>
          <S ID="S-3506">All these possible transliterations have the same pronunciation [&#618;&#626;s&#593;n] but have different spellings in</S>
        </P>
        <P>
          <S ID="S-3507">1 The Hindi movement of the late 19th century played</S>
        </P>
        <P>
          <S ID="S-3508">a central role in the ideologization of Hindi.</S>
          <S ID="S-3509">The movement started in reaction to the British Act 29 of 1837 by which Persian was replaced by Hindustani/Urdu, written in Persian script, as the official vernacular of the courts of law in North India.</S>
          <S ID="S-3510">It is the moment in history, when Hindi and Urdu started to emerge as Hindu and Muslim identities.</S>
        </P>
        <P>
          <S ID="S-3511">the Perso-Arabic script, as shown in Figure 3(b).</S>
          <S ID="S-3512">Similar kinds of ambiguities also arise for other pairs of scripts, dialects or languages.</S>
          <S ID="S-3513">Thus these ambiguities increase the complexity and difficulty of scriptural translation.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.6 Distinctive sound inventories</HEADER>
        <P>
          <S ID="S-3514">Sound inventories across dialects or languages can be different.</S>
          <S ID="S-3515">Consider the English&#8211;Japanese pair.</S>
          <S ID="S-3516">Japanese make no distinction between the &#8216;L&#8217; [l] and &#8216;R&#8217; [r] sounds so that these two English sounds collapse onto the same Japanese sound (<REF ID="R-10" RPTR="13">Knight and Al-Onaizan, 1998</REF>).</S>
        </P>
        <P>
          <S ID="S-3517">For Indo-Pak languages, Punjabi/Gurmukhi (a dialect of Punjabi spoken in India) possesses two additional sounds than Punjabi/Shahmukhi (a dialect of Punjabi spoken in Pakistan).</S>
          <S ID="S-3518">Similarly, Hindi, Punjabi, Sindhi and Seraiki have the retroflex form [&#627;], but Urdu and Kashmiri do not.</S>
          <S ID="S-3519">Marathi has 14 vowels in contrast to Hindi&#8217;s 11 vowels, shown in Table 2.</S>
          <S ID="S-3520">Hindi Vowels &#2309; [&#601;] &#2310; [&#593;] &#2311; [&#618;] &#2312; [i] &#2313; [&#650;] &#2314; [u] &#2315; [r&#805;] &#2319; [e] &#2320; [&#230;]</S>
        </P>
        <P>
          <S ID="S-3521">&#2323; [o] &#2324; [&#596;] Marathi Vowels &#2309; [&#601;] &#2310; [&#593;] &#2311; [&#618;] &#2312; [i] &#2313; [&#650;] &#2314; [u] &#2315; [r&#805;] &#2319; [e] &#2320; [&#230;]</S>
        </P>
        <P>
          <S ID="S-3522">&#2323; [o] &#2324; [&#596;] &#2309;&#2306; [&#601;&#331;] &#2309;&#2307; [&#601;h] &#2316; [l&#805;]</S>
        </P>
        <P>
          <S ID="S-3523">Scriptural translation approximates the pronunciation of the source language or dialect in the target due to different sound inventories.</S>
          <S ID="S-3524">Thus a distinctive sound inventory across scripts, dialects or languages increases ambiguities and adds to the complexity of the scriptural translation problem.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>4 Universal Intermediate Transcription</HEADER>
      <P>
        <S ID="S-3564">UIT (Universal Intermediate Transcription) is a multipurpose pivot.</S>
        <S ID="S-3565">In the current study, it is used as a phonetico-morphotactic pivot for the surface morphotactic translation or scriptural translation.</S>
      </P>
      <P>
        <S ID="S-3566">Although we have not used IPA as encoding scheme, we have used the IPA coding associated with each character as the encoding principle for our ASCII encoding scheme.</S>
        <S ID="S-3567">We selected the printable ASCII characters to base the UIT encoding scheme because it is universally portable to all computer systems and operating systems without any problem (<REF ID="R-03" RPTR="5">Boitet and Tch&#233;ou, 1990</REF>; <REF ID="R-06" RPTR="8">Hieronymus, 1993</REF>; <REF ID="R-26" RPTR="27">Wells, 1995</REF>).</S>
        <S ID="S-3568">UIT is a deterministic and unambiguous scheme of transcription for Indo-Pak languages in ASCII range 32&#8211;126, since a text in this rage is portable across computers and operating systems (<REF ID="R-06" RPTR="9">Hieronymus, 1993</REF>; <REF ID="R-26" RPTR="28">Wells, 1995</REF>).</S>
      </P>
      <P>
        <S ID="S-3569">Speech Assessment Methods Phonetic Alphabet (SAMPA) 2 is a widely accepted scheme for encoding IPA into ASCII.</S>
        <S ID="S-3570">The purpose of SAM- PA was to form the basis of an international standard machine-readable phonetic alphabet for the purpose of international collaboration in speech research (<REF ID="R-26" RPTR="29">Wells, 1995</REF>).</S>
        <S ID="S-3571">The UIT encoding of Indo-Pak languages is developed as an extension of the SAMPA and X-SAMPA that covers all symbols on the IPA chart (<REF ID="R-26" RPTR="30">Wells, 1995</REF>).</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>4.1 UIT encodings</HEADER>
        <P>
          <S ID="S-3526">All characters of the Indo-Pak languages are subdivided into three categories, consonants, vowels and other symbols (punctuations and digits).</S>
        </P>
        <P>
          <S ID="S-3527">Consonants are further divided into aspirated consonants and non-aspirated consonants.</S>
          <S ID="S-3528">For aspiration, in phonetic transcription a simple &#8216;h&#8217; following the base consonant symbol is considered adequate (<REF ID="R-26" RPTR="31">Wells, 1995</REF>).</S>
          <S ID="S-3529">In the Indo-Pak languages, we have two characters with IPA [h].</S>
          <S ID="S-3530">Thus to distinguish between the &#8216;h&#8217; consonants and the aspiration, we use underscore &#8216;_&#8217; to mark the aspirate and we encode an aspiration as &#8216;_h&#8217;.</S>
          <S ID="S-3531">For example, the aspirated consonants J [ J [&#648;&#688;], J&#65533;J [p&#688;] and JY &#65533;</S>
        </P>
        <P>
          <S ID="S-3532">[&#679;&#688;] of the Indo-Pak languages</S>
        </P>
        <P>
          <S ID="S-3533">are encoded as &#8216;t`_h&#8217;, &#8216;p_h&#8217; and &#8216;t_S_h&#8217; respectively.</S>
          <S ID="S-3534">Similarly for the dental consonants, we use the &#8216;_d&#8217; marker.</S>
          <S ID="S-3535">For example, the characters &#1583; [&#7699;] and &#1578; [&#7793;] are encoded as &#8216;d_d&#8217; and &#8216;t_d&#8217; in UIT.</S>
          <S ID="S-3536">Table 3 shows the UIT encodings of Hindi and Urdu aspirated consonants.</S>
          <S ID="S-3537">Hindi Urdu UIT Hindi Urdu UIT</S>
        </P>
        <P>
          <S ID="S-3538">&#2349; J[J [b&#688;] b_h &#2361;&#2352;&#2381; |g [r&#688;] r_h</S>
        </P>
        <P>
          <S ID="S-3539">&#2347; J&#65533;J [p&#688;] p_h &#2397; |g [&#637;&#688;] r`_h</S>
        </P>
        <P>
          <S ID="S-3540">&#2341; J [ J [&#7793;&#688;] t_d_h &#2326; J&#207; [k&#688;] k_h</S>
        </P>
        <P>
          <S ID="S-3541">&#2336; J [ J [&#648;&#688;] t`_h &#2328; J&#207; [g&#688;] g_h</S>
        </P>
        <P>
          <S ID="S-3542">&#2333; J Y [ [&#676;&#688;] d_Z_h &#65533;&#2361; J&#224; [l&#688;] l_h</S>
        </P>
        <P>
          <S ID="S-3543">&#2331; J &#65533; Y [&#679;&#688;] t_S_h &#65533;&#2361; Jb [m&#688;] m_h</S>
        </P>
        <P>
          <S ID="S-3544">2 http://www.phon.ucl.ac.uk/home/sampa/</S>
        </P>
        <P>
          <S ID="S-3545">&#2343; |e [&#7699;&#688;] d_d_h &#65533;&#2361; J [ J [n&#688;] n_h</S>
        </P>
        <P>
          <S ID="S-3546">&#2346; &#1662; [p] p &#2395; &#1590; [z] z2</S>
        </P>
        <P>
          <S ID="S-3547">&#2340; &#1578; [&#7793;] t_d &#2340; &#1591; [&#7793;] t_d1</S>
        </P>
        <P>
          <S ID="S-3548">&#2335; &#1657; [&#648;] t` &#2395; &#1592; [z] z3</S>
        </P>
        <P>
          <S ID="S-3549">&#2360; &#1579; [s] s1 - &#1593; [&#660;] ?</S>
        </P>
        <P>
          <S ID="S-3550">&#2332; &#1580; [&#676;] d_Z &#2394; &#1594; [&#611;] X</S>
        </P>
        <P>
          <S ID="S-3551">&#2330; &#1670; [&#679;] t_S &#2398; &#1601; [f] f</S>
        </P>
        <P>
          <S ID="S-3552">&#2361; &#1581; [h] h1 &#2392; &#1602; [q] q</S>
        </P>
        <P>
          <S ID="S-3553">&#2393; &#1582; [x] x &#2325; &#1705; [k] k</S>
        </P>
        <P>
          <S ID="S-3554">&#2342; &#1583; [&#7699;] d_d &#2327; &#1711; [g] g</S>
        </P>
        <P>
          <S ID="S-3555">&#2337; &#1672; [&#598;] d` &#2354; &#1604; [l] l</S>
        </P>
        <P>
          <S ID="S-3556">&#2395; &#1584; [z] z1 &#2350; &#1605; [m] m</S>
        </P>
        <P>
          <S ID="S-3557">&#2352; &#1585; [r] r &#2344; &#1606; [n] n</S>
        </P>
        <P>
          <S ID="S-3558">&#2313; &#1681; [&#637;] r` &#2357; &#1608; [v] v</S>
        </P>
        <P>
          <S ID="S-3559">&#2395; &#1586; [z] z &#2361; &#1729; [h] h</S>
        </P>
        <P>
          <S ID="S-3560">&#2395; &#1688; [&#658;] Z &#2351; &#1740; [j] j</S>
        </P>
        <P>
          <S ID="S-3561">&#2360; &#1587; [s] s &#2340; &#1577; [&#7793;] t_d2</S>
        </P>
        <P>
          <S ID="S-3562">&#2358; &#1588; [&#643;] S &#2339; - [&#627;] n`</S>
        </P>
        <P>
          <S ID="S-3563">&#2359; &#1588; [&#643;] S1 &#9676;&#2306; &#1722; [&#331;] ~</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>5 Finite-state Scriptural Translation Model</HEADER>
      <P>
        <S ID="S-3611">Figure 4 shows the system architecture of our finite-state scriptural translation system.</S>
      </P>
      <P>
        <S ID="S-3612">Text Tokenizer receives and converts the input source language text into constituent words or tokens.</S>
        <S ID="S-3613">This list of the source language tokens is then passed to the UIT Encoder that encodes these tokens into a list of UIT tokens using the source language to UIT conversion transducer from the repertoire of Finite-State Transducers.</S>
        <S ID="S-3614">These UIT tokens are given to the UIT Decoder that decodes them into target language tokens using the UIT to target language conversion transducer from the repertoire of Transducers.</S>
        <S ID="S-3615">Finally, Text Generator generates the target language text from the translated target language tokens.</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>5.1 Finite-state Transducers</HEADER>
        <P>
          <S ID="S-3572">Both conversions of the source language text into the UIT encoded text and from the UIT encoded text into the target language text are regular relations on strings.</S>
          <S ID="S-3573">Moreover, regular relations are closed under serial composition and a finite set of conversion relations when applied to each other&#8217;s output in a specific order, also defines a regular expression (<REF ID="R-09" RPTR="12">Kaplan and Kay, 1994</REF>).</S>
          <S ID="S-3574">Thus we model the conversions from the source language to UIT and from UIT to the target language as finite-state transducers.</S>
          <S ID="S-3575">These translational transducers can be deterministic and nondeterministic.</S>
        </P>
        <P>
          <S ID="S-3576">Character Mappings: Table 5 shows regular relations for converting Hindi and Urdu aspirated consonants into UIT.</S>
          <S ID="S-3577">IPA Hindi to UIT Urdu to UIT b&#688; &#2349; &#8594; b_h J[J &#8594; b_h</S>
        </P>
        <P>
          <S ID="S-3578">p&#688; &#2347; &#8594; p_h J&#65533;J &#8594; p_h</S>
        </P>
        <P>
          <S ID="S-3579">&#7793;&#688; &#2341; &#8594; t_d_h J [ J &#8594; t_d_h</S>
        </P>
        <P>
          <S ID="S-3580">&#648;&#688; &#2336; &#8594; t`_h J [ J &#8594; t`_h</S>
        </P>
        <P>
          <S ID="S-3581">&#676;&#688; &#2333; &#8594; d_Z_h J Y [ &#8594; d_Z_h</S>
        </P>
        <P>
          <S ID="S-3582">&#679;&#688; &#2331; &#8594; t_S_h J &#65533; Y &#8594; t_S_h</S>
        </P>
        <P>
          <S ID="S-3583">&#7699;&#688; &#2343; &#8594; d_d_h |e &#8594; d_d_h</S>
        </P>
        <P>
          <S ID="S-3584">&#598;&#688; &#2338; &#8594; d`_h |e &#8594; d`_h</S>
        </P>
        <P>
          <S ID="S-3585">r&#688; &#2361;&#2352;&#2381; &#8594; r_h |g &#8594; r_h</S>
        </P>
        <P>
          <S ID="S-3586">&#637;&#688; &#2397; &#8594; r`_h |g &#8594; r`_h</S>
        </P>
        <P>
          <S ID="S-3587">k&#688; &#2326; &#8594; k_h J&#207; &#8594; k_h</S>
        </P>
        <P>
          <S ID="S-3588">g&#688; &#2328; &#8594; g_h J&#207; &#8594; g_h</S>
        </P>
        <P>
          <S ID="S-3589">l&#688; &#65533;&#2361; &#8594; l_h J&#224; &#8594; l_h</S>
        </P>
        <P>
          <S ID="S-3590">m&#688; &#65533;&#2361; &#8594; m_h Jb &#8594; m_h</S>
        </P>
        <P>
          <S ID="S-3591">n&#688; &#65533;&#2361; &#8594; n_h J J [ &#8594; n_h Table 5: Regular rules for aspirated consonants of Hindi and Urdu</S>
        </P>
        <P>
          <S ID="S-3592">By interchanging the UIT encodings before the arrow sign and the respective characters of Hindi and Urdu after the arrow, we can construct regular conversion relations from UIT to Hindi and Urdu.</S>
          <S ID="S-3593">We have used XFST (Xerox finitestate engine) to build finite-state transducers.</S>
          <S ID="S-3594">Table 6 shows a sample XFST code.</S>
        </P>
        <P>
          <S ID="S-3595">Contextual Mappings: A contextual mapping is a contextual rule that determines a desired output when a character appears in a certain context.</S>
          <S ID="S-3596">The third command of Table 6 models another contextual mapping saying that &#8216;&#9676;&#2381;&#2361;&#8217; is translated by &#8216;_h&#8217; when it is preceded by any of the characters &#2352;, &#2354;, &#2350;, and &#2344;.</S>
          <S ID="S-3597">The second last rule of Table 6 models the contextual mapping rule that &#8216;A1&#8217; is translated into &#8207;&#8217;&#1729;&#8216;&#8207; when it is at the end of a word and preceded by a consonant.</S>
          <S ID="S-3598">clear stack set char-encoding UTF-8 read regex [&#2367;&#9676; -&gt; I];</S>
        </P>
        <P>
          <S ID="S-3599">read regex [&#2326; -&gt; [k "_" h], &#2328; -&gt; [g</S>
        </P>
        <P>
          <S ID="S-3600">"_" h], &#2331; -&gt; [t "_" S "_" h], &#2333; -</S>
        </P>
        <P>
          <S ID="S-3601">&gt; [d "_" Z "_" h], &#2336; -&gt; [t "`" "_"</S>
        </P>
        <P>
          <S ID="S-3602">h], &#2338; -&gt; [d "`" "_" h], &#2341; -&gt; [t</S>
        </P>
        <P>
          <S ID="S-3603">"_" d "_" h], &#2343; -&gt; [d "_" d "_"</S>
        </P>
        <P>
          <S ID="S-3604">h], &#2347; -&gt; [p "_" h], &#2349; -&gt; [b "_"</S>
        </P>
        <P>
          <S ID="S-3605">h], &#2397; -&gt; [r "`" "_" h], &#2360; -&gt; s, &#2340;</S>
        </P>
        <P>
          <S ID="S-3606">-&gt; [t "_" d], &#2352; -&gt; r, &#2354; -&gt; l, &#2350; -&gt;</S>
        </P>
        <P>
          <S ID="S-3607">m, &#2344; -&gt; n, &#2357; -&gt; v, &#2361; -&gt; h];</S>
        </P>
        <P>
          <S ID="S-3608">read regex [[&#9676;&#2381; &#2361;] -&gt; ["_" h] || [&#2352; |</S>
        </P>
        <P>
          <S ID="S-3609">&#2354; | &#2350; | &#2344;] _ ]; compose net Table 6: Sample XFST code</S>
        </P>
        <P>
          <S ID="S-3610">Vowel representations in Urdu, Punjabi/Shahmukhi, Sindhi, Seraiki/Shahmukhi and Kashmiri are highly context-sensitive (<REF ID="R-15" RPTR="17">Malik et al., 2010</REF>).</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>6 Experiments and Results</HEADER>
      <P>
        <S ID="S-3686">&#2361;&#2376; h{</S>
      </P>
      <P>
        <S ID="S-3687">Text Generator converts the unique output of the UIT Decoder into an Urdu sentence with one error in the fifth word (highlighted), shown in Figure 5.</S>
      </P>
      <P>
        <S ID="S-3688">&#1585;&#1615;&#1608;</S>
      </P>
      <P>
        <S ID="S-3689">&#236; ]gzEgi &#204;&#208; &#225;&#240;Z &#226;&#167; 6&#65533;3G [3Ee</S>
      </P>
      <P>
        <S ID="S-3690">On the other hand, from the ambiguous output of the UIT Decoder, we can generate 240 output sentences, but only one is the correct scriptural translation of the source Hindi sentence in Urdu.</S>
        <S ID="S-3691">The correct sentence is shown in Figure 6.</S>
        <S ID="S-3692">The sole difference between the output of the deterministic FST and the correct scriptural translation is highlighted in both sentences shown in Figure 5 and 6.</S>
      </P>
      <P>
        <S ID="S-3693">&#236; ]gzEu[&#162; &#204;&#208; &#225;&#240;Z &#226;&#167; 6&#65533;3G [3Ee</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>6.1 Test Data</HEADER>
        <P>
          <S ID="S-3616">Table 8 shows test sets for the evaluation of our finite-state scriptural translation system.</S>
        </P>
        <P>
          <S ID="S-3617">Data No.</S>
          <S ID="S-3618">of No.</S>
          <S ID="S-3619">of Language pair Source set words sentences HU Platts Hindi&#8211;Urdu 52,753 - 1 dictionary HU Hindi Hindi&#8211;Urdu 4,281 200 2 corpus HU Urdu Hindi&#8211;Urdu 4,632 226 3 corpus Punjabi/Shahmukhi&#8211; Classical PU 5,069 500 Punjabi/Gurmukhi poetry Seraiki/Shahmukhi&#8211; Seraiki SE 2,087 509 Seraiki/Devanagari poetry Table 8: Test Sets of Hindi, Urdu, Punjabi and Seraiki</S>
        </P>
        <P>
          <S ID="S-3620">HU 1 is a word list obtained from the Platts dictionary 3 (Platts, 1884).</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>6.2 Results</HEADER>
        <P>
          <S ID="S-3621">For Hindi to Urdu scriptural translation, we have applied the finite-state model to all Hindi inputs of HU Test sets 1, 2 and 3.</S>
          <S ID="S-3622">In general, it gives us an Urdu output with the necessary diacritical marks.</S>
          <S ID="S-3623">To evaluate the performance of Hindi to Urdu scriptural translation of our finite-state system against the Urdu without diacritics, we have created a second Urdu output by removing all diacritical marks from the default Urdu output of the finite-state system.</S>
          <S ID="S-3624">We have calculated the Word Accuracy Rate (WAR) and Sentence Accuracy Rate (SAR) for the default and the processed Urdu outputs by comparing them with the Urdu references with and without diacritics respectively.</S>
          <S ID="S-3625">To compute WAR and SAR, we have used the SCLITE utility from the Speech Recognition Scoring Toolkit (SCTK) 4 of NIST.</S>
          <S ID="S-3626">The results of Hindi to Urdu scriptural translation are given in Table 24.</S>
          <S ID="S-3627">Default output Processed output</S>
        </P>
        <P>
          <S ID="S-3628">Test Set Word Sentence Word Sentence Level Level Level Level</S>
        </P>
        <P>
          <S ID="S-3629">HU 1 32.5% - 78.9% - HU 2 90.8% 26.5% 91.0% 27% HU 3 81.2% 8.8% 82.8% 9.7% Table 9:Hindi to Urdu scriptural translation restuls The finite-state scriptural translation system for Hindi to Urdu produces an Urdu output with diacritics.</S>
          <S ID="S-3630">However, we know that the Urdu community is used to see the Urdu text without diacritics.</S>
          <S ID="S-3631">Thus, we removed all diacritical marks from the Urdu output text that is more acceptable to the Urdu community.</S>
          <S ID="S-3632">By this post-processing,</S>
        </P>
        <P>
          <S ID="S-3633">3 Shared by University of Chicago for research purposes.</S>
          <S ID="S-3634">4 http://www.itl.nist.gov/iad/mig//tools/</S>
        </P>
        <P>
          <S ID="S-3635">we gain more than 40% accuracy in case of HU Test Set 1.</S>
          <S ID="S-3636">We also gain in accuracy for the other test sets.</S>
        </P>
        <P>
          <S ID="S-3637">For the classification of our scriptural translation systems, we have devised two scales.</S>
          <S ID="S-3638">One corresponds to the word accuracy rate and the other corresponds to the sentence level accuracy.</S>
          <S ID="S-3639">They are shown in Figure 7 and 8.</S>
        </P>
        <P>
          <S ID="S-3640">accucary rate for scriptural translation</S>
        </P>
        <P>
          <S ID="S-3641">According to the scale of Figure 7 and 8, the Hindi to Urdu scriptural translation system is classified as &#8216;Good&#8217; and &#8216;Good Enough&#8217;, respectively.</S>
        </P>
        <P>
          <S ID="S-3642">The subjective evaluations like usability, effectiveness and adequacy depend on several factors.</S>
          <S ID="S-3643">A user with a good knowledge of Hindi and Urdu languages would rate our Hindi to Urdu system quite high and would also rate the Urdu output very usable.</S>
          <S ID="S-3644">Another user who wants to read a Hindi text, but does not know Hindi, would also rate this system and the Urdu output quite high and very usable respectively, because it serves its purpose.</S>
        </P>
        <P>
          <S ID="S-3645">On the other hand, a user who wants to publish a Hindi book in Urdu, would rate this system not very good.</S>
          <S ID="S-3646">This is because he has to localize the Hindi vocabulary of Sanskrit origin as the acceptance of the Hindi vocabulary in the Urdu</S>
        </P>
        <P>
          <S ID="S-3647">community, target of his published book, is very low.</S>
          <S ID="S-3648">Thus the subjective evaluation depends on various factors and it is not easy to compute such measures for the evaluation of a scriptural translation system, but they are vital in real life.</S>
        </P>
        <P>
          <S ID="S-3649">For Urdu to Hindi scriptural translation, we have two inputs for each HU Test Set.</S>
          <S ID="S-3650">One input contains all diacritical marks and the other does not contain any.</S>
          <S ID="S-3651">On Hindi side, we have a single Hindi reference with which we will compare both Hindi outputs.</S>
          <S ID="S-3652">We already know that it will give us less accuracy rates for the Urdu input without diacritical marks that are mandatory for correct Urdu to Hindi scriptural translation.</S>
          <S ID="S-3653">The results for Urdu to Hindi scriptural translation are given in Table 10.</S>
          <S ID="S-3654">With diacritics Without diacritics</S>
        </P>
        <P>
          <S ID="S-3655">Test Set Word Sentence Word Sentence Level Level Level Level</S>
        </P>
        <P>
          <S ID="S-3656">HU 1 68.0% - 31.2% - HU 2 83.9% 10% 53.0% 1% HU 3 98.4% 73.9% 58.9% 0.4% Table 10: Urdu to Hindi scriptural translation results For the Urdu input with diacritics, the accuracy of the Urdu to Hindi finite-state scriptural translation system is 83.9% at word level for HU Test Set 2 and it is classified as &#8216;GOOD&#8217; the classification scale of Figure 7.</S>
          <S ID="S-3657">On the other hand, it shows a sentence-level accuracy of 10% for the same test set and is classified as &#8216;AVER- AGE&#8217; by the classification scale of Figure 8.</S>
        </P>
        <P>
          <S ID="S-3658">For the Urdu input without diacritics, the Urdu to Hindi scriptural translation system is classified as &#8216;OK&#8217; by the scale of Figure 7 for HU Test set 2 and 3.</S>
          <S ID="S-3659">It is classifies as &#8216;NULL&#8217; for HU Test Set 1.</S>
          <S ID="S-3660">According to the scale of Figure 8, it is classified as &#8216;NULL&#8217; for all three test sets.</S>
        </P>
        <P>
          <S ID="S-3661">For Punjabi scriptural translation, we also developed two types of output default and processed for Gurmukhi to Shahmukhi translation.</S>
          <S ID="S-3662">In the reverse direction, it has two types of inputs, one with diacritics and the other without diacritics.</S>
          <S ID="S-3663">Table 11 and 12 shows results of Punjabi scriptural translation.</S>
          <S ID="S-3664">Default output Processed output</S>
        </P>
        <P>
          <S ID="S-3665">Test Set Word Sentence Word Sentence Level Level Level Level</S>
        </P>
        <P>
          <S ID="S-3666">PU 84.2% 27.8% 85.2% 29.9% Table 11: Gurmukhi to Shahmukhi scriptural translation results</S>
        </P>
        <P>
          <S ID="S-3667">With diacritics Without diacritics Test Set Word Sentence Word Sentence Level Level Level Level PU 98.8% 90.3% 67.3% 6.4%</S>
        </P>
        <P>
          <S ID="S-3668">Compared to the Hindi&#8211;Urdu pair, the Punjabi/Shahmukhi&#8211;Punjabi/Gurmukhi pair is computationally less hard.</S>
          <S ID="S-3669">The post-processing to the default out of the finite-state scriptural translation systems for Punjabi/Gurmukhi to Punjabi/Shahmukhi also helps to gain an increase of approximately 1% and 2% at word and sentence levels respectively.</S>
          <S ID="S-3670">The Shahmukhi to Gurmukhi scriptural translation system is classified as &#8216;GOOD&#8217; by both scales of Figure 7 and 8.</S>
          <S ID="S-3671">Thus the usability of the Punjabi finite-state scriptural translation system is higher than the Hindi&#8211;Urdu finite-state scriptural translation system.</S>
        </P>
        <P>
          <S ID="S-3672">In the reverse direction, the Shahmukhi to Gurmukhi scriptural translation system gives an accuracy of 98.8% and 67.3% for the Shahmukhi input text with and without diacritics respectively.</S>
          <S ID="S-3673">For the Shahmukhi input text with diacritics, the scriptural translation system is classified as &#8216;EXCELLENT&#8217; by both scales.</S>
          <S ID="S-3674">On the other hand, it is classified as &#8216;NULL&#8217; according to the scale of Figure 8 for the Shahmukhi input text without diacritical marks.</S>
        </P>
        <P>
          <S ID="S-3675">Similar to Hindi&#8211;Urdu and Punjabi finite-state scriptural translation, we have applied our finitestate system to the Seraiki test set.</S>
          <S ID="S-3676">Here again, we have developed a processed Seraiki/Shahmukhi output from the default output of our finite-state system by removing the diacritics.</S>
          <S ID="S-3677">The results are given in Table 13 and 14.</S>
          <S ID="S-3678">Default output Processed output</S>
        </P>
        <P>
          <S ID="S-3679">Test Set Word Sentence Word Sentence Level Level Level Level</S>
        </P>
        <P>
          <S ID="S-3680">SE 81.3% 19.4% 83.7% 20.3% Table 13: Seraiki/Devanagari to Seraiki/Shahmukhi scriptural translation results</S>
        </P>
        <P>
          <S ID="S-3681">both at the word and the sentence levels.</S>
          <S ID="S-3682">The accuracy for both the default and the processed Seraiki/Shahmukhi outputs is also more than 80% at word level.</S>
          <S ID="S-3683">The system is classified as &#8216;GOOD&#8217; and &#8216;GOOD ENOUGH&#8217; according to the scale of Figure 7 and 8 respectively.</S>
        </P>
        <P>
          <S ID="S-3684">The absence of diacritical marks in the Seraiki/Shahmukhi has a very bad effect on the accuracy of the finite-state scriptural translation system.</S>
          <S ID="S-3685">The scriptural translation system is classified as &#8216;NULL&#8217; for the Seraiki/Shahmukhi input text without diacritics.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>7 Conclusion</HEADER>
      <P>
        <S ID="S-3694">Finite-state methods are robust and efficient to implement scriptural translation rules in a very precise and compact manner.</S>
        <S ID="S-3695">The missing information and the diacritical marks in the source text proved to be very critical, crucial and important for achieving high and accurate results.</S>
        <S ID="S-3696">The above results support our hypothesis that lack of important information in the source texts considerably lowers the quality of scriptural translation.</S>
        <S ID="S-3697">They are crucial and their absence in the input texts decreases the performance considerably, from more than 80% to less than 60% at word level.</S>
        <S ID="S-3698">Thus restoration of the missing information and the diacritical marks or reducing the effect of their absence on the scriptural translation is one of the major questions for further study and work.</S>
        <S ID="S-3699">In general, only word accuracy rates are reported.</S>
        <S ID="S-3700">We have observed that only word accuracy rates may depict a good performance, but the performance of the same system at sentencelevel may be not very good.</S>
        <S ID="S-3701">Therefore, subjective evaluations and usage of translation results in real life should also be considered while evaluating the translation quality.</S>
      </P>
    </DIV>
  </BODY>
  <ACKNOWLEDGMENTS>
    <P>
      <S ID="S-3702">This study is supported by Higher Education Commission (HEC), Government of Pakistan under its overseas PhD scholarship scheme.</S>
      <S ID="S-3703">We are also thankful to Digital South Asian Library, University of Chicago for sharing Platts dictionary data (Platts, 1884).</S>
    </P>
  </ACKNOWLEDGMENTS>
  <REFERENCES>
    <REFERENCE ID="0">
      <RAUTHOR>N AbdulJaleel</RAUTHOR>
      <REFTITLE>Statistical Transliteration for English-Arabic Cross Language Information Retrieval.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="1">
      <RAUTHOR>Y Al-Onaizan</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="2">
      <RAUTHOR>M Arbabi</RAUTHOR>
      <REFTITLE>Algorithms for Arabic Name Transliteration.</REFTITLE>
      <DATE>1994</DATE>
    </REFERENCE>
    <REFERENCE ID="3">
      <RAUTHOR>C Boitet</RAUTHOR>
      <REFTITLE>On a Phonetic and Structural Encoding of Chinese Characters in Chinese texts.</REFTITLE>
      <DATE>1990</DATE>
    </REFERENCE>
    <REFERENCE ID="4">
      <RAUTHOR>A Fujii</RAUTHOR>
      <REFTITLE>Japanese/English Cross-Language Information Retrieval: exploration of query translation and transliteration.</REFTITLE>
      <DATE>2001</DATE>
    </REFERENCE>
    <REFERENCE ID="5">
      <RAUTHOR>J Halpern</RAUTHOR>
      <REFTITLE>Lexicon-based Orthographic Disambiguation</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="6">
      <RAUTHOR>J Hieronymus</RAUTHOR>
      <REFTITLE>ASCII Phonetic Symbols for the World's Languages: Worldbet. AT&amp;T Bell Laboratories.</REFTITLE>
      <DATE>1993</DATE>
    </REFERENCE>
    <REFERENCE ID="7">
      <RAUTHOR>K S Jeong</RAUTHOR>
      <REFTITLE>Automatic Identification and Backtransliteration of Foreign Words for Information Retrieval.</REFTITLE>
      <DATE>1999</DATE>
    </REFERENCE>
    <REFERENCE ID="8">
      <RAUTHOR>B Kang</RAUTHOR>
      <REFTITLE>Automatic Transliteration and Back Transliteration by Decision Tree</REFTITLE>
      <DATE>2000</DATE>
    </REFERENCE>
    <REFERENCE ID="9">
      <RAUTHOR>R M Kaplan</RAUTHOR>
      <REFTITLE>Regular Models of Phonological Rule Systems.</REFTITLE>
      <DATE>1994</DATE>
    </REFERENCE>
    <REFERENCE ID="10">
      <RAUTHOR>K Knight</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>1998</DATE>
    </REFERENCE>
    <REFERENCE ID="11">
      <RAUTHOR>J S Lee</RAUTHOR>
      <REFTITLE>English to Korean Statistical Transliteration for Information Retrieval.</REFTITLE>
      <DATE>1998</DATE>
    </REFERENCE>
    <REFERENCE ID="12">
      <RAUTHOR>M G A Malik</RAUTHOR>
      <REFTITLE>Towards a Unicode Compatible Punjabi Character Set.</REFTITLE>
      <DATE>2005</DATE>
    </REFERENCE>
    <REFERENCE ID="13">
      <RAUTHOR>M G A Malik</RAUTHOR>
      <REFTITLE>A Hybrid Model for Urdu Hindi Transliteration.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="14">
      <RAUTHOR>M G A Malik</RAUTHOR>
      <REFTITLE>Hindi Urdu Machine Transliteration using Finite-state Transducers.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="15">
      <RAUTHOR>M G A Malik</RAUTHOR>
      <REFTITLE>Analysis of Noori Nast'aleeq for Major Pakistani Languages.</REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="16">
      <RAUTHOR>M Mohri</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>1997</DATE>
    </REFERENCE>
    <REFERENCE ID="17">
      <RAUTHOR>A Pirkola</RAUTHOR>
      <REFTITLE>Fuzzy Translation of Crosslingual Spelling Variants.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="18">
      <RAUTHOR>J T Platts</RAUTHOR>
      <REFTITLE>A Dictionary of Urdu,</REFTITLE>
      <DATE></DATE>
    </REFERENCE>
    <REFERENCE ID="19">
      <RAUTHOR>T Rahman</RAUTHOR>
      <REFTITLE>Language and Politics in Pakistan.</REFTITLE>
      <DATE>1997</DATE>
    </REFERENCE>
    <REFERENCE ID="20">
      <RAUTHOR>T Rahman</RAUTHOR>
      <REFTITLE>Language Policy and Localization in Pakistan: Proposal for a Paradigmatic Shift.</REFTITLE>
      <DATE>2004</DATE>
    </REFERENCE>
    <REFERENCE ID="21">
      <RAUTHOR>A Rai</RAUTHOR>
      <REFTITLE>Hindi Nationalism. Orient Longman Private Limited,</REFTITLE>
      <DATE>2000</DATE>
    </REFERENCE>
    <REFERENCE ID="22">
      <RAUTHOR>E Roche</RAUTHOR>
      <REFTITLE>Finite-state Language Processing.</REFTITLE>
      <DATE>1997</DATE>
    </REFERENCE>
    <REFERENCE ID="23">
      <RAUTHOR>T Sakai</RAUTHOR>
      <REFTITLE>Generating Transliteration Rules for Crosslanguage Information Retrieval from Machine Translation Dictionaries.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="24">
      <RAUTHOR>B Stall</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>1998</DATE>
    </REFERENCE>
    <REFERENCE ID="25">
      <RAUTHOR>P Virga</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="26">
      <RAUTHOR>J C Wells</RAUTHOR>
      <REFTITLE>Computer-coding the IPA: a proposed extension of SAMPA.</REFTITLE>
      <DATE>1995</DATE>
    </REFERENCE>
    <REFERENCE ID="27">
      <RAUTHOR>Q Yan</RAUTHOR>
      <REFTITLE>Automatic Transliteration for Japanese-to-English Text Retrieval.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
  </REFERENCES>
</PAPER>
