<PAPER>
  <FILENO/>
  <TITLE>Joint Tokenization and Translation</TITLE>
  <AUTHORS/>
  <ABSTRACT>
    <A-S ID="S-1133">As tokenization is usually ambiguous for many natural languages such as Chinese and Korean, tokenization errors might potentially introduce translation mistakes for translation systems that rely on 1-best tokenizations.</A-S>
    <A-S ID="S-1134">While using lattices to offer more alternatives to translation systems have elegantly alleviated this problem, we take a further step to tokenize and translate jointly.</A-S>
    <A-S ID="S-1135">Taking a sequence of atomic units that can be combined to form words in different ways as input, our joint decoder produces a tokenization on the source side and a translation on the target side simultaneously.</A-S>
    <A-S ID="S-1136">By integrating tokenization and translation features in a discriminative framework, our joint decoder outperforms the baseline translation systems using 1-best tokenizations and lattices significantly on both Chinese- English and Korean-Chinese tasks.</A-S>
    <A-S ID="S-1137">Interestingly, as a tokenizer, our joint decoder achieves significant improvements over monolingual Chinese tokenizers.</A-S>
  </ABSTRACT>
  <BODY>
    <DIV DEPTH="0">
      <HEADER>1 Introduction</HEADER>
      <P>
        <S ID="S-1138">Tokenization plays an important role in statistical machine translation (SMT) because tokenizing a source-language sentence is always the first step in SMT systems.</S>
        <S ID="S-1139">Based on the type of input, Mi and Huang <REF ID="R-05" RPTR="10">(2008)</REF> distinguish between two categories of SMT systems : string-based systems (<REF ID="R-12" RPTR="16">Koehn et al., 2003</REF>; <REF ID="R-01" RPTR="3">Chiang, 2007</REF>; Galley et al.,</S>
      </P>
      <P>
        <S ID="S-1140">source</S>
      </P>
      <P>
        <S ID="S-1141">target</S>
      </P>
      <P>
        <S ID="S-1142">source</S>
      </P>
      <P>
        <S ID="S-1143">target</S>
      </P>
      <P>
        <S ID="S-1144">string</S>
      </P>
      <P>
        <S ID="S-1145">string</S>
      </P>
      <P>
        <S ID="S-1146">tokenization tokenize translate translation</S>
      </P>
      <P>
        <S ID="S-1147">(a)</S>
      </P>
      <P>
        <S ID="S-1148">tokenize+translate</S>
      </P>
      <P>
        <S ID="S-1149">(b)</S>
      </P>
      <P>
        <S ID="S-1150">tokenization</S>
      </P>
      <P>
        <S ID="S-1151">translation</S>
      </P>
      <P>
        <S ID="S-1152">2006; <REF ID="R-29" RPTR="32">Shen et al., 2008</REF>) that take a string as input and tree-based systems (<REF ID="R-17" RPTR="21">Liu et al., 2006</REF>; <REF ID="R-20" RPTR="24">Mi et al., 2008</REF>) that take a tree as input.</S>
        <S ID="S-1153">Note that a treebased system still needs to first tokenize the input sentence and then obtain a parse tree or forest of the sentence.</S>
        <S ID="S-1154">As shown in Figure 1(a), we refer to this pipeline as separate tokenization and translation because they are divided into single steps.</S>
      </P>
      <P>
        <S ID="S-1155">As tokenization for many languages is usually ambiguous, SMT systems that separate tokenization and translation suffer from a major drawback: tokenization errors potentially introduce translation mistakes.</S>
        <S ID="S-1156">As some languages such as Chinese have no spaces in their writing systems, how to segment sentences into appropriate words has a direct impact on translation performance (<REF ID="R-32" RPTR="36">Xu et al., 2005</REF>; <REF ID="R-00" RPTR="0">Chang et al., 2008</REF>; <REF ID="R-36" RPTR="41">Zhang et al., 2008</REF>).</S>
        <S ID="S-1157">In addition, although agglutinative languages such as Korean incorporate spaces between &#8220;words&#8221;, which consist of multiple morphemes, the granularity is too coarse and makes the training data</S>
      </P>
      <P>
        <S ID="S-1158">considerably sparse.</S>
        <S ID="S-1159">Studies reveal that segmenting &#8220;words&#8221; into morphemes effectively improves translating morphologically rich languages (<REF ID="R-25" RPTR="29">Oflazer, 2008</REF>).</S>
        <S ID="S-1160">More importantly, a tokenization close to a gold standard does not necessarily leads to better translation quality (<REF ID="R-00" RPTR="1">Chang et al., 2008</REF>; <REF ID="R-36" RPTR="42">Zhang et al., 2008</REF>).</S>
        <S ID="S-1161">Therefore, it is necessary to offer more tokenizations to SMT systems to alleviate the tokenization error propagation problem.</S>
        <S ID="S-1162">Recently, many researchers have shown that replacing 1-best tokenizations with lattices improves translation performance significantly (<REF ID="R-32" RPTR="37">Xu et al., 2005</REF>; <REF ID="R-04" RPTR="9">Dyer et al., 2008</REF>; <REF ID="R-06" RPTR="13">Dyer, 2009</REF>).</S>
      </P>
      <P>
        <S ID="S-1163">We take a next step towards the direction of offering more tokenizations to SMT systems by proposing joint tokenization and translation.</S>
        <S ID="S-1164">As shown in Figure 1(b), our approach tokenizes and translates jointly to find a tokenization and a translation for a source-language string simultaneously.</S>
        <S ID="S-1165">We integrate translation and tokenization models into a discriminative framework (<REF ID="R-22" RPTR="26">Och and Ney, 2002</REF>), within which tokenization and translation models interact with each other.</S>
        <S ID="S-1166">Experiments show that joint tokenization and translation outperforms its separate counterparts (1- best tokenizations and lattices) significantly on the NIST 2004 and 2005 Chinese-English test sets.</S>
        <S ID="S-1167">Our joint decoder also reports positive results on Korean-Chinese translation.</S>
        <S ID="S-1168">As a tokenizer, our joint decoder achieves significantly better tokenization accuracy than three monolingual Chinese tokenizers.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>2 Separate Tokenization and Translation</HEADER>
      <P>
        <S ID="S-1169">Tokenization is to split a string of characters into meaningful elements, which are often referred to as words.</S>
        <S ID="S-1170">Typically, machine translation separates tokenization from decoding as a preprocessing step.</S>
        <S ID="S-1171">An input string is first preprocessed by a tokenizer, and then is translated based on the tokenized result.</S>
        <S ID="S-1172">Take the SCFG-based model (<REF ID="R-01" RPTR="4">Chiang, 2007</REF>) as an example.</S>
        <S ID="S-1173">Given the character sequence of Figure 2(a), a tokenizer first splits it into the word sequence as shown in Figure 2(b), then the decoder translates the word sequence using the rules in Table 1.</S>
        <S ID="S-1174">This approach makes the translation process simple and efficient.</S>
        <S ID="S-1175">However, it may not be</S>
      </P>
      <P>
        <S ID="S-1176">&#65533; &#65533; &#65533; &#65533; &#65533; &#65533; &#65533;</S>
      </P>
      <P>
        <S ID="S-1177">0 1 2 3 4 5 6 7</S>
      </P>
      <P>
        <S ID="S-1178">optimal for machine translation.</S>
        <S ID="S-1179">Firstly, optimal granularity is unclear for machine translation.</S>
        <S ID="S-1180">We might face severe data sparseness problem by using large granularity, while losing much useful information with small one.</S>
        <S ID="S-1181">Consider the example in Figure 2.</S>
        <S ID="S-1182">It is reasonable to split duo fen into two words as duo and fen, since they have oneto-one alignments to the target side.</S>
        <S ID="S-1183">Nevertheless, while you and wang also have one-to-one alignments, it is risky to segment them into two words.</S>
        <S ID="S-1184">Because the decoder is prone to translate wang as a verb look without the context you.</S>
        <S ID="S-1185">Secondly, there may be tokenization errors.</S>
        <S ID="S-1186">In Figure2(c), tao fei ke is recognized as a Chinese person name with the second name tao and the first name fei-ke, but the whole string tao fei ke should be a name of the Indonesian badminton player.</S>
      </P>
      <P>
        <S ID="S-1187">Therefore, it is necessary to offer more tokenizations to SMT systems to alleviate the tokenization error propagation problem.</S>
        <S ID="S-1188">Recently, many researchers have shown that replacing 1- best tokenizations with lattices improves translation performance significantly.</S>
        <S ID="S-1189">In this approach, a lattice compactly encodes many tokenizations and is fixed before decoding.</S>
      </P>
      <P>
        <S ID="S-1190">1 2</S>
      </P>
      <P>
        <S ID="S-1191">0 1 2 3 4 5 6 7</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>3 Joint Tokenization and Translation</HEADER>
      <P>
        <S ID="S-1271"></S>
      </P>
      <DIV DEPTH="1">
        <HEADER>3.1 Model</HEADER>
        <P>
          <S ID="S-1192">We take a next step towards the direction of offering more tokenizations to SMT systems by proposing joint tokenization and translation.</S>
          <S ID="S-1193">As shown in Figure 1(b), the decoder takes an untokenized string as input, and then tokenizes the source side string while building the corresponding translation of the target side.</S>
          <S ID="S-1194">Since the traditional rules like those in Table 1 natively include tokenization information, we can directly apply them for simultaneous construction of tokenization and translation by the source side and target side of rules respectively.</S>
          <S ID="S-1195">In Figure 3, our joint model takes the character sequence in Figure 2(a) as input, and synchronously conducts both translation and tokenization using the rules in Table 1.</S>
        </P>
        <P>
          <S ID="S-1196">As our model conducts tokenization during decoding, we can integrate tokenization models as features together with translation features under the discriminative framework.</S>
          <S ID="S-1197">We expect tokenization and translation could collaborate with each other.</S>
          <S ID="S-1198">Tokenization offers translation with good tokenized results, while translation helps tokenization to eliminate ambiguity.</S>
          <S ID="S-1199">Formally, the probability of a derivation D is represented as</S>
        </P>
        <P>
          <S ID="S-1200">P (D) &#8733; &#8719; i</S>
        </P>
        <P>
          <S ID="S-1201">&#966; i (D) &#955; i (1)</S>
        </P>
        <P>
          <S ID="S-1202">where &#966; i are features defined on derivations including translation and tokenization, and &#955; i are feature weights.</S>
          <S ID="S-1203">We totally use 16 features:</S>
        </P>
        <P>
          <S ID="S-1204">&#8226; 8 traditional translation features (<REF ID="R-01" RPTR="5">Chiang, 2007</REF>): 4 rule scores (direct and reverse translation scores; direct and reverse lexical translation scores); language model of the target side; 3 penalties for word count, extracted rule and glue rule.</S>
        </P>
        <P>
          <S ID="S-1205">&#8226; 8 tokenization features: maximum entropy model, language model and word count of the source side (Section 3.2).</S>
          <S ID="S-1206">To handle the Out Of Vocabulary (OOV) problem (Section 3.3), we also introduce 5 OOV features: OOV character count and 4 OOV discount features.</S>
        </P>
        <P>
          <S ID="S-1207">Since our model is still a string-based model, the CKY algorithm and cube pruning are still applicable for our model to find the derivation with max score.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.2 Adding Tokenization Features</HEADER>
        <P>
          <S ID="S-1208">Maximum Entropy model (ME).</S>
          <S ID="S-1209">We first introduce ME model feature for tokenization by casting it as a labeling problem (<REF ID="R-34" RPTR="39">Xue and Shen, 2003</REF>; <REF ID="R-21" RPTR="25">Ng and Low, 2004</REF>).</S>
          <S ID="S-1210">We label a character with the following 4 types:</S>
        </P>
        <P>
          <S ID="S-1211">&#8226; b: the begin of a word</S>
        </P>
        <P>
          <S ID="S-1212">&#8226; m: the middle of a word</S>
        </P>
        <P>
          <S ID="S-1213">&#8226; e: the end of a word</S>
        </P>
        <P>
          <S ID="S-1214">&#8226; s: a single-character word</S>
        </P>
        <P>
          <S ID="S-1215">Taking the tokenization you-wang of the string you wang for example, we first create a label sequence b e for the tokenization you-wang and then calculate the probability of tokenization by</S>
        </P>
        <P>
          <S ID="S-1216">P (you-wang | you wang)</S>
        </P>
        <P>
          <S ID="S-1217">= P (b e | you wang)</S>
        </P>
        <P>
          <S ID="S-1218">= P (b | you, you wang)</S>
        </P>
        <P>
          <S ID="S-1219">&#215; P (e | wang, you wang)</S>
        </P>
        <P>
          <S ID="S-1220">Given a tokenization w1 L with L words for a character sequence c n 1 , we firstly create labels ln 1 for every characters and then calculate the probability by</S>
        </P>
        <P>
          <S ID="S-1221">n</S>
        </P>
        <P>
          <S ID="S-1222">P (w1 L |cn 1 ) = P (ln 1 |cn 1 ) = &#8719; P (l i |c i , c n 1 ) (2)</S>
        </P>
        <P>
          <S ID="S-1223">i=1</S>
        </P>
        <P>
          <S ID="S-1224">Under the ME framework, the probability of assigning the character c with the label l is represented as:</S>
        </P>
        <P>
          <S ID="S-1225">P (l|c, c n 1 ) = exp[&#8721; i &#955; ih i (l, c, c n 1 )] &#8721;l &#8242; exp[&#8721; i &#955; ih i (l &#8242; , c, c n 1 )] (3)</S>
        </P>
        <P>
          <S ID="S-1226">where h i is feature function, &#955; i is the feature weight of h i .</S>
          <S ID="S-1227">We use the feature templates the same as <REF ID="R-11" RPTR="15">Jiang et al., (2008)</REF><REF ID="R-05" RPTR="11">(2008)</REF> to extract features for ME model.</S>
          <S ID="S-1228">Since we directly construct tokenization when decoding, it is straight to calculate the ME model score of a tokenization according to formula (2) and (3).</S>
        </P>
        <P>
          <S ID="S-1229">Language Model (LM).</S>
          <S ID="S-1230">We also use the n- gram language model to calculate the probability of a tokenization w L 1 :</S>
        </P>
        <P>
          <S ID="S-1231">P (w L 1 ) = L &#8719;</S>
        </P>
        <P>
          <S ID="S-1232">i=1</S>
        </P>
        <P>
          <S ID="S-1233">P (w i |w i&#8722;1 i&#8722;n+1 ) (4)</S>
        </P>
        <P>
          <S ID="S-1234">For instance, we compute the probability of the tokenization shown in Figure 2(b) under a 3-gram model by</S>
        </P>
        <P>
          <S ID="S-1235">P (tao-fei-ke)</S>
        </P>
        <P>
          <S ID="S-1236">&#215;P (you-wang | tao-fei-ke)</S>
        </P>
        <P>
          <S ID="S-1237">&#215;P (duo | tao-fei-ke, you-wang)</S>
        </P>
        <P>
          <S ID="S-1238">&#215;P (fen | you-wang, duo)</S>
        </P>
        <P>
          <S ID="S-1239">Word Count (WC).</S>
          <S ID="S-1240">This feature counts the number of words in a tokenization.</S>
          <S ID="S-1241">Language model is prone to assign higher probabilities to short sentences in a biased way.</S>
          <S ID="S-1242">This feature can compensate this bias by encouraging long sentences.</S>
          <S ID="S-1243">Furthermore, using this feature, we can optimize the granularity of tokenization for translation.</S>
          <S ID="S-1244">If larger granularity is preferable for translation, then we can use this feature to punish the tokenization containing more words.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.3 Considering All Tokenizations</HEADER>
        <P>
          <S ID="S-1245">Obviously, we can construct the potential tokenizations and translations by only using the extracted rules, in line with traditional translation decoding.</S>
          <S ID="S-1246">However, it may limits the potential tokenization space.</S>
          <S ID="S-1247">Consider a string you wang.</S>
          <S ID="S-1248">If you-wang is not reachable by the extracted rules, the tokenization you-wang will never be considered under this way.</S>
          <S ID="S-1249">However, the decoder may still create a derivation by splitting the string as small as possible with tokenization you wang and translating you with a and wang with look, which may hurt the translation performance.</S>
          <S ID="S-1250">This case happens frequently for named entity especially.</S>
          <S ID="S-1251">Overall, it is necessary to assure that the decoder can derive all potential tokenizations (Section 4.1.3).</S>
        </P>
        <P>
          <S ID="S-1252">To assure that, when a span is not tokenized into a single word by the extracted rules, we will add an operation, which is considering the entire span as an OOV.</S>
          <S ID="S-1253">That is, we tokenize the entire span into a single word with a translation that is the copy of source side.</S>
          <S ID="S-1254">We can define the set of all potential tokenizations &#964;(c n 1 ) for the character sequence c n 1 in a recursive way by</S>
        </P>
        <P>
          <S ID="S-1255">n&#8722;1</S>
        </P>
        <P>
          <S ID="S-1256">&#964;(c n 1 ) = &#8899; {&#964;(c i 1 ) &#8855; {w(c n i+1 )}} (5)</S>
        </P>
        <P>
          <S ID="S-1257">i</S>
        </P>
        <P>
          <S ID="S-1258">here w(c n i+1 ) means a word contains characters c n i+1 and &#8855; means the times of two sets.</S>
          <S ID="S-1259">According to this recursive definition, it is easy to prove that all tokenizations is reachable by using the glue rule (S &#8658; SX, SX) and the added operation.</S>
          <S ID="S-1260">Here, glue rule is used to concatenate the translation and tokenization of the two variables S and X, which acts the role of the operator &#8855; in equation (5).</S>
          <S ID="S-1261">Consequently, this introduces a large number of OOVs.</S>
          <S ID="S-1262">In order to control the generation of OOVs, we introduce the following OOV features: OOV Character Count (OCC).</S>
          <S ID="S-1263">This feature counts the number of characters covered by OOV.</S>
          <S ID="S-1264">We can control the number of OOV characters by this feature.</S>
          <S ID="S-1265">It counts 3 when tao-fei-ke is an OOV, since tao-fei-ke has 3 characters.</S>
        </P>
        <P>
          <S ID="S-1266">OOV Discount (OD).</S>
          <S ID="S-1267">The chances to be OOVs vary for words with different counts of characters.</S>
          <S ID="S-1268">We can directly attack this problem by adding features OD i that reward or punish OOV words which contains with i characters, or OD i,j for OOVs contains with i to j characters.</S>
          <S ID="S-1269">4 OD features are used in this paper: 1, 2, 3 and 4+.</S>
          <S ID="S-1270">For example, OD 3 counts 1 when the word tao-fei-ke is an OOV.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>4 Experiments</HEADER>
      <P>
        <S ID="S-1387">In this section, we try to answer the following questions:</S>
      </P>
      <P>
        <S ID="S-1388">1.</S>
        <S ID="S-1389">Does the joint method outperform conventional methods that separate tokenization from decoding.</S>
        <S ID="S-1390">(Section 4.1)</S>
      </P>
      <P>
        <S ID="S-1391">2.</S>
        <S ID="S-1392">How about the tokenization performance of the joint decoder?</S>
        <S ID="S-1393">(Section 4.2)</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>4.1 Translation Evaluation</HEADER>
        <P>
          <S ID="S-1272">We use the SCFG model (<REF ID="R-01" RPTR="6">Chiang, 2007</REF>) for our experiments.</S>
          <S ID="S-1273">We firstly work on the Chinese- English translation task.</S>
          <S ID="S-1274">The bilingual training data contains 1.5M sentence pairs coming from LDC data.</S>
          <S ID="S-1275">1 The monolingual data for training English language model includes Xinhua portion of the GIGAWORD corpus, which contains 238M English words.</S>
          <S ID="S-1276">We use the NIST evaluation sets of 2002 (MT02) as our development data set, and sets of 2004(MT04) and 2005(MT05) as test sets.</S>
          <S ID="S-1277">We use the corpus derived from the People&#8217;s Daily (Renmin Ribao) in Feb.</S>
          <S ID="S-1278">to Jun.</S>
          <S ID="S-1279">1998 containing 6M words for training LM and ME tokenization models.</S>
        </P>
        <P>
          <S ID="S-1280">Translation Part.</S>
          <S ID="S-1281">We used GIZA++ (<REF ID="R-23" RPTR="27">Och and Ney, 2003</REF>) to perform word alignment in both directions, and grow-diag-final-and (<REF ID="R-12" RPTR="17">Koehn et al., 2003</REF>) to generate symmetric word alignment.</S>
          <S ID="S-1282">We extracted the SCFG rules as describing in Chiang <REF ID="R-19" RPTR="23">(2007)</REF>.</S>
          <S ID="S-1283">The language model were trained by the</S>
        </P>
        <P>
          <S ID="S-1284">SRILM toolkit (<REF ID="R-31" RPTR="35">Stolcke, 2002</REF>).</S>
          <S ID="S-1285">2 Case insensitive NIST BLEU (<REF ID="R-27" RPTR="31">Papineni et al., 2002</REF>) was used to measure translation performance.</S>
        </P>
        <P>
          <S ID="S-1286">Tokenization Part.</S>
          <S ID="S-1287">We used the toolkit implemented by Zhang (2004) to train the ME model.</S>
          <S ID="S-1288">Three Chinese word segmenters were used for comparing: ICTCLAS (ICT) developed by institute of Computing Technology Chinese Academy of Sciences (<REF ID="R-35" RPTR="40">Zhang et al., 2003</REF>); SF developed at Stanford University (<REF ID="R-10" RPTR="14">Huihsin et al., 2005</REF>) and ME which exploits the ME model described in section (3.2).</S>
        </P>
        <P>
          <S ID="S-1289">4.1.1 Joint Vs.</S>
          <S ID="S-1290">Separate</S>
        </P>
        <P>
          <S ID="S-1291">We compared our joint tokenization and translation with the conventional separate methods.</S>
          <S ID="S-1292">The input of separate tokenization and translation can either be a single segmentation or a lattice.</S>
          <S ID="S-1293">The lattice combines the 1-best segmentations of segmenters.</S>
          <S ID="S-1294">Same as <REF ID="R-04" RPTR="8">Dyer et al., (2008)</REF><REF ID="R-05" RPTR="12">(2008)</REF>, we also extracted rules from a combined bilingual corpus which contains three copies from different segmenters.</S>
          <S ID="S-1295">We refer to this version of rules as All.</S>
        </P>
        <P>
          <S ID="S-1296">Table 2 shows the result.</S>
          <S ID="S-1297">3 Using all rule table, our joint method significantly outperforms the best single system SF by +1.96 and +1.66 points on MT04 and MT05 respectively, and also outperforms the lattice-based system by +1.46 and +0.93 points.</S>
          <S ID="S-1298">However, the 8 tokenization features have small impact on the lattice system, probably because the tokenization space limited</S>
        </P>
        <P>
          <S ID="S-1299">2 The calculation of LM probabilities for OOVs is done</S>
        </P>
        <P>
          <S ID="S-1300">by the SRILM without special treatment by ourself.</S>
          <S ID="S-1301">3 The weights are retrained for different test conditions, so</S>
        </P>
        <P>
          <S ID="S-1302">do the experiments in other sections.</S>
        </P>
        <P>
          <S ID="S-1303">ME LM WC OCC OD MT05 &#215; &#215; &#215; &#215; &#215; 24.97 &#8730; &#8730; &#215; &#215; &#215; &#215; 25.30</S>
        </P>
        <P>
          <S ID="S-1304">&#215; &#8730; &#215; &#215; &#215; 24.70</S>
        </P>
        <P>
          <S ID="S-1305">&#215; &#215; &#8730; &#215; &#215; 24.84</S>
        </P>
        <P>
          <S ID="S-1306">&#215; &#215; &#215; &#8730; &#215; 25.51</S>
        </P>
        <P>
          <S ID="S-1307">&#215; &#215; &#215; &#215; 25.34 &#8730; &#8730;</S>
        </P>
        <P>
          <S ID="S-1308">&#8730; &#215; &#8730; &#8730; &#8730; &#215; &#8730; &#215; 25.74</S>
        </P>
        <P>
          <S ID="S-1309">26.37</S>
        </P>
        <P>
          <S ID="S-1310">by lattice has been created from good tokenization.</S>
          <S ID="S-1311">Not surprisingly, our decoding method is about 2.6 times slower than lattice method with tokenization features, since the joint decoder takes character sequences as input, which is about 1.7 times longer than the corresponding word sequences tokenized by segmenters.</S>
          <S ID="S-1312">(Section 4.1.4).</S>
          <S ID="S-1313">The number of extracted rules with different segment methods are quite close, while the All version contains about 45% more rules than the single systems.</S>
          <S ID="S-1314">With the same rule table, our joint method improves the performance over separate method up to +3.03 and +3.26 points (ME).</S>
          <S ID="S-1315">Interestingly, comparing with the separate method, the tokenization of training data has smaller effect on joint method.</S>
          <S ID="S-1316">The BLEU scores of MT04 and MT05 fluctuate about 0.5 and 0.7 points when applying the joint method, while the difference of separate method is up to 2 and 3 points respectively.</S>
          <S ID="S-1317">It shows that the joint method is more robust to segmentation performance.</S>
        </P>
        <P>
          <S ID="S-1318">4.1.2 Effect of Tokenization Model</S>
        </P>
        <P>
          <S ID="S-1319">We also investigated the effect of tokenization features on translation.</S>
          <S ID="S-1320">In order to reduce the time for tuning weights and decoding, we extracted rules from the FBIS part of the bilingual corpus, and trained a 4-gram English language model on the English side of FBIS.</S>
        </P>
        <P>
          <S ID="S-1321">Table 3 shows the result.</S>
          <S ID="S-1322">Only using the 8 translation features, our system achieves a BLEU score of 24.97.</S>
          <S ID="S-1323">By activating all tokenization features, the joint decoder obtains an absolute improvement by 1.4 BLEU points.</S>
          <S ID="S-1324">When only adding one single tokenization feature, the LM and WC fail to show improvement, which may result from their bias to short or long tokenizations.</S>
          <S ID="S-1325">How- ever, these two features have complementary advantages and collaborate well when using them together (line 8).</S>
          <S ID="S-1326">The OCC and OD features also contribute improvements which reflects the fact that handling the generation of OOV is important for the joint model.</S>
        </P>
        <P>
          <S ID="S-1327">4.1.3 Considering All Tokenizations?</S>
        </P>
        <P>
          <S ID="S-1328">In order to explain the necessary of considering all potential tokenizations, we compare the performances of whether to tokenize a span as a single word or not as illustrated in section 3.3.</S>
          <S ID="S-1329">When only tokenizing by the extracted rules, we obtain 34.37 BLEU on MT05, which is about 0.5 points lower than considering all tokenizations shown in Table 2.</S>
          <S ID="S-1330">This indicates that spuriously limitation of the tokenization space may degenerate translation performance.</S>
        </P>
        <P>
          <S ID="S-1331">4.1.4 Results Analysis</S>
        </P>
        <P>
          <S ID="S-1332">To better understand why the joint method can improve the translation quality, this section shows some details of the results on the MT05 data set.</S>
        </P>
        <P>
          <S ID="S-1333">Table 4 shows the granularity and OOV word counts of different configurations.</S>
          <S ID="S-1334">The lattice method reduces the OOV words quite a lot which is 23% and 70% comparing with ICT and ME.</S>
          <S ID="S-1335">In contrast, the joint method gain an absolute improvement even thought the OOV count do not decrease.</S>
          <S ID="S-1336">It seems the lattice method prefers to translate more characters (since smaller granularity and less OOVs), while our method is inclined to maintain integrity of words (since larger granularity and more OOVs).</S>
          <S ID="S-1337">This also explains the difficulty of deciding optimal tokenization for translation before decoding.</S>
          <S ID="S-1338">There are some named entities or idioms that</S>
        </P>
        <P>
          <S ID="S-1339">are split into smaller granularity by the segmenters.</S>
          <S ID="S-1340">For example:&#8220;&#65533;&#252;&#8221; which is an English name &#8220;Stone&#8221; or &#8220;&#65533;-&#65533;-&#217;&#8221; which means &#8220;teenage&#8221;.</S>
          <S ID="S-1341">Although the separate method is possible to translate them using smaller granularity, the translation results are in fact wrong.</S>
          <S ID="S-1342">In contrast, the joint method tokenizes them as entire OOV words, however, it may result a better translation for the whole sentence.</S>
        </P>
        <P>
          <S ID="S-1343">We also count the overlap of the segments used by the Joint All system towards the single segmentation systems.</S>
          <S ID="S-1344">The tokenization result of Joint All contains 29, 644 words, and shares 28, 159 , 27, 772 and 27, 407 words with ICT , SF and ME respectively.</S>
          <S ID="S-1345">And 46 unique words appear only in the joint method, where most of them are named entity.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>4.2 Chinese Word Segmentation Evaluation</HEADER>
        <P>
          <S ID="S-1346">We also test the tokenization performance of our model on Chinese word segmentation task.</S>
          <S ID="S-1347">We randomly selected 3k sentences from the corpus of People&#8217;s Daily in Jan.</S>
          <S ID="S-1348">1998.</S>
          <S ID="S-1349">1k sentences were used for tuning weights, while the other 2k sentences were for testing.</S>
          <S ID="S-1350">We use MERT (<REF ID="R-24" RPTR="28">Och, 2003</REF>) to tune the weights by minimizing the error measured by F 1 score.</S>
        </P>
        <P>
          <S ID="S-1351">As shown in Table 5, with all features activated, our joint decoder achieves an F 1 score of 97.70 which reduces the tokenization error comparing with the best single segmenter ICT by 8.7%.</S>
          <S ID="S-1352">Similar to the translation performance evaluation, our joint decoder outperforms the best segmenter with any version of rule tables.</S>
        </P>
        <P>
          <S ID="S-1353">4.2.1 Effect of Target Side Information</S>
        </P>
        <P>
          <S ID="S-1354">We compared the effect of the 4 Rule Scores (RS), target side Language Model (LM) on tokenization.</S>
          <S ID="S-1355">Table 6 shows the effect on Chinese word segmentation.</S>
          <S ID="S-1356">When only use tokenization features, our joint decoder achieves an F 1 score of 97.37.</S>
          <S ID="S-1357">Only integrating language model or rule scores, the joint decoder achieves an absolute improvement of 0.3 point in F 1 score, which reduces the error rate by 11.4%.</S>
          <S ID="S-1358">However, when combining them together, the F 1 score deduces slightly, which may result from the weight tuning.</S>
          <S ID="S-1359">Using all feature, the performance comes to 97.70.</S>
          <S ID="S-1360">Overall, our experiment shows that the target side information can improve the source side tokenization under a supervised way, and outperform stateof-the-art systems.</S>
        </P>
        <P>
          <S ID="S-1361">4.2.2 Best Tokenization = Best Translation?</S>
        </P>
        <P>
          <S ID="S-1362">Previous works (<REF ID="R-36" RPTR="43">Zhang et al., 2008</REF>; <REF ID="R-00" RPTR="2">Chang et al., 2008</REF>) have shown that preprocessing the input string for decoder by better segmenters do not always improve the translation quality, we reverify this by testing whether the joint decoder produces good tokenization and good translation at the same time.</S>
          <S ID="S-1363">To answer the question, we used the feature weights optimized by maximizing BLEU for tokenization and used the weights optimized by maximizing F 1 for translation.</S>
          <S ID="S-1364">We test BLEU on MT05 and F 1 score on the test data used in segmentation evaluation experiments.</S>
          <S ID="S-1365">By tuning weights regarding to BLEU (the configuration for Joint All in table 2), our decoder achieves a BLEU score of 34.88 and an F 1 score of 92.49.</S>
          <S ID="S-1366">Similarly, maximizing F 1 (the configuration for the last line in table 6) leads to a much lower BLEU of 27.43, although the F 1 is up to 97.70.</S>
          <S ID="S-1367">This suggests that better tokenization may not always lead to better translations and vice versa</S>
        </P>
        <P>
          <S ID="S-1368">Rule #Rule Method Test Time Morph 46M 21.61 4.12 Separate Refined 55M 21.21 4.63 All 74M Joint 21.93* 5.10</S>
        </P>
        <P>
          <S ID="S-1369">even by the joint decoding.</S>
          <S ID="S-1370">This also indicates the hard of artificially defining the best tokenization for translation.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>4.3 Korean-Chinese Translation</HEADER>
        <P>
          <S ID="S-1371">We also test our model on a quite different task: Korean-Chinese.</S>
          <S ID="S-1372">Korean is an agglutinative language, which comes from different language family comparing with Chinese.</S>
        </P>
        <P>
          <S ID="S-1373">We used a newswire corpus containing 256k sentence pairs as training data.</S>
          <S ID="S-1374">The development and test data set contain 1K sentence each with one single reference.</S>
          <S ID="S-1375">We used the target side of training set for language model training.</S>
          <S ID="S-1376">The Korean part of these data were tokenized into morpheme sequence as atomic unit for our experiments.</S>
        </P>
        <P>
          <S ID="S-1377">We compared three methods.</S>
          <S ID="S-1378">First is directly use morpheme sequence (Morph).</S>
          <S ID="S-1379">The second one is refined data (Refined), where we use selective morphological segmentation (<REF ID="R-25" RPTR="30">Oflazer, 2008</REF>) for combining morpheme together on the training data.</S>
          <S ID="S-1380">Since the selective method needs alignment information which is unavailable in the decoding, the test data is still of morpheme sequence.</S>
          <S ID="S-1381">These two methods still used traditional decoding method.</S>
          <S ID="S-1382">The third one extracting rules from combined (All) data of methods 1 and 2, and using joint decoder to exploit the different granularity of rules.</S>
        </P>
        <P>
          <S ID="S-1383">Table 7 shows the result.</S>
          <S ID="S-1384">Since there is no gold standard data for tokenization, we do not use ME and LM tokenization features here.</S>
          <S ID="S-1385">However, our joint method can still significantly (p &lt; 0.05) improve the performance by about +0.3 points.</S>
          <S ID="S-1386">This also reflects the importance of optimizing granularity for morphological complex languages.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>5 Related Work</HEADER>
      <P>
        <S ID="S-1394">Methods have been proposed to optimize tokenization for word alignment.</S>
        <S ID="S-1395">For example, word alignment can be simplified by packing (<REF ID="R-18" RPTR="22">Ma et al., 2007</REF>) several consecutive words together.</S>
        <S ID="S-1396">Word alignment and tokenization can also be optimized by maximizing the likelihood of bilingual corpus (<REF ID="R-02" RPTR="7">Chung and Gildea, 2009</REF>; <REF ID="R-33" RPTR="38">Xu et al., 2008</REF>).</S>
        <S ID="S-1397">In fact, these work are orthogonal to our joint method, since they focus on training step while we are concerned of decoding.</S>
        <S ID="S-1398">We believe we can further the performance by combining these two kinds of work.</S>
      </P>
      <P>
        <S ID="S-1399">Our work also has connections to multilingual tokenization (<REF ID="R-30" RPTR="34">Snyder and Barzilay, 2008</REF>).</S>
        <S ID="S-1400">While they have verified that tokenization can be improved by multilingual learning, our work shows that we can also improve tokenization by collaborating with translation task in a supervised way.</S>
      </P>
      <P>
        <S ID="S-1401">More recently, <REF ID="R-15" RPTR="19">Liu and Liu (2010)</REF><REF ID="R-16" RPTR="20">(2010)</REF> also shows the effect of joint method.</S>
        <S ID="S-1402">They integrate parsing and translation into a single step and improve the performance of translation significantly.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>6 Conclusion</HEADER>
      <P>
        <S ID="S-1403">We have presented a novel method for joint tokenization and translation which directly combines the tokenization model into the decoding phase.</S>
        <S ID="S-1404">Allowing tokenization and translation to collaborate with each other, tokenization can be optimized for translation, while translation also makes contribution to tokenization performance under a supervised way.</S>
        <S ID="S-1405">We believe that our approach can be applied to other string-based model such as phrase-based model (<REF ID="R-12" RPTR="18">Koehn et al., 2003</REF>), stringto-tree model (Galley et al., 2006) and string-todependency model (<REF ID="R-29" RPTR="33">Shen et al., 2008</REF>).</S>
      </P>
      <P>
        <S ID="S-1406">The authors were supported by SK Telecom C&amp;I Business, and National Natural Science Foundation of China, Contracts 60736014 and 60903138.</S>
        <S ID="S-1407">We thank the anonymous reviewers for their insightful comments.</S>
        <S ID="S-1408">We are also grateful to Wenbin Jiang, Zhiyang Wang and Zongcheng Ji for their helpful feedback.</S>
      </P>
    </DIV>
  </BODY>
  <ACKNOWLEDGMENTS/>
  <REFERENCES>
    <REFERENCE ID="0">
      <RAUTHOR>Pi-Chuan Chang</RAUTHOR>
      <REFTITLE>Optimizing Chinese word segmentation for machine translation performance.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="1">
      <RAUTHOR>David Chiang</RAUTHOR>
      <REFTITLE>Hierarchical phrase-based translation.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="2">
      <RAUTHOR>Tagyoung Chung</RAUTHOR>
      <REFTITLE>Unsupervised tokenization for machine translation.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="3">
      <RAUTHOR>EMNLP</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="4">
      <RAUTHOR>Christopher Dyer</RAUTHOR>
      <REFTITLE>Generalizing word lattice translation.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="5">
      <RAUTHOR></RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="6">
      <RAUTHOR>Chris Dyer</RAUTHOR>
      <REFTITLE>Using a maximum entropy model to build segmentation lattices for mt.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="7">
      <RAUTHOR>NAACL</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="8">
      <RAUTHOR>Michel Galley</RAUTHOR>
      <REFTITLE>Scalable inference and training of context-rich syntactic translation models.</REFTITLE>
      <DATE>2006</DATE>
    </REFERENCE>
    <REFERENCE ID="9">
      <RAUTHOR>ACL</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2006</DATE>
    </REFERENCE>
    <REFERENCE ID="10">
      <RAUTHOR>Tseng Huihsin</RAUTHOR>
      <REFTITLE>A conditional random field word segmenter.</REFTITLE>
      <DATE>2005</DATE>
    </REFERENCE>
    <REFERENCE ID="11">
      <RAUTHOR>Wenbin Jiang</RAUTHOR>
      <REFTITLE>A cascaded linear model for joint chinese word segmentation and part-of-speech tagging.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="12">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Statistical phrase-based translation.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="13">
      <RAUTHOR>HLT-NAACL</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="14">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Statistical significance tests for machine translation evaluation.</REFTITLE>
      <DATE>2004</DATE>
    </REFERENCE>
    <REFERENCE ID="15">
      <RAUTHOR>Yang Liu</RAUTHOR>
      <REFTITLE>Joint parsing and translation.</REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="16">
      <RAUTHOR></RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="17">
      <RAUTHOR>Yang Liu</RAUTHOR>
      <REFTITLE>Treeto-string alignment template for statistical machine translation.</REFTITLE>
      <DATE>2006</DATE>
    </REFERENCE>
    <REFERENCE ID="18">
      <RAUTHOR>Yanjun Ma</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="19">
      <RAUTHOR></RAUTHOR>
      <REFTITLE>Bootstrapping word alignment via word packing.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="20">
      <RAUTHOR>Haitao Mi</RAUTHOR>
      <REFTITLE>Forestbased translation.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="21">
      <RAUTHOR>Hwee Tou Ng</RAUTHOR>
      <REFTITLE>Chinese partof-speech tagging: One-at-a-time or all-at-once? word-based or character-based?</REFTITLE>
      <DATE>2004</DATE>
    </REFERENCE>
    <REFERENCE ID="22">
      <RAUTHOR>Franz J Och</RAUTHOR>
      <REFTITLE>Discriminative training and maximum entropy models for statistical machine translation.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="23">
      <RAUTHOR>Franz Josef Och</RAUTHOR>
      <REFTITLE>A systematic comparison of various statistical alignment models.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="24">
      <RAUTHOR>Franz Josef Och</RAUTHOR>
      <REFTITLE>Minimum error rate training in statistical machine translation.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="25">
      <RAUTHOR>Kemal Oflazer</RAUTHOR>
      <REFTITLE>Statistical machine translation into a morphologically complex language.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="26">
      <RAUTHOR>CICL</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="27">
      <RAUTHOR>Kishore Papineni</RAUTHOR>
      <REFTITLE>Bleu: a method for automatic evaluation of machine translation.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="28">
      <RAUTHOR>ACL</RAUTHOR>
      <REFTITLE></REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="29">
      <RAUTHOR>Libin Shen</RAUTHOR>
      <REFTITLE>A new string-to-dependency machine translation algorithm with a target dependency language model.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="30">
      <RAUTHOR>Benjamin Snyder</RAUTHOR>
      <REFTITLE>Unsupervised multilingual learning for morphological segmentation.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="31">
      <RAUTHOR>Andreas Stolcke</RAUTHOR>
      <REFTITLE>Srilm &#8211; an extensible language modeling toolkit.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="32">
      <RAUTHOR>Jia Xu</RAUTHOR>
      <REFTITLE>Integrated chinese word segmentation in statistical machine translation.</REFTITLE>
      <DATE>2005</DATE>
    </REFERENCE>
    <REFERENCE ID="33">
      <RAUTHOR>Jia Xu</RAUTHOR>
      <REFTITLE>Bayesian semi-supervised chinese word segmentation for statistical machine translation.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="34">
      <RAUTHOR>Nianwen Xue</RAUTHOR>
      <REFTITLE>Chinese word segmentation as LMR tagging.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="35">
      <RAUTHOR>Hua-Ping Zhang</RAUTHOR>
      <REFTITLE>Hhmm-based chinese lexical analyzer ictclas.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="36">
      <RAUTHOR>Ruiqiang Zhang</RAUTHOR>
      <REFTITLE>Improved statistical machine translation by multiple Chinese word segmentation.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
  </REFERENCES>
</PAPER>
