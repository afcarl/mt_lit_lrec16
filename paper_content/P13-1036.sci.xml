<PAPER>
  <FILENO/>
  <TITLE>Scalable Decipherment for Machine Translation via Hash Sampling</TITLE>
  <AUTHORS/>
  <ABSTRACT>
    <A-S ID="S-36916">In this paper, we propose a new Bayesian inference method to train statistical machine translation systems using only nonparallel corpora.</A-S>
    <A-S ID="S-36917">Following a probabilistic decipherment approach, we first introduce a new framework for decipherment training that is flexible enough to incorporate any number/type of features (besides simple bag-of-words) as side-information used for estimating translation models.</A-S>
    <A-S ID="S-36918">In order to perform fast, efficient Bayesian inference in this framework, we then derive a hash sampling strategy that is inspired by the work of <REF ID="R-00" RPTR="4">Ahmed et al. (2012)</REF>.</A-S>
    <A-S ID="S-36919">The new translation hash sampler enables us to scale elegantly to complex models (for the first time) and large vocabulary/corpora sizes.</A-S>
    <A-S ID="S-36920">We show empirical results on the OPUS data&#8212;our method yields the best BLEU scores compared to existing approaches, while achieving significant computational speedups (several orders faster).</A-S>
    <A-S ID="S-36921">We also report for the first time&#8212;BLEU score results for a largescale MT task using only non-parallel data (EMEA corpus).</A-S>
  </ABSTRACT>
  <BODY>
    <DIV DEPTH="0">
      <HEADER>1 Introduction</HEADER>
      <P>
        <S ID="S-36922">Statistical machine translation (SMT) systems these days are built using large amounts of bilingual parallel corpora.</S>
        <S ID="S-36923">The parallel corpora are used to estimate translation model parameters involving word-to-word translation tables, fertilities, distortion, phrase translations, syntactic transformations, etc.</S>
        <S ID="S-36924">But obtaining parallel data is an expensive process and not available for all language pairs or domains.</S>
        <S ID="S-36925">On the other hand, monolingual data (in written form) exists and is easier to obtain for many languages.</S>
        <S ID="S-36926">Learning translation models from monolingual corpora could help address the challenges faced by modern-day MT systems, especially for low resource language pairs.</S>
        <S ID="S-36927">Recently, this topic has been receiving increasing attention from researchers and new methods have been proposed to train statistical machine translation models using only monolingual data in the source and target language.</S>
        <S ID="S-36928">The underlying motivation behind most of these methods is that statistical properties for linguistic elements are shared across different languages and some of these similarities (mappings) could be automatically identified from large amounts of monolingual data.</S>
      </P>
      <P>
        <S ID="S-36929">The MT literature does cover some prior work on extracting or augmenting partial lexicons using non-parallel corpora (<REF ID="R-16" RPTR="41">Rapp, 1995</REF>; <REF ID="R-04" RPTR="12">Fung and McKeown, 1997</REF>; <REF ID="R-12" RPTR="26">Koehn and Knight, 2000</REF>; <REF ID="R-06" RPTR="14">Haghighi et al., 2008</REF>).</S>
        <S ID="S-36930">However, none of these methods attempt to train end-to-end MT models, instead they focus on mining bilingual lexicons from monolingual corpora and often they require parallel seed lexicons as a starting point.</S>
        <S ID="S-36931">Some of them (<REF ID="R-06" RPTR="15">Haghighi et al., 2008</REF>) also rely on additional linguistic knowledge such as orthography, etc. to mine word translation pairs across related languages (e.g., Spanish/English).</S>
        <S ID="S-36932">Unsupervised training methods have also been proposed in the past for related problems in decipherment (<REF ID="R-09" RPTR="20">Knight and Yamada, 1999</REF>; <REF ID="R-10" RPTR="21">Snyder et al., 2010</REF>; <REF ID="R-17" RPTR="48">Ravi and Knight, 2011</REF><REF ID="R-18" RPTR="59">Ravi and Knight, 2011</REF>a) where the goal is to decode unknown scripts or ciphers.</S>
      </P>
      <P>
        <S ID="S-36933">The body of work that is more closely related to ours include that of <REF ID="R-17" RPTR="43">Ravi and Knight (2011</REF><REF ID="R-18" RPTR="54">Ravi and Knight (2011</REF>b) who introduced a decipherment approach for training translation models using only monolingual cor-</S>
      </P>
      <P>
        <S ID="S-36934">pora.</S>
        <S ID="S-36935">Their best performing method uses an EM algorithm to train a word translation model and they show results on a Spanish/English task.</S>
        <S ID="S-36936"><REF ID="R-14" RPTR="34">Nuhn et al. (2012)</REF> extend the former approach and improve training efficiency by pruning translation candidates prior to EM training with the help of context similarities computed from monolingual corpora.</S>
      </P>
      <P>
        <S ID="S-36937">In this work we propose a new Bayesian inference method for estimating translation models from scratch using only monolingual corpora.</S>
        <S ID="S-36938">Secondly, we introduce a new feature-based representation for sampling translation candidates that allows one to incorporate any amount of additional features (beyond simple bag-of-words) as sideinformation during decipherment training.</S>
        <S ID="S-36939">Finally, we also derive a new accelerated sampling mechanism using locality sensitive hashing inspired by recent work on fast, probabilistic inference for unsupervised clustering (<REF ID="R-00" RPTR="0">Ahmed et al., 2012</REF>).</S>
        <S ID="S-36940">The new sampler allows us to perform fast, efficient inference with more complex translation models (than previously used) and scale better to large vocabulary and corpora sizes compared to existing methods as evidenced by our experimental results on two different corpora.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>2 Decipherment Model for Machine Translation</HEADER>
      <P>
        <S ID="S-36941">We now describe the decipherment problem formulation for machine translation.</S>
        <S ID="S-36942">Problem Formulation: Given a source text f (i.e., source word sequences f 1 ...f m ) and a monolingual target language corpus, our goal is to decipher the source text and produce a target translation.</S>
      </P>
      <P>
        <S ID="S-36943">Contrary to standard machine translation training scenarios, here we have to estimate the translation model P &#952; (f|e) parameters using only monolingual data.</S>
        <S ID="S-36944">During decipherment training, our objective is to estimate the model parameters in order to maximize the probability of the source text f as suggested by <REF ID="R-17" RPTR="44">Ravi and Knight (2011</REF><REF ID="R-18" RPTR="55">Ravi and Knight (2011</REF>b).</S>
      </P>
      <P>
        <S ID="S-36945">arg max</S>
      </P>
      <P>
        <S ID="S-36946">&#952;</S>
      </P>
      <P>
        <S ID="S-36947">&#8719; &#8721; P (e) &#183; P &#952; (f|e) (1)</S>
      </P>
      <P>
        <S ID="S-36948">f</S>
      </P>
      <P>
        <S ID="S-36949">e</S>
      </P>
      <P>
        <S ID="S-36950">For P (e), we use a word n-gram language model (LM) trained on monolingual target text.</S>
        <S ID="S-36951">We then estimate the parameters of the translation model P &#952; (f|e) during training.</S>
      </P>
      <P>
        <S ID="S-36952">Translation Model: Machine translation is a much more complex task than solving other decipherment tasks such as word substitution ciphers (<REF ID="R-17" RPTR="49">Ravi and Knight, 2011</REF><REF ID="R-18" RPTR="60">Ravi and Knight, 2011</REF>b; <REF ID="R-03" RPTR="9">Dou and Knight, 2012</REF>).</S>
        <S ID="S-36953">The mappings between languages involve non-determinism (i.e., words can have multiple translations), re-ordering of words can occur as grammar and syntax varies with language, and in addition word insertion and deletion operations are also involved.</S>
        <S ID="S-36954">Ideally, for the translation model P (f |e) we would like to use well-known statistical models such as IBM Model 3 and estimate its parameters &#952; using the EM algorithm (<REF ID="R-02" RPTR="8">Dempster et al., 1977</REF>).</S>
        <S ID="S-36955">But training becomes intractable with complex translation models and scalability is also an issue when large corpora sizes are involved and the translation tables become huge to fit in memory.</S>
        <S ID="S-36956">So, instead we use a simplified generative process for the translation model as proposed by <REF ID="R-17" RPTR="45">Ravi and Knight (2011</REF><REF ID="R-18" RPTR="56">Ravi and Knight (2011</REF>b) and used by others (<REF ID="R-14" RPTR="30">Nuhn et al., 2012</REF>) for this task:</S>
      </P>
      <P>
        <S ID="S-36957">1.</S>
        <S ID="S-36958">Generate a target (e.g., English) string e = e 1 ...e l , with probability P (e) according to an n-gram language model.</S>
      </P>
      <P>
        <S ID="S-36959">2.</S>
        <S ID="S-36960">Insert a NULL word at any position in the English string, with uniform probability.</S>
      </P>
      <P>
        <S ID="S-36961">3.</S>
        <S ID="S-36962">For each target word token e i (including NULLs), choose a source word translation f i , with probability P &#952; (f i |e i ).</S>
        <S ID="S-36963">The source word may be NULL.</S>
      </P>
      <P>
        <S ID="S-36964">4.</S>
        <S ID="S-36965">Swap any pair of adjacent source words f i&#8722;1 , f i , with probability P (swap); set to 0.1.</S>
      </P>
      <P>
        <S ID="S-36966">5.</S>
        <S ID="S-36967">Output the foreign string f = f 1 ...f m , skipping over NULLs.</S>
      </P>
      <P>
        <S ID="S-36968">Previous approaches (<REF ID="R-17" RPTR="50">Ravi and Knight, 2011</REF><REF ID="R-18" RPTR="61">Ravi and Knight, 2011</REF>b; <REF ID="R-14" RPTR="31">Nuhn et al., 2012</REF>) use the EM algorithm to estimate all the parameters &#952; in order to maximize likelihood of the foreign corpus.</S>
        <S ID="S-36969">Instead, we propose a new Bayesian inference framework to estimate the translation model parameters.</S>
        <S ID="S-36970">In spite of using Bayesian inference which is typically slow in practice (with standard Gibbs sampling), we show later that our method is scalable and permits decipherment training using more complex translation models (with several additional parameters).</S>
      </P>
      <P>
        <S ID="S-36971">2.1 Adding Phrases, Flexible Reordering and Fertility to Translation Model</S>
      </P>
      <P>
        <S ID="S-36972">We now extend the generative process (described earlier) to more complex translation models.</S>
        <S ID="S-36973">Non-local Re-ordering: The generative process described earlier limits re-ordering to local or adjacent word pairs in a source sentence.</S>
        <S ID="S-36974">We extend this to allow re-ordering between any pair of words in the sentence.</S>
        <S ID="S-36975">Fertility: We also add a fertility model P &#952;fert to the translation model using the formula:</S>
      </P>
      <P>
        <S ID="S-36976">P &#952;fert = &#8719; i n &#952; (&#966; i |e i ) &#183; p &#966; 0</S>
      </P>
      <P>
        <S ID="S-36977">1 (2)</S>
      </P>
      <P>
        <S ID="S-36978">n &#952; (&#966; i |e i ) = &#945; fert &#183; P 0 (&#966; i |e i ) + C &#8722;i (e i , &#966; i ) &#945; fert + C &#8722;i (3) (e i )</S>
      </P>
      <P>
        <S ID="S-36979">where, P 0 represents the base distribution (which is set to uniform) in a Chinese Restaurant Process (CRP) 1 for the fertility model and C &#8722;i represents the count of events occurring in the history excluding the observation at position i. &#966; i is the number of source words aligned to (i.e., generated by) the target word e i .</S>
        <S ID="S-36980">We use sparse Dirichlet priors for all the translation model components.</S>
        <S ID="S-36981">2 &#966; 0 represents the target NULL word fertility and p 1 is the insertion probability which is fixed to 0.1.</S>
        <S ID="S-36982">In addition, we set a maximum threshold for fertility values &#966; i &#8804; &#947; &#183; m, where m is the length of the source sentence.</S>
        <S ID="S-36983">This discourages a particular target word (e.g., NULL word) from generating too many source words in the same sentence.</S>
        <S ID="S-36984">In our experiments, we set &#947; = 0.3.</S>
        <S ID="S-36985">We enforce this constraint in the training process during sampling.</S>
        <S ID="S-36986">3 Modeling Phrases: Finally, we extend the translation candidate set in P &#952; (f i |e i ) to model phrases in addition to words for the target side (i.e., e i can now be a word or a phrase 4 previously seen in the monolingual target corpus).</S>
        <S ID="S-36987">This greatly increases the training time since in each sampling step, we now have many more e i candidates to choose from.</S>
        <S ID="S-36988">In Section 4, we describe how we deal</S>
      </P>
      <P>
        <S ID="S-36989">1 Each component in the translation model (word/phrase</S>
      </P>
      <P>
        <S ID="S-36990">translations P &#952; (f i|e i), fertility P &#952;fert , etc.) is modeled using a CRP formulation.</S>
        <S ID="S-36991">2 i.e., All the concentration parameters are set to low values; &#945; f|e = &#945; fert = 0.01.</S>
        <S ID="S-36992">3 We only apply this constraint when training on source</S>
      </P>
      <P>
        <S ID="S-36993">text/corpora made of long sentences (&gt;10 words) where the sampler might converge very slowly.</S>
        <S ID="S-36994">For short sentences, a sparse prior on fertility &#945; fert typically discourages a target word from being aligned to too many different source words.</S>
        <S ID="S-36995">4 Phrase size is limited to two words in our experiments.</S>
      </P>
      <P>
        <S ID="S-36996">with this problem by using a fast, efficient sampler based on hashing that allows us to speed up the Bayesian inference significantly whereas standard Gibbs sampling would be extremely slow.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>3 Feature-based representation for Source and Target</HEADER>
      <P>
        <S ID="S-36997">The model described in the previous section while being flexible in describing the translation process, poses several challenges for training.</S>
        <S ID="S-36998">As the source and target vocabulary sizes increase the size of the translation table (|V f | &#183; |V e |) increases significantly and often becomes too huge to fit in memory.</S>
        <S ID="S-36999">Additionally, performing Bayesian inference with such a complex model using standard Gibbs sampling can be very slow in practice.</S>
        <S ID="S-37000">Here, we describe a new method for doing Bayesian inference by first introducing a featurebased representation for the source and target words (or phrases) from which we then derive a novel proposal distribution for sampling translation candidates.</S>
        <S ID="S-37001">We represent both source and target words in a vector space similar to how documents are represented in typical information retrieval settings.</S>
        <S ID="S-37002">But unlike documents, here each word w is associated with a feature vector w 1 ...w d (where w i represents the weight for the feature indexed by i) which is constructed from monolingual corpora.</S>
        <S ID="S-37003">For instance, context features for word w may include other words (or phrases) that appear in the immediate context (n-gram window) surrounding w in the monolingual corpus.</S>
        <S ID="S-37004">Similarly, we can add other features based on topic models, orthography (<REF ID="R-06" RPTR="16">Haghighi et al., 2008</REF>), temporal (<REF ID="R-08" RPTR="18">Klementiev et al., 2012</REF>), etc. to our representation all of which can be extracted from monolingual corpora.</S>
      </P>
      <P>
        <S ID="S-37005">Next, given two high dimensional vectors u and v it is possible to calculate the similarity between the two words denoted by s(u, v).</S>
        <S ID="S-37006">The feature construction process is described in more detail below: Target Language: We represent each word (or phrase) e i with the following contextual features along with their counts: (a) f &#8722;context : every (word n-gram, position) pair immediately preceding e i in the monolingual corpus (n=1, position=&#8722;1), (b) similar features f +context to model the context following e i , and (c) we also throw in generic context features f scontext without position information&#8212; every word that co-occurs with e i in the same sen-</S>
      </P>
      <P>
        <S ID="S-37007">tence.</S>
        <S ID="S-37008">While the two position-features provide specific context information (may be sparse for large monolingual corpora), this feature is more generic and captures long-distance co-occurrence statistics.</S>
        <S ID="S-37009">Source Language: Words appearing in a source sentence f are represented using the corresponding target translation e = e 1 ...e m generated for f in the current sample during training.</S>
        <S ID="S-37010">For each source word f j &#8712; f, we look at the corresponding word e j in the target translation.</S>
        <S ID="S-37011">We then extract all the context features of e j in the target translation sample sentence e and add these features (f &#8722;context , f +context , f scontext ) with weights to the feature representation for f j .</S>
        <S ID="S-37012">Unlike the target word feature vectors (which can be pre-computed from the monolingual target corpus), the feature vector for every source word f j is dynamically constructed from the target translation sampled in each training iteration.</S>
        <S ID="S-37013">This is a key distinction of our framework compared to previous approaches that use contextual similarity (or any other) features constructed from static monolingual corpora (<REF ID="R-16" RPTR="42">Rapp, 1995</REF>; <REF ID="R-12" RPTR="27">Koehn and Knight, 2000</REF>; <REF ID="R-14" RPTR="32">Nuhn et al., 2012</REF>).</S>
      </P>
      <P>
        <S ID="S-37014">Note that as we add more and more features for a particular word (by training on larger monolingual corpora or adding new types of features, etc.), it results in the feature representation becoming more sparse (especially for source feature vectors) which can cause problems in efficiency as well as robustness when computing similarity against other vectors.</S>
        <S ID="S-37015">In the next section, we will describe how we mitigate this problem by projecting into a low-dimensional space by computing hash signatures.</S>
      </P>
      <P>
        <S ID="S-37016">In all our experiments, we only use the features described above for representing source and target words.</S>
        <S ID="S-37017">We note that the new sampling framework is easily extensible to many additional feature types (for example, monolingual topic model features, etc.) which can be efficiently handled by our inference algorithm and could further improve translation performance but we leave this for future work.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>4 Bayesian MT Decipherment via Hash Sampling</HEADER>
      <P>
        <S ID="S-37022">The next step is to use the feature representations described earlier and iteratively sample a target word (or phrase) translation candidate e i for every word f i in the source text f. This involves choosing from |V e | possible target candidates in every step which can be highly inefficient (and infeasible for large vocabulary sizes).</S>
        <S ID="S-37023">One possible strategy is to compute similarity scores s(w fi , w e &#8242;) between the current source word feature vector w fi and feature vectors w e &#8242; &#8712;V e for all possible candidates in the target vocabulary.</S>
        <S ID="S-37024">Following this, we can prune the translation candidate set by keeping only the top candidates e &#8727; according to the similarity scores.</S>
        <S ID="S-37025"><REF ID="R-14" RPTR="35">Nuhn et al. (2012)</REF> use a similar strategy to obtain a more compact translation table that improves runtime efficiency for EM training.</S>
        <S ID="S-37026">Their approach requires calculating and sorting all |V e | &#183; |V f | distances in time O(V 2 &#183; log(V )), where V = max(|V e |, |V f |).</S>
      </P>
      <P>
        <S ID="S-37027">Challenges: Unfortunately, there are several additional challenges which makes inference very hard in our case.</S>
        <S ID="S-37028">Firstly, we would like to include as many features as possible to represent the source/target words in our framework besides simple bag-of-words context similarity (for example, left-context, right-context, and other generalpurpose features based on topic models, etc.).</S>
        <S ID="S-37029">This makes the complexity far worse (in practice) since the dimensionality of the feature vectors d is a much higher value than |V e |.</S>
        <S ID="S-37030">Computing similarity scores alone (na&#239;vely) would incur O(|V e | &#183; d) time which is prohibitively huge since we have to do this for every token in the source language corpus.</S>
        <S ID="S-37031">Secondly, for Bayesian inference we need to sample from a distribution that involves computing probabilities for all the components (language model, translation model, fertility, etc.) described in Equation 1.</S>
        <S ID="S-37032">This distribution needs to be computed for every source word token f i in the corpus, for all possible candidates e i &#8712; V e and the process has to be repeated for multiple sampling iterations (typically more than 1000).</S>
        <S ID="S-37033">Doing standard collapsed Gibbs sampling in this scenario would be very slow and intractable.</S>
      </P>
      <P>
        <S ID="S-37034">We now present an alternative fast, efficient inference strategy that overcomes many of the challenges described above and helps accelerate the sampling process significantly.</S>
        <S ID="S-37035">First, we set our translation models within the context of a more generic and widely known family of distributions&#8212;mixtures of exponential families.</S>
        <S ID="S-37036">Then we derive a novel proposal distribution for sampling translation candidates and introduce a new sampler for decipherment training that</S>
      </P>
      <P>
        <S ID="S-37037">is based on locality sensitive hashing (LSH).</S>
      </P>
      <P>
        <S ID="S-37038">Hashing methods such as LSH have been widely used in the past in several scenarios including NLP applications (Ravichandran et al., 2005).</S>
        <S ID="S-37039">Most of these approaches employ LSH within heuristic methods for speeding up nearestneighbor look up and similarity computation techniques.</S>
        <S ID="S-37040">However, we use LSH hashing within a probabilistic framework which is very different from the typical use of LSH.</S>
      </P>
      <P>
        <S ID="S-37041">Our work is inspired by some recent work by <REF ID="R-00" RPTR="5">Ahmed et al. (2012)</REF> on speeding up Bayesian inference for unsupervised clustering.</S>
        <S ID="S-37042">We use a similar technique as theirs but a different approximate distribution for the proposal, one that is bettersuited for machine translation models and without some of the additional overhead required for computing certain terms in the original formulation.</S>
        <S ID="S-37043">Mixtures of Exponential Families: The translation models described earlier (Section 2) can be represented as mixtures of exponential families, specifically mixtures of multinomials.</S>
        <S ID="S-37044">In exponential families, distributions over random variables are given by:</S>
      </P>
      <P>
        <S ID="S-37045">p(x; &#952;) = exp(&#12296;&#966;(x), &#952;&#12297;) &#8722; g(&#952;) (4)</S>
      </P>
      <P>
        <S ID="S-37046">where, &#966; : X &#8594; F is a map from x to the space of sufficient statistics and &#952; &#8712; F. The term g(&#952;) ensures that p(x; &#952;) is properly normalized.</S>
        <S ID="S-37047">X is the domain of observations X = x 1 , ..., x m drawn from some distribution p.</S>
        <S ID="S-37048">Our goal is to estimate p.</S>
        <S ID="S-37049">In our case, this refers to the translation model from Equation 1.</S>
      </P>
      <P>
        <S ID="S-37050">We also choose corresponding conjugate Dirichlet distributions for priors which have the property that the posterior distribution p(&#952;|X) over &#952; remains in the same family as p(&#952;).</S>
      </P>
      <P>
        <S ID="S-37051">Note that the (translation) model in our case consists of multiple exponential families components&#8212;a multinomial pertaining to the language model (which remains fixed 5 ), and other components pertaining to translation probabilities P &#952; (f i |e i ), fertility P &#952;fert , etc. To do collapsed Gibbs sampling under this model, we would perform the following steps during sampling: 1.</S>
        <S ID="S-37052">For a given source word token f i draw target</S>
      </P>
      <P>
        <S ID="S-37053">5 A high value for the LM concentration parameter &#945; ensures that the LM probabilities do not deviate too far from the original fixed base distribution during sampling.</S>
      </P>
      <P>
        <S ID="S-37054">translation</S>
      </P>
      <P>
        <S ID="S-37055">e i &#8764; p(e i |F, E &#8722;i )</S>
      </P>
      <P>
        <S ID="S-37056">&#8733; p(e) &#183; p(f i |e i , F &#8722;i , E &#8722;i )</S>
      </P>
      <P>
        <S ID="S-37057">&#183; p fert (&#183;|e i , F &#8722;i , E &#8722;i ) &#183; ... (5)</S>
      </P>
      <P>
        <S ID="S-37058">where, F is the full source text and E the full target translation generated during sampling.</S>
        <S ID="S-37059">2.</S>
        <S ID="S-37060">Update the sufficient statistics for the changed target translation assignments.</S>
      </P>
      <P>
        <S ID="S-37061">For large target vocabularies, computing p(f i |e i , F &#8722;i , E &#8722;i ) dominates the inference procedure.</S>
        <S ID="S-37062">We can accelerate this step significantly using a good proposal distribution via hashing.</S>
        <S ID="S-37063">Locality Sensitive Hash Sampling: For general exponential families, here is a Taylor approximation for the data likelihood term (<REF ID="R-00" RPTR="1">Ahmed et al., 2012</REF>):</S>
      </P>
      <P>
        <S ID="S-37064">p(x|&#183;) &#8776; exp(&#12296;&#966;(x), &#952; &#8727; &#12297;) &#8722; g(&#952; &#8727; ) (6)</S>
      </P>
      <P>
        <S ID="S-37065">where, &#952; &#8727; is the expected parameter (sufficient statistics).</S>
        <S ID="S-37066">For sampling the translation model, this involves computing an expensive inner product &#12296;&#966;(f i ), &#952;e &#8727; &#12297; &#8242; for each source word f i which has to be repeated for every translation candidate e &#8242; , including candidates that have very low probabilities and are unlikely to be chosen as the translation for f j .</S>
      </P>
      <P>
        <S ID="S-37067">So, during decipherment training a standard collapsed Gibbs sampler will waste most of its time on expensive computations that will be discarded in the end anyways.</S>
        <S ID="S-37068">Also, unlike some standard generative models used in other unsupervised learning scenarios (e.g., clustering) that model only observed features (namely words appearing in the document), here we would like to enrich the translation model with a lot more features (side-information).</S>
        <S ID="S-37069">Instead, we can accelerate the computation of the inner product &#12296;&#966;(f i ), &#952;e &#8727; &#12297; using a hash sampling strategy similar to (<REF ID="R-00" RPTR="2">Ahmed et al., 2012</REF>).</S>
        <S ID="S-37070">&#8242;</S>
      </P>
      <P>
        <S ID="S-37071">The underlying idea here is to use binary hashing (<REF ID="R-01" RPTR="7">Charikar, 2002</REF>) to explore only those candidates e &#8242; that are sufficiently close to the best matching translation via a proposal distribution.</S>
        <S ID="S-37072">Next, we briefly introduce some notations and existing theoretical results related to binary hashing before describing the hash sampling procedure.</S>
      </P>
      <P>
        <S ID="S-37073">For any two vectors u, v &#8712; R n ,</S>
      </P>
      <P>
        <S ID="S-37074">&#12296;u, v&#12297; = &#8214;u&#8214; &#183; &#8214;v&#8214; &#183; cos &#8737;(u, v) (7)</S>
      </P>
      <P>
        <S ID="S-37075">&#8737;(u, v) = &#960;P r{sgn[&#12296;u, w&#12297;] &#8800; sgn[&#12296;v, w&#12297;]} (8)</S>
      </P>
      <P>
        <S ID="S-37076">where, w is a random vector drawn from a symmetric spherical distribution and the term inside P r{&#183;} represents the relation between the signs of the two inner products.</S>
      </P>
      <P>
        <S ID="S-37077">Let h l (v) &#8712; {0, 1} l be an l-bit binary hash of v where: [h l (v)] i := sgn[&#12296;v, w i &#12297;]; w i &#8764; U m .</S>
        <S ID="S-37078">Then the probability of matching signs is given by:</S>
      </P>
      <P>
        <S ID="S-37079">z l (u, v) := 1 l &#8214;h(u) &#8722; h(v)&#8214; 1 (9)</S>
      </P>
      <P>
        <S ID="S-37080">So, z l (u, v) measures how many bits differ between the hash vectors h(u) and h(v) associated with u, v.</S>
        <S ID="S-37081">Combining this with Equations 6 and 7 we can estimate the unnormalized log-likelihood of a source word f i being translated as target e &#8242; via:</S>
      </P>
      <P>
        <S ID="S-37082">s l (f i , e &#8242; ) &#8733; &#8214;&#952; e &#8242;&#8214; &#183; &#8214;&#966;(f i )&#8214; &#183; cos &#960;z l (&#966;(f i ), &#952; e &#8242;) (10)</S>
      </P>
      <P>
        <S ID="S-37083">For each source word f i , we now sample from this new distribution (after normalization) instead of the original one.</S>
        <S ID="S-37084">The binary hash representation for the two vectors yield significant speedups during sampling since Hamming distance computation between h(u) and h(v) is highly optimized on modern CPUs.</S>
        <S ID="S-37085">Hence, we can compute an estimate for the inner product quite efficiently.</S>
        <S ID="S-37086">6 Updating the hash signatures: During training, we compute the target candidate projection h(&#952; e &#8242;) and corresponding norm only once 7 which is different from the setup of <REF ID="R-00" RPTR="6">Ahmed et al. (2012)</REF>.</S>
        <S ID="S-37087">The source word projection &#966;(f i ) is dynamically updated in every sampling step.</S>
        <S ID="S-37088">Note that doing this na&#239;vely would scale slowly as O(Dl) where D is the total number of features but instead we can update the hash signatures in a more efficient manner that scales as O(D i&gt;0 l) where D i&gt;0 is the number of non-zero entries in the feature representation for the source word &#966;(f i ).</S>
        <S ID="S-37089">Also, we do not need to store the random vectors w in practice since these can be computed on the fly using hash functions.</S>
        <S ID="S-37090">The inner product approximation also yields some theoretical guarantees for the hash sampler.</S>
        <S ID="S-37091">8</S>
      </P>
      <P>
        <S ID="S-37092">6 We set l = 32 bits in our experiments.</S>
        <S ID="S-37093">7 In practice, we can ignore the norm terms to further</S>
      </P>
      <P>
        <S ID="S-37094">speed up sampling since this is only an estimate for the proposal distribution and we follow this with the Metropolis Hastings step.</S>
        <S ID="S-37095">8 For further details, please refer to (<REF ID="R-00" RPTR="3">Ahmed et al., 2012</REF>).</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>4.1 Metropolis Hastings</HEADER>
        <P>
          <S ID="S-37018">In each sampling step, we use the distribution from Equation 10 as a proposal distribution in a Metropolis Hastings scheme to sample target translations for each source word.</S>
        </P>
        <P>
          <S ID="S-37019">Once a new target translation e &#8242; is sampled for source word f i from the proposal distribution q(&#183;) &#8733; exp sl (f i ,e &#8242;) , we accept the proposal (and update the corresponding hash signatures) according to the probability r</S>
        </P>
        <P>
          <S ID="S-37020">r = q(eold i ) &#183; p new (&#183;) q(e new i ) &#183; p old (&#183;) (11)</S>
        </P>
        <P>
          <S ID="S-37021">where, p old (&#183;), p new (&#183;) are the true conditional likelihood probabilities according to our model (including the language model component) for the old, new sample respectively.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>5 Training Algorithm</HEADER>
      <P>
        <S ID="S-37096">Putting together all the pieces described in the previous section, we perform the following steps: 1.</S>
        <S ID="S-37097">Initialization: We initialize the starting sample as follows: for each source word token, randomly sample a target word.</S>
        <S ID="S-37098">If the source word also exists in the target vocabulary, then choose identity translation instead of the random one.</S>
        <S ID="S-37099">9 2.</S>
        <S ID="S-37100">Hash Sampling Steps: For each source word token f i , run the hash sampler:</S>
      </P>
      <P>
        <S ID="S-37101">(a) Generate a proposal distribution by computing the hamming distance between the feature vectors for the source word and each target translation candidate.</S>
        <S ID="S-37102">Sample a new target translation e i for f i from this distribution.</S>
      </P>
      <P>
        <S ID="S-37103">(b) Compute the acceptance probability for the chosen translation using a Metropolis Hastings scheme and accept (or reject) the sample.</S>
        <S ID="S-37104">In practice, computation of the acceptance probability only needs to be done every r iterations (where r can be anywhere from 5 or 100).</S>
        <S ID="S-37105">Iterate through steps (2a) and (2b) for every word in the source text and then repeat this process for multiple iterations (usually 1000).</S>
        <S ID="S-37106">3.</S>
        <S ID="S-37107">Other Sampling Operators: After every k iterations, 10 perform the following sampling operations:</S>
      </P>
      <P>
        <S ID="S-37108">(a) Re-ordering: For each source word token f i at position i, randomly choose another position j</S>
      </P>
      <P>
        <S ID="S-37109">9 Initializing with identity translation rather than random</S>
      </P>
      <P>
        <S ID="S-37110">choice helps in some cases, especially for unknown words that involve named entities, etc. 10 We set k = 3 in our experiments.</S>
      </P>
      <P>
        <S ID="S-37111">Corpus Language Sent.</S>
        <S ID="S-37112">Words Vocab.</S>
      </P>
      <P>
        <S ID="S-37113">in the source sentence and swap the translations e i with e j .</S>
        <S ID="S-37114">During the sampling process, we compute the probabilities for the two samples&#8212;the original and the swapped versions, and then sample an alignment from this distribution.</S>
      </P>
      <P>
        <S ID="S-37115">(b) Deletion: For each source word token, delete the current target translation (i.e., align it with the target NULL token).</S>
        <S ID="S-37116">As with the reordering operation, we sample from a distribution consisting of the original and the deleted versions.</S>
        <S ID="S-37117">4.</S>
        <S ID="S-37118">Decoding the foreign sentence: Finally, once the training is done (i.e., after all sampling iterations) we choose the final sample as our target translation output for the source text.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>6 Experiments and Results</HEADER>
      <P>
        <S ID="S-37155">We test our method on two different corpora.</S>
        <S ID="S-37156">To evaluate translation quality, we use BLEU score (<REF ID="R-15" RPTR="40">Papineni et al., 2002</REF>), a standard evaluation measure used in machine translation.</S>
        <S ID="S-37157">First, we present MT results on non-parallel Spanish/English data from the OPUS corpus (<REF ID="R-11" RPTR="22">Tiedemann, 2009</REF>) which was used by <REF ID="R-17" RPTR="46">Ravi and Knight (2011</REF><REF ID="R-18" RPTR="57">Ravi and Knight (2011</REF>b) and <REF ID="R-14" RPTR="36">Nuhn et al. (2012)</REF>.</S>
        <S ID="S-37158">We show that our method achieves the best performance (BLEU scores) on this task while being significantly faster than both the previous approaches.</S>
        <S ID="S-37159">We then apply our method to a much larger non-parallel French/Spanish corpus constructed from the EMEA corpus (<REF ID="R-11" RPTR="23">Tiedemann, 2009</REF>).</S>
        <S ID="S-37160">Here the vocabulary sizes are much larger and we show how our new Bayesian decipherment method scales well to this task inspite of using complex translation models.</S>
        <S ID="S-37161">We also report the first BLEU results on such a large-scale MT task under truly non-parallel settings (without using any parallel data or seed lexicon).</S>
      </P>
      <P>
        <S ID="S-37162">For both the MT tasks, we also report BLEU scores for a baseline system using identity translations for common words (words appearing in both source/target vocabularies) and random translations for other words.</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>6.1 MT Task and Data</HEADER>
        <P>
          <S ID="S-37119">OPUS movie subtitle corpus (<REF ID="R-11" RPTR="24">Tiedemann, 2009</REF>): This is a large open source collection of parallel corpora available for multiple language pairs.</S>
          <S ID="S-37120">We use the same non-parallel Spanish/English corpus used in previous works (<REF ID="R-17" RPTR="51">Ravi and Knight, 2011</REF><REF ID="R-18" RPTR="62">Ravi and Knight, 2011</REF>b; <REF ID="R-14" RPTR="33">Nuhn et al., 2012</REF>).</S>
          <S ID="S-37121">The details of the corpus are listed in Table 1.</S>
          <S ID="S-37122">We use the entire Spanish source text for decipherment training and evaluate the final English output to report BLEU scores.</S>
          <S ID="S-37123">EMEA corpus (<REF ID="R-11" RPTR="25">Tiedemann, 2009</REF>): This is a parallel corpus made out of PDF documents (articles from the medical domain) from the European Medicines Agency.</S>
          <S ID="S-37124">We reserve the first 1k sentences in French as our source text (also used in decipherment training).</S>
          <S ID="S-37125">To construct a nonparallel corpus, we split the remaining 1.1M lines as follows: first 550k sentences in French, last 550k sentences in Spanish.</S>
          <S ID="S-37126">The latter is used to construct a target language model used for decipherment training.</S>
          <S ID="S-37127">The corpus statistics are shown in Table 1.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>6.2 Results</HEADER>
        <P>
          <S ID="S-37128">OPUS: We compare the MT results (BLEU scores) from different systems on the OPUS corpus in Table 2.</S>
          <S ID="S-37129">The first row displays baseline performance.</S>
          <S ID="S-37130">The next three rows 1a&#8211;1c display performance achieved by two methods from <REF ID="R-17" RPTR="47">Ravi and Knight (2011</REF><REF ID="R-18" RPTR="58">Ravi and Knight (2011</REF>b).</S>
          <S ID="S-37131">Rows 2a, 2b show results from the of <REF ID="R-14" RPTR="37">Nuhn et al. (2012)</REF>.</S>
          <S ID="S-37132">The last two rows display results for the new method using Bayesian hash sampling.</S>
          <S ID="S-37133">Overall, using a 3-gram language model (instead of 2-gram) for decipherment training improves the performance for all methods.</S>
          <S ID="S-37134">We observe that our method produces much better results than the others even with a 2-gram LM.</S>
          <S ID="S-37135">With a 3-gram LM, the new method achieves the best performance; the highest BLEU score reported on this task.</S>
          <S ID="S-37136">It is also interesting to note that the hash sampling method yields much better results than the Bayesian inference method presented in (<REF ID="R-17" RPTR="52">Ravi and Knight, 2011</REF><REF ID="R-18" RPTR="63">Ravi and Knight, 2011</REF>b).</S>
          <S ID="S-37137">This is due to the accelerated sampling scheme introduced earlier which helps it converge to better solutions faster.</S>
          <S ID="S-37138">Table 2 (last column) also compares the efficiency of different methods in terms of CPU time required for training.</S>
          <S ID="S-37139">Both our 2-gram and 3-gram based methods are significantly faster than those previously reported for EM based training methods presented in (<REF ID="R-17" RPTR="53">Ravi and Knight, 2011</REF><REF ID="R-18" RPTR="64">Ravi and Knight, 2011</REF>b; Nuhn</S>
        </P>
        <P>
          <S ID="S-37140">et al., 2012).</S>
          <S ID="S-37141">This is very encouraging since <REF ID="R-14" RPTR="38">Nuhn et al. (2012)</REF> reported obtaining a speedup by pruning translation candidates (to &#8764;1/8th the original size) prior to EM training.</S>
          <S ID="S-37142">On the other hand, we sample from the full set of translation candidates including additional target phrase (of size 2) candidates which results in a much larger vocabulary consisting of 1600 candidates (&#8764;4 times the original size), yet our method runs much faster and yields better results.</S>
          <S ID="S-37143">The table also demonstrates the siginificant speedup achieved by the hash sampler over a standard Gibbs sampler for the same model (&#8764;85 times faster when using a 2-gram LM).</S>
          <S ID="S-37144">We also compare the results against MT performance from parallel training&#8212;MOSES system (<REF ID="R-13" RPTR="28">Koehn et al., 2007</REF>) trained on 20k sentence pairs.</S>
          <S ID="S-37145">The comparable number for Table 2 is 63.6 BLEU.</S>
        </P>
        <P>
          <S ID="S-37146">Spanish (e) French (f)</S>
        </P>
        <P>
          <S ID="S-37147">EMEA Results Table 3 shows the results achieved by our method on the larger task involving EMEA corpus.</S>
          <S ID="S-37148">Here, the target vocabulary V e is much higher (67k).</S>
          <S ID="S-37149">In spite of this challenge and the model complexity, we can still perform decipherment training using Bayesian inference.</S>
          <S ID="S-37150">We report the first BLEU score results on such a large-scale task using a 2-gram LM.</S>
          <S ID="S-37151">This is achieved without using any seed lexicon or parallel corpora.</S>
          <S ID="S-37152">The results are encouraging and demonstrates the ability of the method to scale to large-scale settings while performing efficient inference with complex models, which we believe will be especially useful for future MT application in scenarios where parallel data is hard to obtain.</S>
          <S ID="S-37153">Table 4 displays some sample 1-best translations learned using this method.</S>
        </P>
        <P>
          <S ID="S-37154">For comparison purposes, we also evaluate MT performance on this task using parallel training (MOSES trained with hundred sentence pairs) and observe a BLEU score of 11.7.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>7 Discussion and Future Work</HEADER>
      <P>
        <S ID="S-37163">There exists some work (<REF ID="R-03" RPTR="10">Dou and Knight, 2012</REF>; <REF ID="R-08" RPTR="19">Klementiev et al., 2012</REF>) that uses monolingual corpora to induce phrase tables, etc.</S>
        <S ID="S-37164">These when combined with standard MT systems such as Moses (<REF ID="R-13" RPTR="29">Koehn et al., 2007</REF>) trained on parallel corpora, have been shown to yield some BLEU score improvements.</S>
        <S ID="S-37165"><REF ID="R-14" RPTR="39">Nuhn et al. (2012)</REF> show some sample English/French lexicon entries learnt using EM algorithm with a pruned translation candidate set on a portion of the Gigaword corpus 11 but do not report any actual MT results.</S>
        <S ID="S-37166">In addition, as we showed earlier our method can use Bayesian inference (which has a lot of nice properties compared to EM for unsupervised natural language tasks (<REF ID="R-07" RPTR="17">Johnson, 2007</REF>; <REF ID="R-05" RPTR="13">Goldwater and Griffiths, 2007</REF>)) and still scale easily to large vocabulary, data sizes while allowing the models to grow in complexity.</S>
        <S ID="S-37167">Most importantly, our method produces better translation results (as demonstrated on the OPUS MT task).</S>
        <S ID="S-37168">And to our knowledge, this is the first time that anyone has reported MT results under truly non-parallel settings on such a large-scale task (EMEA).</S>
        <S ID="S-37169">Our method is also easily extensible to outof-domain translation scenarios similar to (<REF ID="R-03" RPTR="11">Dou and Knight, 2012</REF>).</S>
        <S ID="S-37170">While their work also uses Bayesian inference with a slice sampling scheme, our new approach uses a novel hash sampling scheme for decipherment that can easily scale to more complex models.</S>
        <S ID="S-37171">The new decipherment framework also allows one to easily incorporate additional information (besides standard word translations) as features (e.g., context features, topic features, etc.) for unsupervised machine translation which can help further improve the performance in addition to accelerating the sampling process.</S>
        <S ID="S-37172">We already demonstrated the utility of this system by going beyond words and incorporating phrase translations in a decipherment model for the first time.</S>
        <S ID="S-37173">In the future, we can obtain further speedups</S>
      </P>
      <P>
        <S ID="S-37174">(especially for large-scale tasks) by parallelizing the sampling scheme seamlessly across multiple machines and CPU cores.</S>
        <S ID="S-37175">The new framework can also be stacked with complementary techniques such as slice sampling, blocked (and type) sampling to further improve inference efficiency.</S>
      </P>
      <P>
        <S ID="S-37176">11 http://www.ldc.upenn.edu/Catalog/catalogEntry.jsp?</S>
      </P>
      <P>
        <S ID="S-37177">catalogId=LDC2003T05</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>8 Conclusion</HEADER>
      <P>
        <S ID="S-37178">To summarize, our method is significantly faster than previous methods based on EM or Bayesian with standard Gibbs sampling and obtains better results than any previously published methods for the same task.</S>
        <S ID="S-37179">The new framework also allows performing Bayesian inference for decipherment applications with more complex models than previously shown.</S>
        <S ID="S-37180">We believe this framework will be useful for further extending MT models in the future to improve translation performance and for many other unsupervised decipherment application scenarios.</S>
      </P>
    </DIV>
  </BODY>
  <ACKNOWLEDGMENTS/>
  <REFERENCES>
    <REFERENCE ID="0">
      <RAUTHOR>Amr Ahmed</RAUTHOR>
      <REFTITLE>Fastex: Hash clustering with exponential families.</REFTITLE>
      <DATE>2012</DATE>
    </REFERENCE>
    <REFERENCE ID="1">
      <RAUTHOR>Moses S Charikar</RAUTHOR>
      <REFTITLE>Similarity estimation techniques from rounding algorithms.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="2">
      <RAUTHOR>A P Dempster</RAUTHOR>
      <REFTITLE>Maximum likelihood from incomplete data via the em algorithm.</REFTITLE>
      <DATE>1977</DATE>
    </REFERENCE>
    <REFERENCE ID="3">
      <RAUTHOR>Qing Dou</RAUTHOR>
      <REFTITLE>Large scale decipherment for out-of-domain machine translation.</REFTITLE>
      <DATE>2012</DATE>
    </REFERENCE>
    <REFERENCE ID="4">
      <RAUTHOR>Pascale Fung</RAUTHOR>
      <REFTITLE>Finding terminology translations from non-parallel corpora.</REFTITLE>
      <DATE>1997</DATE>
    </REFERENCE>
    <REFERENCE ID="5">
      <RAUTHOR>Sharon Goldwater</RAUTHOR>
      <REFTITLE>A fully bayesian approach to unsupervised part-of-speech tagging.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="6">
      <RAUTHOR>Aria Haghighi</RAUTHOR>
      <REFTITLE>Learning bilingual lexicons from monolingual corpora.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="7">
      <RAUTHOR>Mark Johnson</RAUTHOR>
      <REFTITLE>Why doesn&#8217;t EM find good HMM POS-taggers?</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="8">
      <RAUTHOR>Ann Irvine Klementiev</RAUTHOR>
      <REFTITLE>Toward statistical machine translation without parallel corpora.</REFTITLE>
      <DATE>2012</DATE>
    </REFERENCE>
    <REFERENCE ID="9">
      <RAUTHOR>Kevin Knight</RAUTHOR>
      <REFTITLE>A computational approach to deciphering unknown scripts.</REFTITLE>
      <DATE>1999</DATE>
    </REFERENCE>
    <REFERENCE ID="10">
      <RAUTHOR>Benjamin Snyder</RAUTHOR>
      <REFTITLE>A statistical model for lost language decipherment.</REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="11">
      <RAUTHOR>J&#246;rg Tiedemann</RAUTHOR>
      <REFTITLE>News from opus - a collection of multilingual parallel corpora with tools and interfaces.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="12">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Estimating word translation probabilities from unrelated monolingual corpora using the em algorithm.</REFTITLE>
      <DATE>2000</DATE>
    </REFERENCE>
    <REFERENCE ID="13">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Chris Dyer, Ond&#345;ej Bojar,</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="14">
      <RAUTHOR>Malte Nuhn</RAUTHOR>
      <REFTITLE>Deciphering foreign language by combining language models and context vectors.</REFTITLE>
      <DATE>2012</DATE>
    </REFERENCE>
    <REFERENCE ID="15">
      <RAUTHOR>Kishore Papineni</RAUTHOR>
      <REFTITLE>Bleu: a method for automatic evaluation of machine translation.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="16">
      <RAUTHOR>Reinhard Rapp</RAUTHOR>
      <REFTITLE>Identifying word translations in non-parallel texts.</REFTITLE>
      <DATE>1995</DATE>
    </REFERENCE>
    <REFERENCE ID="17">
      <RAUTHOR>Sujith Ravi</RAUTHOR>
      <REFTITLE>Bayesian inference for zodiac and other homophonic ciphers.</REFTITLE>
      <DATE>2011</DATE>
    </REFERENCE>
    <REFERENCE ID="18">
      <RAUTHOR>Sujith Ravi</RAUTHOR>
      <REFTITLE>Deciphering foreign language.</REFTITLE>
      <DATE>2011</DATE>
    </REFERENCE>
  </REFERENCES>
</PAPER>
