<document>
  <filename>W10-2916</filename>
  <authors>
    <author>Sankaranarayanan Ananthakrishnan</author>
    <author>Rohit Prasad</author>
    <author>David Stallard</author>
  </authors>
  <title>A Semi-Supervised Batch-Mode Active Learning Strategy for Improved Statistical Machine Translation</title>
  <content>
    <sections>
      <section>
        <index>0</index>
        <title>Abstract</title>
        <text>The availability of substantial, in-domain parallel corpora is critical for the development of high-performance statistical machine translation (SMT) systems. Such corpora, however, are expensive to produce due to the labor intensive nature of manual translation. We propose to alleviate this problem with a novel, semisupervised, batch-mode active learning strategy that attempts to maximize indomain coverage by selecting sentences, which represent a balance between domain match, translation difficulty, and batch diversity. Simulation experiments on an English-to-Pashto translation task show that the proposed strategy not only outperforms the random selection baseline, but also traditional active learning techniques based on dissimilarity to existing training data. Our approach achieves a relative improvement of 45.9% in BLEU over the seed baseline, while the closest competitor gained only 24.8% with the same number of selected sentences.</text>
        <paragraphs>
          <paragraph>
            <sentence>
              <text>The availability of substantial, in-domain parallel corpora is critical for the development of high-performance statistical machine translation (SMT) systems.</text>
              <doc_id>0</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>Such corpora, however, are expensive to produce due to the labor intensive nature of manual translation.</text>
              <doc_id>1</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>We propose to alleviate this problem with a novel, semisupervised, batch-mode active learning strategy that attempts to maximize indomain coverage by selecting sentences, which represent a balance between domain match, translation difficulty, and batch diversity.</text>
              <doc_id>2</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>Simulation experiments on an English-to-Pashto translation task show that the proposed strategy not only outperforms the random selection baseline, but also traditional active learning techniques based on dissimilarity to existing training data.</text>
              <doc_id>3</doc_id>
              <sec_id>3</sec_id>
            </sentence>
            <sentence>
              <text>Our approach achieves a relative improvement of 45.9% in BLEU over the seed baseline, while the closest competitor gained only 24.8% with the same number of selected sentences.</text>
              <doc_id>4</doc_id>
              <sec_id>4</sec_id>
            </sentence>
          </paragraph>
        </paragraphs>
        <subsections/>
      </section>
      <section>
        <index>1</index>
        <title>1 Introduction</title>
        <text>Rapid development of statistical machine translation (SMT) systems for resource-poor language pairs is a problem of significant interest to the research community in academia, industry, and government. Tight turn-around schedules, budget restrictions, and scarcity of human translators preclude the production of large parallel corpora, which form the backbone of SMT systems.
Given these constraints, the focus is on making the best possible use of available resources. This usually involves some form of prioritized data collection. In other words, one would like to construct the smallest possible parallel training corpus that achieves a desired level of performance on unseen test data. Within an active learning framework, this can be cast as a data selection problem. The goal is to choose, for manual translation, the most informative instances from a large pool of source language sentences. The resulting sentence pairs, in combination with any existing in-domain seed parallel corpus, are expected to provide a significantly higher performance gain than a na&#239;ve random selection strategy. This process is repeated until a certain level of performance is attained.
Previous work on active learning for SMT has focused on unsupervised dissimilarity measures for sentence selection. Eck et al. (2005) describe a selection strategy that attempts to maximize coverage by choosing sentences with the highest proportion of previously unseen n-grams. However, if the pool is not completely in-domain, this strategy may select irrelevant sentences, whose translations are unlikely to improve performance on an in-domain test set. They also propose a technique, based on TF-IDF, to de-emphasize sentences similar to those that have already been selected. However, this strategy is bootstrapped by random initial choices that do not necessarily favor sentences that are difficult to translate. Finally, they work exclusively with the source language and do not use any SMT-derived features to guide selection.
Haffari et al. (2009) propose a number of features, such as similarity to the seed corpus, translation probability, relative frequencies of n-grams and &#8220;phrases&#8221; in the seed vs. pool data, etc., for active learning. While many of their experiments use the above features independently to compare their relative efficacy, one of their experiments attempts to predict a rank, as a linear combination of these features, for each candidate sentence. The top-ranked sentences are chosen for manual translation. The latter strategy is particularly relevant to this paper, because the goal of our active
learning strategy is not to compare features, but to learn the trade-off between various characteristics of the candidate sentences that potentially maximizes translation improvement.
The parameters of the linear ranking model proposed by Haffari et al. (2009) are trained using two held-out development sets D 1 and D 2 - the model attempts to learn the ordering of D 1 that incrementally maximizes translation performance on D 2 . Besides the need for multiple parallel corpora and the computationally intensive nature of incrementally retraining an SMT system, their approach suffers from another major deficiency. It requires that the pool have the same distributional characteristics as the development sets used to train the ranking model. Additionally, they select all sentences that constitute a batch in a single operation following the ranking procedure. Since similar or identical sentences in the pool will typically meet the selection criteria simultaneously, this can have the undesired effect of choosing redundant batches with low diversity. This results in under-utilization of human translation resources. In this paper, we propose a novel batch-mode active learning strategy that ameliorates the above issues. Our semi-supervised learning approach combines a parallel ranking strategy with several features, including domain representativeness, translation confidence, and batch diversity. The proposed approach includes a greedy, incremental batch selection strategy, which encourages diversity and reduces redundancy. The following sections detail our active learning approach, including the experimental setup and simulation results that clearly demonstrate its effectiveness.</text>
        <paragraphs>
          <paragraph>
            <sentence>
              <text>Rapid development of statistical machine translation (SMT) systems for resource-poor language pairs is a problem of significant interest to the research community in academia, industry, and government.</text>
              <doc_id>5</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>Tight turn-around schedules, budget restrictions, and scarcity of human translators preclude the production of large parallel corpora, which form the backbone of SMT systems.</text>
              <doc_id>6</doc_id>
              <sec_id>1</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Given these constraints, the focus is on making the best possible use of available resources.</text>
              <doc_id>7</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>This usually involves some form of prioritized data collection.</text>
              <doc_id>8</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>In other words, one would like to construct the smallest possible parallel training corpus that achieves a desired level of performance on unseen test data.</text>
              <doc_id>9</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>Within an active learning framework, this can be cast as a data selection problem.</text>
              <doc_id>10</doc_id>
              <sec_id>3</sec_id>
            </sentence>
            <sentence>
              <text>The goal is to choose, for manual translation, the most informative instances from a large pool of source language sentences.</text>
              <doc_id>11</doc_id>
              <sec_id>4</sec_id>
            </sentence>
            <sentence>
              <text>The resulting sentence pairs, in combination with any existing in-domain seed parallel corpus, are expected to provide a significantly higher performance gain than a na&#239;ve random selection strategy.</text>
              <doc_id>12</doc_id>
              <sec_id>5</sec_id>
            </sentence>
            <sentence>
              <text>This process is repeated until a certain level of performance is attained.</text>
              <doc_id>13</doc_id>
              <sec_id>6</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Previous work on active learning for SMT has focused on unsupervised dissimilarity measures for sentence selection.</text>
              <doc_id>14</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>Eck et al. (2005) describe a selection strategy that attempts to maximize coverage by choosing sentences with the highest proportion of previously unseen n-grams.</text>
              <doc_id>15</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>However, if the pool is not completely in-domain, this strategy may select irrelevant sentences, whose translations are unlikely to improve performance on an in-domain test set.</text>
              <doc_id>16</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>They also propose a technique, based on TF-IDF, to de-emphasize sentences similar to those that have already been selected.</text>
              <doc_id>17</doc_id>
              <sec_id>3</sec_id>
            </sentence>
            <sentence>
              <text>However, this strategy is bootstrapped by random initial choices that do not necessarily favor sentences that are difficult to translate.</text>
              <doc_id>18</doc_id>
              <sec_id>4</sec_id>
            </sentence>
            <sentence>
              <text>Finally, they work exclusively with the source language and do not use any SMT-derived features to guide selection.</text>
              <doc_id>19</doc_id>
              <sec_id>5</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Haffari et al. (2009) propose a number of features, such as similarity to the seed corpus, translation probability, relative frequencies of n-grams and &#8220;phrases&#8221; in the seed vs. pool data, etc., for active learning.</text>
              <doc_id>20</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>While many of their experiments use the above features independently to compare their relative efficacy, one of their experiments attempts to predict a rank, as a linear combination of these features, for each candidate sentence.</text>
              <doc_id>21</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>The top-ranked sentences are chosen for manual translation.</text>
              <doc_id>22</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>The latter strategy is particularly relevant to this paper, because the goal of our active</text>
              <doc_id>23</doc_id>
              <sec_id>3</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>learning strategy is not to compare features, but to learn the trade-off between various characteristics of the candidate sentences that potentially maximizes translation improvement.</text>
              <doc_id>24</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>The parameters of the linear ranking model proposed by Haffari et al. (2009) are trained using two held-out development sets D 1 and D 2 - the model attempts to learn the ordering of D 1 that incrementally maximizes translation performance on D 2 .</text>
              <doc_id>25</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>Besides the need for multiple parallel corpora and the computationally intensive nature of incrementally retraining an SMT system, their approach suffers from another major deficiency.</text>
              <doc_id>26</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>It requires that the pool have the same distributional characteristics as the development sets used to train the ranking model.</text>
              <doc_id>27</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>Additionally, they select all sentences that constitute a batch in a single operation following the ranking procedure.</text>
              <doc_id>28</doc_id>
              <sec_id>3</sec_id>
            </sentence>
            <sentence>
              <text>Since similar or identical sentences in the pool will typically meet the selection criteria simultaneously, this can have the undesired effect of choosing redundant batches with low diversity.</text>
              <doc_id>29</doc_id>
              <sec_id>4</sec_id>
            </sentence>
            <sentence>
              <text>This results in under-utilization of human translation resources.</text>
              <doc_id>30</doc_id>
              <sec_id>5</sec_id>
            </sentence>
            <sentence>
              <text>In this paper, we propose a novel batch-mode active learning strategy that ameliorates the above issues.</text>
              <doc_id>31</doc_id>
              <sec_id>6</sec_id>
            </sentence>
            <sentence>
              <text>Our semi-supervised learning approach combines a parallel ranking strategy with several features, including domain representativeness, translation confidence, and batch diversity.</text>
              <doc_id>32</doc_id>
              <sec_id>7</sec_id>
            </sentence>
            <sentence>
              <text>The proposed approach includes a greedy, incremental batch selection strategy, which encourages diversity and reduces redundancy.</text>
              <doc_id>33</doc_id>
              <sec_id>8</sec_id>
            </sentence>
            <sentence>
              <text>The following sections detail our active learning approach, including the experimental setup and simulation results that clearly demonstrate its effectiveness.</text>
              <doc_id>34</doc_id>
              <sec_id>9</sec_id>
            </sentence>
          </paragraph>
        </paragraphs>
        <subsections/>
      </section>
      <section>
        <index>2</index>
        <title>2 Active Learning Paradigm</title>
        <text>Active learning has been studied extensively in the context of multi-class labeling problems, and theoretically optimal selection strategies have been identified for simple classification tasks with metric features (Freund et al., 1997). However, natural language applications such as SMT present a significantly higher level of complexity. For instance, SMT model parameters (translation rules, language model n-grams, etc.) are not fixed in number or type, and vary depending on the training instances. This gives rise to the concept of domain. Even large quantities of out-of-domain training data usually do not improve translation performance. As we will see, this causes simple active selection techniques based on dissimilarity or translation difficulty to be ineffective, because they tend to favor out-of-domain sentences. Our proposed active learning strategy is motivated by the idea that the chosen sentences should maximize coverage, and by extension, translation performance on an unseen test set. It should pick sentences that represent the target domain, while simultaneously enriching the training data with hitherto unseen, difficult-to-translate constructs that are likely to improve performance on a test set. We refer to the former as representativeness and to the latter as difficulty. Since it is computationally prohibitive to retrain an SMT system for individual translation pairs, a batch of sentences is usually selected at each iteration. We desire that each batch be sufficiently diverse; this increases the number of concepts (phrase pairs, translation rules, etc.) that can be learned from manual translations of a selected batch. Thus, our active learning strategy attempts, at each iteration, to select a batch of mutually diverse source sentences, which, while introducing new concepts, shares at least some commonality with the target domain. This is done in a completely statistical, data-driven fashion. In designing this active learning paradigm, we make the following assumptions.
&#8226; A small seed parallel corpus S is available for training an initial SMT system. This may range from a few hundred to a few thousand sentence pairs.
&#8226; Sentences must be selected from a large pool P. This may be an arbitrary collection of inand out-of-domain source language sentences. Some measure of redundancy is permitted and expected, i.e. some sentences may be identical or very similar to others.
&#8226; A development set D is available to tune the SMT system and train the selection algorithm. An unseen test set T is used to evaluate it.
&#8226; The seed, development, and test sets are derived from the target domain distribution.
To re-iterate, we do not assume or require the pool to have the same domain distribution as the seed, development, and test sets. This reflects a real-world scenario, where the pool may be drawn from multiple sources (e.g. targeted collections, newswire text, web, etc.). This is a key departure from existing work on active learning for SMT.
Monolingual pool
Seed corpus Pool training Devel. set
SMT system Domain match
C1
Trans. difficulty Preferred order
C2
Diversity
Input features MLP Classifiers Classifier targets</text>
        <paragraphs>
          <paragraph>
            <sentence>
              <text>Active learning has been studied extensively in the context of multi-class labeling problems, and theoretically optimal selection strategies have been identified for simple classification tasks with metric features (Freund et al., 1997).</text>
              <doc_id>35</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>However, natural language applications such as SMT present a significantly higher level of complexity.</text>
              <doc_id>36</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>For instance, SMT model parameters (translation rules, language model n-grams, etc.) are not fixed in number or type, and vary depending on the training instances.</text>
              <doc_id>37</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>This gives rise to the concept of domain.</text>
              <doc_id>38</doc_id>
              <sec_id>3</sec_id>
            </sentence>
            <sentence>
              <text>Even large quantities of out-of-domain training data usually do not improve translation performance.</text>
              <doc_id>39</doc_id>
              <sec_id>4</sec_id>
            </sentence>
            <sentence>
              <text>As we will see, this causes simple active selection techniques based on dissimilarity or translation difficulty to be ineffective, because they tend to favor out-of-domain sentences.</text>
              <doc_id>40</doc_id>
              <sec_id>5</sec_id>
            </sentence>
            <sentence>
              <text>Our proposed active learning strategy is motivated by the idea that the chosen sentences should maximize coverage, and by extension, translation performance on an unseen test set.</text>
              <doc_id>41</doc_id>
              <sec_id>6</sec_id>
            </sentence>
            <sentence>
              <text>It should pick sentences that represent the target domain, while simultaneously enriching the training data with hitherto unseen, difficult-to-translate constructs that are likely to improve performance on a test set.</text>
              <doc_id>42</doc_id>
              <sec_id>7</sec_id>
            </sentence>
            <sentence>
              <text>We refer to the former as representativeness and to the latter as difficulty.</text>
              <doc_id>43</doc_id>
              <sec_id>8</sec_id>
            </sentence>
            <sentence>
              <text>Since it is computationally prohibitive to retrain an SMT system for individual translation pairs, a batch of sentences is usually selected at each iteration.</text>
              <doc_id>44</doc_id>
              <sec_id>9</sec_id>
            </sentence>
            <sentence>
              <text>We desire that each batch be sufficiently diverse; this increases the number of concepts (phrase pairs, translation rules, etc.) that can be learned from manual translations of a selected batch.</text>
              <doc_id>45</doc_id>
              <sec_id>10</sec_id>
            </sentence>
            <sentence>
              <text>Thus, our active learning strategy attempts, at each iteration, to select a batch of mutually diverse source sentences, which, while introducing new concepts, shares at least some commonality with the target domain.</text>
              <doc_id>46</doc_id>
              <sec_id>11</sec_id>
            </sentence>
            <sentence>
              <text>This is done in a completely statistical, data-driven fashion.</text>
              <doc_id>47</doc_id>
              <sec_id>12</sec_id>
            </sentence>
            <sentence>
              <text>In designing this active learning paradigm, we make the following assumptions.</text>
              <doc_id>48</doc_id>
              <sec_id>13</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>&#8226; A small seed parallel corpus S is available for training an initial SMT system.</text>
              <doc_id>49</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>This may range from a few hundred to a few thousand sentence pairs.</text>
              <doc_id>50</doc_id>
              <sec_id>1</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>&#8226; Sentences must be selected from a large pool P.</text>
              <doc_id>51</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>This may be an arbitrary collection of inand out-of-domain source language sentences.</text>
              <doc_id>52</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>Some measure of redundancy is permitted and expected, i.e. some sentences may be identical or very similar to others.</text>
              <doc_id>53</doc_id>
              <sec_id>2</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>&#8226; A development set D is available to tune the SMT system and train the selection algorithm.</text>
              <doc_id>54</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>An unseen test set T is used to evaluate it.</text>
              <doc_id>55</doc_id>
              <sec_id>1</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>&#8226; The seed, development, and test sets are derived from the target domain distribution.</text>
              <doc_id>56</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>To re-iterate, we do not assume or require the pool to have the same domain distribution as the seed, development, and test sets.</text>
              <doc_id>57</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>This reflects a real-world scenario, where the pool may be drawn from multiple sources (e.g. targeted collections, newswire text, web, etc.).</text>
              <doc_id>58</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>This is a key departure from existing work on active learning for SMT.</text>
              <doc_id>59</doc_id>
              <sec_id>2</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Monolingual pool</text>
              <doc_id>60</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Seed corpus Pool training Devel.</text>
              <doc_id>61</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>set</text>
              <doc_id>62</doc_id>
              <sec_id>1</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>SMT system Domain match</text>
              <doc_id>63</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>C1</text>
              <doc_id>64</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Trans.</text>
              <doc_id>65</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>difficulty Preferred order</text>
              <doc_id>66</doc_id>
              <sec_id>1</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>C2</text>
              <doc_id>67</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Diversity</text>
              <doc_id>68</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>Input features MLP Classifiers Classifier targets</text>
              <doc_id>69</doc_id>
              <sec_id>0</sec_id>
            </sentence>
          </paragraph>
        </paragraphs>
        <subsections/>
      </section>
      <section>
        <index>3</index>
        <title>3 Active Learning Architecture</title>
        <text>Figure 1 illustrates the proposed active learning architecture in the form of a high-level flowdiagram. We begin by randomly sampling a small fraction of the large monolingual pool P to create a pool training set P T , which is used to train the learner. The remainder, which we call the pool evaluation setP E , is set aside for active selection. We also train an initial phrase-based SMT system (Koehn et al., 2003) with the available seed corpus. The pool training setP T , in conjunction with the seed corpus S, initial SMT system, and heldout development setD, is used to derive a number of input features as well as target labels for training two parallel classifiers.</text>
        <paragraphs>
          <paragraph>
            <sentence>
              <text>Figure 1 illustrates the proposed active learning architecture in the form of a high-level flowdiagram.</text>
              <doc_id>70</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>We begin by randomly sampling a small fraction of the large monolingual pool P to create a pool training set P T , which is used to train the learner.</text>
              <doc_id>71</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>The remainder, which we call the pool evaluation setP E , is set aside for active selection.</text>
              <doc_id>72</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>We also train an initial phrase-based SMT system (Koehn et al., 2003) with the available seed corpus.</text>
              <doc_id>73</doc_id>
              <sec_id>3</sec_id>
            </sentence>
            <sentence>
              <text>The pool training setP T , in conjunction with the seed corpus S, initial SMT system, and heldout development setD, is used to derive a number of input features as well as target labels for training two parallel classifiers.</text>
              <doc_id>74</doc_id>
              <sec_id>4</sec_id>
            </sentence>
          </paragraph>
        </paragraphs>
        <subsections>
          <subsection>
            <index>0</index>
            <title>3.1 Preferred Ordering</title>
            <text>The learner must be able to map input features to an ordering of the pool sentences that attempts to maximize coverage on an unseen test set. We teach it to do this by providing it with an ordering of P T that incrementally maximizes source coverage onD. This preferred ordering algorithm incrementally maps sentences inP T to a ordered set O T by picking, at each iteration, the sentence with the highest coverage criterion with respect to D, and inserting it at the current position within O T . The coverage criterion is based on content-word n-gram overlap with D, discounted by constructs already observed in S and higher-ranked sentences in O T , as illustrated in Algorithm 1. Our hypothesis is that sentences, which maximally improve coverage, likely lead to bigger gains in translation performance as well.
The O(|P T | 2 ) complexity of this algorithm is one reason we restrict P T to a few thousand sentences. Another reason not to order the entire pool and simply select the top-ranked sentences, is that batches thus constructed would overfit the development set on which the ordering is based, and not generalize well to an unseen test set.</text>
            <paragraphs>
              <paragraph>
                <sentence>
                  <text>The learner must be able to map input features to an ordering of the pool sentences that attempts to maximize coverage on an unseen test set.</text>
                  <doc_id>75</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>We teach it to do this by providing it with an ordering of P T that incrementally maximizes source coverage onD.</text>
                  <doc_id>76</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>This preferred ordering algorithm incrementally maps sentences inP T to a ordered set O T by picking, at each iteration, the sentence with the highest coverage criterion with respect to D, and inserting it at the current position within O T .</text>
                  <doc_id>77</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>The coverage criterion is based on content-word n-gram overlap with D, discounted by constructs already observed in S and higher-ranked sentences in O T , as illustrated in Algorithm 1.</text>
                  <doc_id>78</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>Our hypothesis is that sentences, which maximally improve coverage, likely lead to bigger gains in translation performance as well.</text>
                  <doc_id>79</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>The O(|P T | 2 ) complexity of this algorithm is one reason we restrict P T to a few thousand sentences.</text>
                  <doc_id>80</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>Another reason not to order the entire pool and simply select the top-ranked sentences, is that batches thus constructed would overfit the development set on which the ordering is based, and not generalize well to an unseen test set.</text>
                  <doc_id>81</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
              </paragraph>
            </paragraphs>
          </subsection>
          <subsection>
            <index>1</index>
            <title>3.2 Ranker Features</title>
            <text>Each candidate sentence in the pool is represented by a vector of features, which fall under one of the three categories, viz. representativeness, difficulty, and diversity. We refer to the first two as context-independent, because they can be computed independently for each sentence. Diversity is a context-dependent feature and must be evaluated in the context of an ordering of sentences.
Algorithm 1 Preferred ordering O T &#8592; () S g &#8592; count(g) &#8704;g &#8712; ngr(S) D g &#8592; count(g) &#8704;g &#8712; ngr(D) fork = 1 to|P T | do P U &#8592; P T &#8722;O T
y &#8727; &#8592; argmax
y&#8712;P U
&#8721;
g&#8712;ngr(y)
y g &#215;D g &#215;n S g +1
O T (k) &#8592; y &#8727; S g &#8592; S g +y &#8727; g &#8704;g &#8712; ngr(y &#8727; ) end for return O T
3.2.1 Domain Representativeness Domain representativeness features gauge the degree of similarity between a candidate pool sentence and the seed training data. We quantify this using an n-gram overlap measure between candidate sentence x and the seed corpus S defined by Equation 1.
sim(x,S) =
&#8721;
g&#8712;ngr(x)
x g &#215; min(Sn g ,C n)
C n &#8721; (1)
x g
g&#8712;ngr(x)
x g is the number of times n-gram g occurs in x, S g the number of times it occurs in the seed corpus, n its length in words, and C n the count of n-grams of length n in S. Longer n-grams that occur frequently in the seed receive high similarity scores, and vice-versa. In evaluating this feature, we only consider n-grams up to length five that contain least one content word. Another simple domain similarity feature we use is sentence length. Sentences in conversational domains are typically short, while those in web and newswire domains run longer.
3.2.2 Translation Difficulty All else being equal, the selection strategy should favor sentences that the existing SMT system finds difficult to translate. To this end, we estimate a confidence score for each SMT hypothesis, using a discriminative classification framework reminiscent of Blatz et al. (2004). Confidence estimation is treated as a binary classification problem, where each hypothesized word is labeled &#8220;correct&#8221; or &#8220;incorrect&#8221;. Word-level reference labels for training the classifier are obtained from Translation Edit Rate (TER) analysis, which produces the lowest-cost alignment between the hypotheses and the gold-standard references (Snover et al., 2006). A hypothesized word is &#8220;correct&#8221; if it aligns to itself in this alignment, and &#8220;incorrect&#8221; otherwise. We derive features for confidence estimation from the phrase derivations used by the decoder in generating the hypotheses. For each target word, we look up the corresponding source phrase that produced it, and use this information to compute a number of features from the translation phrase table and target language model (LM). These include the in-context LM probability of the target word, the forward and reverse phrase translation probabilities, the maximum forward and reverse word-level lexical translation probabilities, number of competing target phrases in which the target word occurs, etc. In all, we use 11 word-level features (independent of the active learning features) to train the classifier in conjunction with the abovementioned binary reference labels. A logistic regression model is used to directly estimate the posterior probability of the binary word label. Thus, our confidence score is essentially the probability of the word being &#8220;incorrect&#8221;. Sentence-level confidence is computed as the geometric average of word-level posteriors. Confidence estimation models are trained on the held-out development set.
We employ two additional measures of translation difficulty for active learning: (a) the number of &#8220;unknown&#8221; words in target hypotheses caused by untranslatable source words, and (b) the average length of source phrases in the 1-best SMT decoder derivations.
3.2.3 Batch Diversity Batch diversity is evaluated in the context of an explicit ordering of the candidate sentences. In general, sentences that are substantially similar to those above them in a ranked list have low diversity, and vice-versa. We use content-word n-gram overlap to measure similarity with previous sentences, per Equation 2. &#8721;
n&#215;B g
d(b | B) = 1.0&#8722; &#8721;
g&#8712;ngr(b)
g&#8712;ngr(b)
n&#215;max(B g ,1.0) (2)
B represents the set of sentences ranked higher than the candidate b, for which we wish to evaluate diversity. B g is the number of times n-gram g
occurs in B. Longer, previously unseen n-grams serve to boost diversity. The first sentence in a given ordering is always assigned unit diversity. The coverage criterion used by the preferred ordering algorithm in Section 3.1 ensures good correspondence between the rank of a sentence and its diversity, i.e. higher-ranked in-domain sentences have higher diversity, and vice-versa.</text>
            <paragraphs>
              <paragraph>
                <sentence>
                  <text>Each candidate sentence in the pool is represented by a vector of features, which fall under one of the three categories, viz.</text>
                  <doc_id>82</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>representativeness, difficulty, and diversity.</text>
                  <doc_id>83</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>We refer to the first two as context-independent, because they can be computed independently for each sentence.</text>
                  <doc_id>84</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Diversity is a context-dependent feature and must be evaluated in the context of an ordering of sentences.</text>
                  <doc_id>85</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>Algorithm 1 Preferred ordering O T &#8592; () S g &#8592; count(g) &#8704;g &#8712; ngr(S) D g &#8592; count(g) &#8704;g &#8712; ngr(D) fork = 1 to|P T | do P U &#8592; P T &#8722;O T</text>
                  <doc_id>86</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>y &#8727; &#8592; argmax</text>
                  <doc_id>87</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>y&#8712;P U</text>
                  <doc_id>88</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>&#8721;</text>
                  <doc_id>89</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>g&#8712;ngr(y)</text>
                  <doc_id>90</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>y g &#215;D g &#215;n S g +1</text>
                  <doc_id>91</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>O T (k) &#8592; y &#8727; S g &#8592; S g +y &#8727; g &#8704;g &#8712; ngr(y &#8727; ) end for return O T</text>
                  <doc_id>92</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>3.2.1 Domain Representativeness Domain representativeness features gauge the degree of similarity between a candidate pool sentence and the seed training data.</text>
                  <doc_id>93</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>We quantify this using an n-gram overlap measure between candidate sentence x and the seed corpus S defined by Equation 1.</text>
                  <doc_id>94</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>sim(x,S) =</text>
                  <doc_id>95</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>&#8721;</text>
                  <doc_id>96</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>g&#8712;ngr(x)</text>
                  <doc_id>97</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>x g &#215; min(Sn g ,C n)</text>
                  <doc_id>98</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>C n &#8721; (1)</text>
                  <doc_id>99</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>x g</text>
                  <doc_id>100</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>g&#8712;ngr(x)</text>
                  <doc_id>101</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>x g is the number of times n-gram g occurs in x, S g the number of times it occurs in the seed corpus, n its length in words, and C n the count of n-grams of length n in S.</text>
                  <doc_id>102</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>Longer n-grams that occur frequently in the seed receive high similarity scores, and vice-versa.</text>
                  <doc_id>103</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>In evaluating this feature, we only consider n-grams up to length five that contain least one content word.</text>
                  <doc_id>104</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Another simple domain similarity feature we use is sentence length.</text>
                  <doc_id>105</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>Sentences in conversational domains are typically short, while those in web and newswire domains run longer.</text>
                  <doc_id>106</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>3.2.2 Translation Difficulty All else being equal, the selection strategy should favor sentences that the existing SMT system finds difficult to translate.</text>
                  <doc_id>107</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>To this end, we estimate a confidence score for each SMT hypothesis, using a discriminative classification framework reminiscent of Blatz et al. (2004).</text>
                  <doc_id>108</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>Confidence estimation is treated as a binary classification problem, where each hypothesized word is labeled &#8220;correct&#8221; or &#8220;incorrect&#8221;.</text>
                  <doc_id>109</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Word-level reference labels for training the classifier are obtained from Translation Edit Rate (TER) analysis, which produces the lowest-cost alignment between the hypotheses and the gold-standard references (Snover et al., 2006).</text>
                  <doc_id>110</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>A hypothesized word is &#8220;correct&#8221; if it aligns to itself in this alignment, and &#8220;incorrect&#8221; otherwise.</text>
                  <doc_id>111</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
                <sentence>
                  <text>We derive features for confidence estimation from the phrase derivations used by the decoder in generating the hypotheses.</text>
                  <doc_id>112</doc_id>
                  <sec_id>5</sec_id>
                </sentence>
                <sentence>
                  <text>For each target word, we look up the corresponding source phrase that produced it, and use this information to compute a number of features from the translation phrase table and target language model (LM).</text>
                  <doc_id>113</doc_id>
                  <sec_id>6</sec_id>
                </sentence>
                <sentence>
                  <text>These include the in-context LM probability of the target word, the forward and reverse phrase translation probabilities, the maximum forward and reverse word-level lexical translation probabilities, number of competing target phrases in which the target word occurs, etc.</text>
                  <doc_id>114</doc_id>
                  <sec_id>7</sec_id>
                </sentence>
                <sentence>
                  <text>In all, we use 11 word-level features (independent of the active learning features) to train the classifier in conjunction with the abovementioned binary reference labels.</text>
                  <doc_id>115</doc_id>
                  <sec_id>8</sec_id>
                </sentence>
                <sentence>
                  <text>A logistic regression model is used to directly estimate the posterior probability of the binary word label.</text>
                  <doc_id>116</doc_id>
                  <sec_id>9</sec_id>
                </sentence>
                <sentence>
                  <text>Thus, our confidence score is essentially the probability of the word being &#8220;incorrect&#8221;.</text>
                  <doc_id>117</doc_id>
                  <sec_id>10</sec_id>
                </sentence>
                <sentence>
                  <text>Sentence-level confidence is computed as the geometric average of word-level posteriors.</text>
                  <doc_id>118</doc_id>
                  <sec_id>11</sec_id>
                </sentence>
                <sentence>
                  <text>Confidence estimation models are trained on the held-out development set.</text>
                  <doc_id>119</doc_id>
                  <sec_id>12</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>We employ two additional measures of translation difficulty for active learning: (a) the number of &#8220;unknown&#8221; words in target hypotheses caused by untranslatable source words, and (b) the average length of source phrases in the 1-best SMT decoder derivations.</text>
                  <doc_id>120</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>3.2.3 Batch Diversity Batch diversity is evaluated in the context of an explicit ordering of the candidate sentences.</text>
                  <doc_id>121</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>In general, sentences that are substantially similar to those above them in a ranked list have low diversity, and vice-versa.</text>
                  <doc_id>122</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>We use content-word n-gram overlap to measure similarity with previous sentences, per Equation 2.</text>
                  <doc_id>123</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>&#8721;</text>
                  <doc_id>124</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>n&#215;B g</text>
                  <doc_id>125</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>d(b | B) = 1.0&#8722; &#8721;</text>
                  <doc_id>126</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>g&#8712;ngr(b)</text>
                  <doc_id>127</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>g&#8712;ngr(b)</text>
                  <doc_id>128</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>n&#215;max(B g ,1.0) (2)</text>
                  <doc_id>129</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>B represents the set of sentences ranked higher than the candidate b, for which we wish to evaluate diversity.</text>
                  <doc_id>130</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>B g is the number of times n-gram g</text>
                  <doc_id>131</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>occurs in B.</text>
                  <doc_id>132</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>Longer, previously unseen n-grams serve to boost diversity.</text>
                  <doc_id>133</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>The first sentence in a given ordering is always assigned unit diversity.</text>
                  <doc_id>134</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>The coverage criterion used by the preferred ordering algorithm in Section 3.1 ensures good correspondence between the rank of a sentence and its diversity, i.e. higher-ranked in-domain sentences have higher diversity, and vice-versa.</text>
                  <doc_id>135</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
            </paragraphs>
          </subsection>
          <subsection>
            <index>2</index>
            <title>3.3 Training the Learner</title>
            <text>The active learner is trained on the pool training set P T . The seed training corpus S serves as the basis for extracting domain similarity features for each sentence in this set. Translation difficulty features are evaluated by decoding sentences in P T with the seed SMT system. Finally, we compute diversity for each sentence inP T based on its preferred order O T according to Equation 2. Learning is semi-supervised as it does not require translation references for either P T or D.
Traditional ranking algorithms such as PRank (Crammer and Singer, 2001) work best when the number of ranks is much smaller than the sample size; more than one sample can be assigned the same rank. In the active learning problem, however, each sample is associated with a unique rank. Moreover, the dynamic range of ranks in O T is significantly smaller than that in P E , to which the ranking model is applied, resulting in a mismatch between training and evaluation conditions.
We overcome these issues by re-casting the ranking problem as a binary classification task. The top 10% sentences in O T are assigned a &#8220;select&#8221; label, while the remaining are assigned a contrary &#8220;do-not-select&#8221; label. The input features are mapped to class posterior probabilities using multi-layer perceptron (MLP) classifiers. The use of posteriors allows us to assign a unique rank to each candidate sentence. The best candidate sentence is the one to which the classifier assigns the highest posterior probability for the &#8220;select&#8221; label. We use one hidden layer with eight sigmoidactivated nodes in this implementation. Note that we actually train two MLP classifiers with different sets of input features as shown in Figure 1. Classifier C 1 is trained using only the context-independent features, whereas C 2 is trained with the full set of features including batch diversity. These classifiers are used to implement an incremental, greedy selection algorithm with parallel ranking, as explained below.
Algorithm 2 Incremental greedy selection B &#8592; () fork = 1 toN do P ci &#8592; {x &#8712; P E | d(x | B) = 1.0} P cd &#8592; {x &#8712; P E | d(x | B) &lt; 1.0} C &#8592; C 1 (f ci (P ci ))&#8746;C 2 (f cd (P cd ,B)) b k &#8592; argmax
x&#8712;P E
C(x)
P E &#8592; P E &#8722;{b k } end for return B</text>
            <paragraphs>
              <paragraph>
                <sentence>
                  <text>The active learner is trained on the pool training set P T .</text>
                  <doc_id>136</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>The seed training corpus S serves as the basis for extracting domain similarity features for each sentence in this set.</text>
                  <doc_id>137</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>Translation difficulty features are evaluated by decoding sentences in P T with the seed SMT system.</text>
                  <doc_id>138</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Finally, we compute diversity for each sentence inP T based on its preferred order O T according to Equation 2.</text>
                  <doc_id>139</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>Learning is semi-supervised as it does not require translation references for either P T or D.</text>
                  <doc_id>140</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>Traditional ranking algorithms such as PRank (Crammer and Singer, 2001) work best when the number of ranks is much smaller than the sample size; more than one sample can be assigned the same rank.</text>
                  <doc_id>141</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>In the active learning problem, however, each sample is associated with a unique rank.</text>
                  <doc_id>142</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>Moreover, the dynamic range of ranks in O T is significantly smaller than that in P E , to which the ranking model is applied, resulting in a mismatch between training and evaluation conditions.</text>
                  <doc_id>143</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>We overcome these issues by re-casting the ranking problem as a binary classification task.</text>
                  <doc_id>144</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>The top 10% sentences in O T are assigned a &#8220;select&#8221; label, while the remaining are assigned a contrary &#8220;do-not-select&#8221; label.</text>
                  <doc_id>145</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>The input features are mapped to class posterior probabilities using multi-layer perceptron (MLP) classifiers.</text>
                  <doc_id>146</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>The use of posteriors allows us to assign a unique rank to each candidate sentence.</text>
                  <doc_id>147</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>The best candidate sentence is the one to which the classifier assigns the highest posterior probability for the &#8220;select&#8221; label.</text>
                  <doc_id>148</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
                <sentence>
                  <text>We use one hidden layer with eight sigmoidactivated nodes in this implementation.</text>
                  <doc_id>149</doc_id>
                  <sec_id>5</sec_id>
                </sentence>
                <sentence>
                  <text>Note that we actually train two MLP classifiers with different sets of input features as shown in Figure 1.</text>
                  <doc_id>150</doc_id>
                  <sec_id>6</sec_id>
                </sentence>
                <sentence>
                  <text>Classifier C 1 is trained using only the context-independent features, whereas C 2 is trained with the full set of features including batch diversity.</text>
                  <doc_id>151</doc_id>
                  <sec_id>7</sec_id>
                </sentence>
                <sentence>
                  <text>These classifiers are used to implement an incremental, greedy selection algorithm with parallel ranking, as explained below.</text>
                  <doc_id>152</doc_id>
                  <sec_id>8</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>Algorithm 2 Incremental greedy selection B &#8592; () fork = 1 toN do P ci &#8592; {x &#8712; P E | d(x | B) = 1.0} P cd &#8592; {x &#8712; P E | d(x | B) &lt; 1.0} C &#8592; C 1 (f ci (P ci ))&#8746;C 2 (f cd (P cd ,B)) b k &#8592; argmax</text>
                  <doc_id>153</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>x&#8712;P E</text>
                  <doc_id>154</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>C(x)</text>
                  <doc_id>155</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>P E &#8592; P E &#8722;{b k } end for return B</text>
                  <doc_id>156</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
            </paragraphs>
          </subsection>
        </subsections>
      </section>
      <section>
        <index>4</index>
        <title>4 Incremental Greedy Selection</title>
        <text>Traditional rank-and-select batch construction approaches choose constituent sentences independently, and therefore cannot ensure that the chosen sentences are sufficiently diverse. Our strategy implements a greedy selection algorithm that constructs each batch iteratively; the decision b k (the sentence to fill the k th position in a batch) depends on all previous decisions b 1 ,&#183;&#183;&#183; ,b k&#8722;1 . This allows de-emphasizing sentences similar to those that have already been placed in the batch, while favoring samples containing previously unseen constructs.</text>
        <paragraphs>
          <paragraph>
            <sentence>
              <text>Traditional rank-and-select batch construction approaches choose constituent sentences independently, and therefore cannot ensure that the chosen sentences are sufficiently diverse.</text>
              <doc_id>157</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>Our strategy implements a greedy selection algorithm that constructs each batch iteratively; the decision b k (the sentence to fill the k th position in a batch) depends on all previous decisions b 1 ,&#183;&#183;&#183; ,b k&#8722;1 .</text>
              <doc_id>158</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>This allows de-emphasizing sentences similar to those that have already been placed in the batch, while favoring samples containing previously unseen constructs.</text>
              <doc_id>159</doc_id>
              <sec_id>2</sec_id>
            </sentence>
          </paragraph>
        </paragraphs>
        <subsections>
          <subsection>
            <index>0</index>
            <title>4.1 Parallel Ranking</title>
            <text>We begin with an empty batch B, to which sentences from the pool evaluation set P E must be added. We then partition the sentences in P E in two mutually-exclusive groups P cd and P ci . The former contains candidates that share at least one content-word n-gram with any existing sentences in B, while the latter consists of sentences that do not share any overlap with them. Note that B is empty to start with; thus, P cd is empty and P ci = P E at the beginning of the first iteration of selection. The diversity feature is computed for each sentence in P cd based on existing selections in B, while the context-independent features are evaluated for sentences in both partitions.
Next, we apply C 1 to P ci and C 2 to P cd and independently obtain posterior probabilities for the &#8220;select&#8221; label for both partitions. We take the union of class posteriors from both partitions and select the sentence with the highest probability of the &#8220;select&#8221; label to fill the next slot b k , corresponding to iteration k, in the batch. The selected sentence is subsequently removed from P E . The above parallel ranking technique (Algorithm 2) is applied iteratively until the batch
reaches a pre-determined size N. At iteration k, the remaining sentences in P E are partitioned based on overlap with previous selections b 1 ,&#183;&#183;&#183; ,b k&#8722;1 and ranked based on the union of posterior probabilities generated by the corresponding classifiers. This ensures that sentences substantially similar to those that have already been selected receive a low diversity score, and are suitably de-emphasized. Depending on the characteristics of the pool, batches constructed by this algorithm are likely more diverse than a simple rank-and-select approach.</text>
            <paragraphs>
              <paragraph>
                <sentence>
                  <text>We begin with an empty batch B, to which sentences from the pool evaluation set P E must be added.</text>
                  <doc_id>160</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>We then partition the sentences in P E in two mutually-exclusive groups P cd and P ci .</text>
                  <doc_id>161</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>The former contains candidates that share at least one content-word n-gram with any existing sentences in B, while the latter consists of sentences that do not share any overlap with them.</text>
                  <doc_id>162</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Note that B is empty to start with; thus, P cd is empty and P ci = P E at the beginning of the first iteration of selection.</text>
                  <doc_id>163</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>The diversity feature is computed for each sentence in P cd based on existing selections in B, while the context-independent features are evaluated for sentences in both partitions.</text>
                  <doc_id>164</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>Next, we apply C 1 to P ci and C 2 to P cd and independently obtain posterior probabilities for the &#8220;select&#8221; label for both partitions.</text>
                  <doc_id>165</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>We take the union of class posteriors from both partitions and select the sentence with the highest probability of the &#8220;select&#8221; label to fill the next slot b k , corresponding to iteration k, in the batch.</text>
                  <doc_id>166</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>The selected sentence is subsequently removed from P E .</text>
                  <doc_id>167</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>The above parallel ranking technique (Algorithm 2) is applied iteratively until the batch</text>
                  <doc_id>168</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>reaches a pre-determined size N.</text>
                  <doc_id>169</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>At iteration k, the remaining sentences in P E are partitioned based on overlap with previous selections b 1 ,&#183;&#183;&#183; ,b k&#8722;1 and ranked based on the union of posterior probabilities generated by the corresponding classifiers.</text>
                  <doc_id>170</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>This ensures that sentences substantially similar to those that have already been selected receive a low diversity score, and are suitably de-emphasized.</text>
                  <doc_id>171</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Depending on the characteristics of the pool, batches constructed by this algorithm are likely more diverse than a simple rank-and-select approach.</text>
                  <doc_id>172</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
            </paragraphs>
          </subsection>
        </subsections>
      </section>
      <section>
        <index>5</index>
        <title>5 Experimental Setup and Results</title>
        <text>We demonstrate the effectiveness of the proposed sentence selection algorithm by performing a set of simulation experiments in the context of an English-to-Pashto (E2P) translation task. We simulate a low-resource condition by using a very small number of training sentence pairs, sampled from the collection, to bootstrap a phrase-based SMT system. The remainder of this parallel corpus is set aside as the pool.
At each iteration, the selection algorithm picks a fixed-size batch of source sentences from the pool. The seed training data are augmented with the chosen source sentences and their translations. A new set of translation models is then estimated and used to decode the test set. We track SMT performance across several iterations and compare the proposed algorithm to a random selection baseline as well as other common selection strategies.</text>
        <paragraphs>
          <paragraph>
            <sentence>
              <text>We demonstrate the effectiveness of the proposed sentence selection algorithm by performing a set of simulation experiments in the context of an English-to-Pashto (E2P) translation task.</text>
              <doc_id>173</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>We simulate a low-resource condition by using a very small number of training sentence pairs, sampled from the collection, to bootstrap a phrase-based SMT system.</text>
              <doc_id>174</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>The remainder of this parallel corpus is set aside as the pool.</text>
              <doc_id>175</doc_id>
              <sec_id>2</sec_id>
            </sentence>
          </paragraph>
          <paragraph>
            <sentence>
              <text>At each iteration, the selection algorithm picks a fixed-size batch of source sentences from the pool.</text>
              <doc_id>176</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>The seed training data are augmented with the chosen source sentences and their translations.</text>
              <doc_id>177</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>A new set of translation models is then estimated and used to decode the test set.</text>
              <doc_id>178</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>We track SMT performance across several iterations and compare the proposed algorithm to a random selection baseline as well as other common selection strategies.</text>
              <doc_id>179</doc_id>
              <sec_id>3</sec_id>
            </sentence>
          </paragraph>
        </paragraphs>
        <subsections>
          <subsection>
            <index>0</index>
            <title>5.1 Data Configuration</title>
            <text>Our English-Pashto data originates from a twoway collection of spoken dialogues, and thus consists of two parallel sub-corpora: a directional E2P corpus and a directional Pashto-to-English (P2E) corpus. Each sub-corpus has its own independent training, development, and test partitions. The directional E2P training, development, and test sets consist of 33.9k, 2.4k, and 1.1k sentence pairs, respectively. The directional P2E training set consists of 76.5k sentence pairs.
We obtain a seed training corpus for the simulation experiments by randomly sampling 1,000 sentence pairs from the directional E2P training partition. The remainder of this set, and the entire reversed directional P2E training partition are combined to create the pool (109.4k sentence pairs). In the past, we have observed that the reversed directional P2E data gives very little performance gain in the E2P direction even though its vocabulary is similar, and can be considered &#8220;out-of-domain&#8221; as far as the E2P translation task is concerned. Thus, our pool consists of 30% in-domain and 70% outof-domain sentence pairs, making for a challenging active learning problem. A pool training set of 10k source sentences is sampled from this collection, leaving us with 99.4k candidate sentences.</text>
            <paragraphs>
              <paragraph>
                <sentence>
                  <text>Our English-Pashto data originates from a twoway collection of spoken dialogues, and thus consists of two parallel sub-corpora: a directional E2P corpus and a directional Pashto-to-English (P2E) corpus.</text>
                  <doc_id>180</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>Each sub-corpus has its own independent training, development, and test partitions.</text>
                  <doc_id>181</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>The directional E2P training, development, and test sets consist of 33.9k, 2.4k, and 1.1k sentence pairs, respectively.</text>
                  <doc_id>182</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>The directional P2E training set consists of 76.5k sentence pairs.</text>
                  <doc_id>183</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>We obtain a seed training corpus for the simulation experiments by randomly sampling 1,000 sentence pairs from the directional E2P training partition.</text>
                  <doc_id>184</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>The remainder of this set, and the entire reversed directional P2E training partition are combined to create the pool (109.4k sentence pairs).</text>
                  <doc_id>185</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>In the past, we have observed that the reversed directional P2E data gives very little performance gain in the E2P direction even though its vocabulary is similar, and can be considered &#8220;out-of-domain&#8221; as far as the E2P translation task is concerned.</text>
                  <doc_id>186</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Thus, our pool consists of 30% in-domain and 70% outof-domain sentence pairs, making for a challenging active learning problem.</text>
                  <doc_id>187</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>A pool training set of 10k source sentences is sampled from this collection, leaving us with 99.4k candidate sentences.</text>
                  <doc_id>188</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
              </paragraph>
            </paragraphs>
          </subsection>
          <subsection>
            <index>1</index>
            <title>5.2 Selection Strategies</title>
            <text>We implement the following strategies for sentence selection. In all cases, we use a fixed-size batch of 200 sentences per iteration.
&#8226; Random selection, in which source sentences are uniformly sampled from P E .
&#8226; Similarity selection, where we choose sentences that exhibit the highest content-word n- gram overlap with S.
&#8226; Dissimilarity selection, which selects sentences having the lowest degree of contentword n-gram overlap withS.
&#8226; Active learning with greedy incremental selection, using a learner to maximize coverage by combining various input features.
We simulate a total of 30 iterations, with the original 1,000 sample seed corpus growing to 7,000 sentence pairs.</text>
            <paragraphs>
              <paragraph>
                <sentence>
                  <text>We implement the following strategies for sentence selection.</text>
                  <doc_id>189</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>In all cases, we use a fixed-size batch of 200 sentences per iteration.</text>
                  <doc_id>190</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>&#8226; Random selection, in which source sentences are uniformly sampled from P E .</text>
                  <doc_id>191</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>&#8226; Similarity selection, where we choose sentences that exhibit the highest content-word n- gram overlap with S.</text>
                  <doc_id>192</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>&#8226; Dissimilarity selection, which selects sentences having the lowest degree of contentword n-gram overlap withS.</text>
                  <doc_id>193</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>&#8226; Active learning with greedy incremental selection, using a learner to maximize coverage by combining various input features.</text>
                  <doc_id>194</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>We simulate a total of 30 iterations, with the original 1,000 sample seed corpus growing to 7,000 sentence pairs.</text>
                  <doc_id>195</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
            </paragraphs>
          </subsection>
          <subsection>
            <index>2</index>
            <title>5.3 Simulation Results</title>
            <text>We track SMT performance at each iteration in two ways. The first and most effective method is to simply use an objective measure of translation quality, such as BLEU (Papineni et al., 2001). Figure 2(a) illustrates the variation in BLEU scores across iterations for each selection strategy. We note that the proposed active learning strategy performs significantly better at every iteration than random, similarity, and dissimilarity-based selection. At the end of 30 iterations, the BLEU score gained 2.46 points, a relative improvement of 45.9%. By contrast, the nearest competitor was the random selection baseline, whose performance gained only 1.33 points in BLEU, a 24.8% improvement. Note that we tune the phrase-based SMT feature weights using MERT (Och, 2003) once in the beginning, and use the same weights across all iterations. This allowed us to compare selection methods without variations introduced by fluctuation of the weights.
(a) Trajectory of BLEU
(b) Trajectory of untranslated word ratio
(c) Directionality match
(d) Diversity/Uniqueness
The second method measures test set coverage in terms of the proportion of untranslated words in the SMT hypotheses, which arise due to the absence of appropriate in-context phrase pairs in the training data. Figure 2(b) shows the variation in this measure for the four selection techniques. Again, the proposed active learning algorithm outperforms its competitors across nearly all iterations, with very large improvements in the initial stages. Overall, the proportion of untranslated words dropped from 8.74% to 2.28% after 30 iterations, while the closest competitor (dissimilarity selection) dropped to 2.59%.
It is also instructive to compare the distribution of the 6,000 sentences selected by each strategy at the end of the simulation to determine whether they came from the &#8220;in-domain&#8221; E2P set or the &#8220;out-of-domain&#8221; P2E collection. Figure 2(c) demonstrates that only 1.3% of sentences were selected from the reversed P2E set by the proposed active learning strategy. On the other hand, 70.9% of the sentences selected by the dissimilarity-based technique came from the P2E collection, explaining its low BLEU scores on the E2P test set. Surprisingly, similarity selection also chose a large fraction of sentences from the P2E collection; this was traced to a uniform distribution of very common sentences (e.g. &#8220;thank you&#8221;, &#8220;okay&#8221;, etc.) across the E2P and P2E sets.
Figure 2(d) compares the uniqueness and overalln-gram diversity of the 6,000 sentences chosen by each strategy. The similarity selector received the lowest score on this scale, explaining the lack of improvement in coverage as measured by the proportion of untranslated words in the SMT hypotheses. Again, the proposed approach exhibits the highest degree of uniqueness, underscoring its value in lowering batch redundancy.
It is interesting to note that dissimilarity selection is closest to the proposed active learning strategy in terms of coverage, and yet exhibits the worst BLEU scores. This confirms that, while there is overlap in their vocabularies, the E2P and P2E sets differ significantly in terms of longerspan constructs that influence SMT performance.
These results clearly demonstrate the power of the proposed strategy in choosing diverse, indomain sentences that not only provide superior performance in terms of BLEU, but also improve coverage, leading to fewer untranslated concepts in the SMT hypotheses.</text>
            <paragraphs>
              <paragraph>
                <sentence>
                  <text>We track SMT performance at each iteration in two ways.</text>
                  <doc_id>196</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>The first and most effective method is to simply use an objective measure of translation quality, such as BLEU (Papineni et al., 2001).</text>
                  <doc_id>197</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>Figure 2(a) illustrates the variation in BLEU scores across iterations for each selection strategy.</text>
                  <doc_id>198</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>We note that the proposed active learning strategy performs significantly better at every iteration than random, similarity, and dissimilarity-based selection.</text>
                  <doc_id>199</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
                <sentence>
                  <text>At the end of 30 iterations, the BLEU score gained 2.46 points, a relative improvement of 45.9%.</text>
                  <doc_id>200</doc_id>
                  <sec_id>4</sec_id>
                </sentence>
                <sentence>
                  <text>By contrast, the nearest competitor was the random selection baseline, whose performance gained only 1.33 points in BLEU, a 24.8% improvement.</text>
                  <doc_id>201</doc_id>
                  <sec_id>5</sec_id>
                </sentence>
                <sentence>
                  <text>Note that we tune the phrase-based SMT feature weights using MERT (Och, 2003) once in the beginning, and use the same weights across all iterations.</text>
                  <doc_id>202</doc_id>
                  <sec_id>6</sec_id>
                </sentence>
                <sentence>
                  <text>This allowed us to compare selection methods without variations introduced by fluctuation of the weights.</text>
                  <doc_id>203</doc_id>
                  <sec_id>7</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>(a) Trajectory of BLEU</text>
                  <doc_id>204</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>(b) Trajectory of untranslated word ratio</text>
                  <doc_id>205</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>(c) Directionality match</text>
                  <doc_id>206</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>(d) Diversity/Uniqueness</text>
                  <doc_id>207</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>The second method measures test set coverage in terms of the proportion of untranslated words in the SMT hypotheses, which arise due to the absence of appropriate in-context phrase pairs in the training data.</text>
                  <doc_id>208</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>Figure 2(b) shows the variation in this measure for the four selection techniques.</text>
                  <doc_id>209</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>Again, the proposed active learning algorithm outperforms its competitors across nearly all iterations, with very large improvements in the initial stages.</text>
                  <doc_id>210</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Overall, the proportion of untranslated words dropped from 8.74% to 2.28% after 30 iterations, while the closest competitor (dissimilarity selection) dropped to 2.59%.</text>
                  <doc_id>211</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>It is also instructive to compare the distribution of the 6,000 sentences selected by each strategy at the end of the simulation to determine whether they came from the &#8220;in-domain&#8221; E2P set or the &#8220;out-of-domain&#8221; P2E collection.</text>
                  <doc_id>212</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>Figure 2(c) demonstrates that only 1.3% of sentences were selected from the reversed P2E set by the proposed active learning strategy.</text>
                  <doc_id>213</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>On the other hand, 70.9% of the sentences selected by the dissimilarity-based technique came from the P2E collection, explaining its low BLEU scores on the E2P test set.</text>
                  <doc_id>214</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
                <sentence>
                  <text>Surprisingly, similarity selection also chose a large fraction of sentences from the P2E collection; this was traced to a uniform distribution of very common sentences (e.g. &#8220;thank you&#8221;, &#8220;okay&#8221;, etc.) across the E2P and P2E sets.</text>
                  <doc_id>215</doc_id>
                  <sec_id>3</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>Figure 2(d) compares the uniqueness and overalln-gram diversity of the 6,000 sentences chosen by each strategy.</text>
                  <doc_id>216</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>The similarity selector received the lowest score on this scale, explaining the lack of improvement in coverage as measured by the proportion of untranslated words in the SMT hypotheses.</text>
                  <doc_id>217</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
                <sentence>
                  <text>Again, the proposed approach exhibits the highest degree of uniqueness, underscoring its value in lowering batch redundancy.</text>
                  <doc_id>218</doc_id>
                  <sec_id>2</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>It is interesting to note that dissimilarity selection is closest to the proposed active learning strategy in terms of coverage, and yet exhibits the worst BLEU scores.</text>
                  <doc_id>219</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
                <sentence>
                  <text>This confirms that, while there is overlap in their vocabularies, the E2P and P2E sets differ significantly in terms of longerspan constructs that influence SMT performance.</text>
                  <doc_id>220</doc_id>
                  <sec_id>1</sec_id>
                </sentence>
              </paragraph>
              <paragraph>
                <sentence>
                  <text>These results clearly demonstrate the power of the proposed strategy in choosing diverse, indomain sentences that not only provide superior performance in terms of BLEU, but also improve coverage, leading to fewer untranslated concepts in the SMT hypotheses.</text>
                  <doc_id>221</doc_id>
                  <sec_id>0</sec_id>
                </sentence>
              </paragraph>
            </paragraphs>
          </subsection>
        </subsections>
      </section>
      <section>
        <index>6</index>
        <title>6 Conclusion and Future Directions</title>
        <text>Rapid development of SMT systems for resourcepoor language pairs requires judicious use of human translation capital. We described a novel active learning strategy that automatically learns to pick, from a large monolingual pool, sentences that maximize in-domain coverage. In conjunction with their translations, they are expected to improve SMT performance at a significantly faster rate than existing selection techniques. We introduced two key ideas that distinguish our approach from previous work. First, we utilize a sample of the candidate pool, rather than an additional in-domain development set, to learn the mapping between the features and the sentences that maximize coverage. This removes the restriction that the pool be derived from the target domain distribution; it can be an arbitrary collection of in- and out-of-domain sentences. Second, we construct batches using an incremental, greedy selection strategy with parallel ranking, instead of a traditional batch rank-andselect approach. This reduces redundancy, allowing more concepts to be covered in a given batch, and making better use of available resources. We showed through simulation experiments that the proposed strategy selects diverse batches of high-impact, in-domain sentences that result in a much more rapid improvement in translation performance than random and dissimilarity-based selection. This is reflected in objective indicators of translation quality (BLEU), and in terms of coverage as measured by the proportion of untranslated words in SMT hypotheses. We plan to evaluate the scalability of our approach by running simulations on a number of additional language pairs, domains, and corpus sizes. An issue with iterative active learning in general is the cost of re-training the SMT system for each batch. Small batches provide for smooth performance trajectories and better error recovery at an increased computational cost. We are currently investigating incremental approaches that allow SMT models to be updated online with minimal performance loss compared to full re-training. Finally, there is no inherent limitation in the proposed framework that ties it to a phrase-based SMT system. With suitable modifications to the input feature set, it can be adapted to work with various SMT architectures, including hierarchical and syntax-based systems.</text>
        <paragraphs>
          <paragraph>
            <sentence>
              <text>Rapid development of SMT systems for resourcepoor language pairs requires judicious use of human translation capital.</text>
              <doc_id>222</doc_id>
              <sec_id>0</sec_id>
            </sentence>
            <sentence>
              <text>We described a novel active learning strategy that automatically learns to pick, from a large monolingual pool, sentences that maximize in-domain coverage.</text>
              <doc_id>223</doc_id>
              <sec_id>1</sec_id>
            </sentence>
            <sentence>
              <text>In conjunction with their translations, they are expected to improve SMT performance at a significantly faster rate than existing selection techniques.</text>
              <doc_id>224</doc_id>
              <sec_id>2</sec_id>
            </sentence>
            <sentence>
              <text>We introduced two key ideas that distinguish our approach from previous work.</text>
              <doc_id>225</doc_id>
              <sec_id>3</sec_id>
            </sentence>
            <sentence>
              <text>First, we utilize a sample of the candidate pool, rather than an additional in-domain development set, to learn the mapping between the features and the sentences that maximize coverage.</text>
              <doc_id>226</doc_id>
              <sec_id>4</sec_id>
            </sentence>
            <sentence>
              <text>This removes the restriction that the pool be derived from the target domain distribution; it can be an arbitrary collection of in- and out-of-domain sentences.</text>
              <doc_id>227</doc_id>
              <sec_id>5</sec_id>
            </sentence>
            <sentence>
              <text>Second, we construct batches using an incremental, greedy selection strategy with parallel ranking, instead of a traditional batch rank-andselect approach.</text>
              <doc_id>228</doc_id>
              <sec_id>6</sec_id>
            </sentence>
            <sentence>
              <text>This reduces redundancy, allowing more concepts to be covered in a given batch, and making better use of available resources.</text>
              <doc_id>229</doc_id>
              <sec_id>7</sec_id>
            </sentence>
            <sentence>
              <text>We showed through simulation experiments that the proposed strategy selects diverse batches of high-impact, in-domain sentences that result in a much more rapid improvement in translation performance than random and dissimilarity-based selection.</text>
              <doc_id>230</doc_id>
              <sec_id>8</sec_id>
            </sentence>
            <sentence>
              <text>This is reflected in objective indicators of translation quality (BLEU), and in terms of coverage as measured by the proportion of untranslated words in SMT hypotheses.</text>
              <doc_id>231</doc_id>
              <sec_id>9</sec_id>
            </sentence>
            <sentence>
              <text>We plan to evaluate the scalability of our approach by running simulations on a number of additional language pairs, domains, and corpus sizes.</text>
              <doc_id>232</doc_id>
              <sec_id>10</sec_id>
            </sentence>
            <sentence>
              <text>An issue with iterative active learning in general is the cost of re-training the SMT system for each batch.</text>
              <doc_id>233</doc_id>
              <sec_id>11</sec_id>
            </sentence>
            <sentence>
              <text>Small batches provide for smooth performance trajectories and better error recovery at an increased computational cost.</text>
              <doc_id>234</doc_id>
              <sec_id>12</sec_id>
            </sentence>
            <sentence>
              <text>We are currently investigating incremental approaches that allow SMT models to be updated online with minimal performance loss compared to full re-training.</text>
              <doc_id>235</doc_id>
              <sec_id>13</sec_id>
            </sentence>
            <sentence>
              <text>Finally, there is no inherent limitation in the proposed framework that ties it to a phrase-based SMT system.</text>
              <doc_id>236</doc_id>
              <sec_id>14</sec_id>
            </sentence>
            <sentence>
              <text>With suitable modifications to the input feature set, it can be adapted to work with various SMT architectures, including hierarchical and syntax-based systems.</text>
              <doc_id>237</doc_id>
              <sec_id>15</sec_id>
            </sentence>
          </paragraph>
        </paragraphs>
        <subsections/>
      </section>
    </sections>
    <tables/>
    <references>
      <reference>
        <id>0</id>
        <authors>
          <author>John Blatz</author>
          <author>Erin Fitzgerald</author>
          <author>George Foster</author>
          <author>Simona Gandrabur</author>
          <author>Cyril Goutte</author>
          <author>Alex Kulesza</author>
          <author>Alberto Sanchis</author>
          <author>Nicola Ueffing</author>
        </authors>
        <title>Confidence estimation for machine translation.</title>
        <publication>In COLING &#8217;04: Proceedings of the 20th international conference on Computational Linguistics,</publication>
        <pages>315</pages>
        <date>2004</date>
      </reference>
      <reference>
        <id>1</id>
        <authors>
          <author>Koby Crammer</author>
          <author>Yoram Singer</author>
        </authors>
        <title>Pranking with ranking.</title>
        <publication>In Advances in Neural Information Processing Systems 14,</publication>
        <pages>641--647</pages>
        <date>2001</date>
      </reference>
      <reference>
        <id>2</id>
        <authors>
          <author>Matthias Eck</author>
          <author>Stephan Vogel</author>
          <author>Alex Waibel</author>
        </authors>
        <title>Low cost portability for statistical machine translation based in N-gram frequency and TF-IDF.</title>
        <publication>In Proceedings of IWSLT,</publication>
        <pages>None</pages>
        <date>2005</date>
      </reference>
      <reference>
        <id>3</id>
        <authors>
          <author>Yoav Freund</author>
          <author>H Sebastian Seung</author>
          <author>Eli Shamir</author>
          <author>Naftali Tishby</author>
        </authors>
        <title>Selective sampling using the query by committee algorithm.</title>
        <publication>Machine Learning,</publication>
        <pages>28--2</pages>
        <date>1997</date>
      </reference>
      <reference>
        <id>4</id>
        <authors>
          <author>Gholamreza Haffari</author>
          <author>Maxim Roy</author>
          <author>Anoop Sarkar</author>
        </authors>
        <title>Active learning for statistical phrase-based machine translation.</title>
        <publication>In NAACL &#8217;09: Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics,</publication>
        <pages>415--423</pages>
        <date>2009</date>
      </reference>
      <reference>
        <id>5</id>
        <authors>
          <author>Philipp Koehn</author>
          <author>Franz Josef Och</author>
          <author>Daniel Marcu</author>
        </authors>
        <title>Statistical phrase-based translation.</title>
        <publication>In NAACL &#8217;03: Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology,</publication>
        <pages>48--54</pages>
        <date>2003</date>
      </reference>
      <reference>
        <id>6</id>
        <authors>
          <author>Franz Josef Och</author>
        </authors>
        <title>Minimum error rate training in statistical machine translation.</title>
        <publication>In ACL &#8217;03: Proceedings of the 41st Annual Meeting on Association for Computational Linguistics,</publication>
        <pages>160--167</pages>
        <date>2003</date>
      </reference>
      <reference>
        <id>7</id>
        <authors>
          <author>Kishore Papineni</author>
          <author>Salim Roukos</author>
          <author>Todd Ward</author>
          <author>WeiJing Zhu</author>
        </authors>
        <title>BLEU: A method for automatic evaluation of machine translation.</title>
        <publication>In ACL &#8217;02: Proceedings of the 40th Annual Meeting on Association for Computational Linguistics,</publication>
        <pages>311--318</pages>
        <date>2001</date>
      </reference>
    </references>
    <citations>
      <citation>
        <id>0</id>
        <reference_id>0</reference_id>
        <string>Blatz et al. (2004)</string>
        <sentence_id>44066</sentence_id>
        <char_offset>132</char_offset>
      </citation>
      <citation>
        <id>1</id>
        <reference_id>1</reference_id>
        <string>Crammer and Singer, 2001</string>
        <sentence_id>44099</sentence_id>
        <char_offset>46</char_offset>
      </citation>
      <citation>
        <id>2</id>
        <reference_id>2</reference_id>
        <string>Eck et al. (2005)</string>
        <sentence_id>43978</sentence_id>
        <char_offset>0</char_offset>
      </citation>
      <citation>
        <id>3</id>
        <reference_id>3</reference_id>
        <string>Freund et al., 1997</string>
        <sentence_id>43998</sentence_id>
        <char_offset>216</char_offset>
      </citation>
      <citation>
        <id>4</id>
        <reference_id>4</reference_id>
        <string>Haffari et al. (2009)</string>
        <sentence_id>43983</sentence_id>
        <char_offset>0</char_offset>
      </citation>
      <citation>
        <id>5</id>
        <reference_id>4</reference_id>
        <string>Haffari et al. (2009)</string>
        <sentence_id>43988</sentence_id>
        <char_offset>55</char_offset>
      </citation>
      <citation>
        <id>6</id>
        <reference_id>5</reference_id>
        <string>Koehn et al., 2003</string>
        <sentence_id>44118</sentence_id>
        <char_offset>50</char_offset>
      </citation>
      <citation>
        <id>7</id>
        <reference_id>6</reference_id>
        <string>Och, 2003</string>
        <sentence_id>44158</sentence_id>
        <char_offset>67</char_offset>
      </citation>
      <citation>
        <id>8</id>
        <reference_id>7</reference_id>
        <string>Papineni et al., 2001</string>
        <sentence_id>44153</sentence_id>
        <char_offset>112</char_offset>
      </citation>
    </citations>
  </content>
</document>
