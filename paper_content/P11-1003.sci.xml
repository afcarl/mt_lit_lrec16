<PAPER>
  <FILENO/>
  <TITLE>Effective Use of Function Words for Rule Generalization in Forest-Based Translation</TITLE>
  <AUTHORS/>
  <ABSTRACT>
    <A-S ID="S-31752">In the present paper, we propose the effective usage of function words to generate generalized translation rules for forest-based translation.</A-S>
    <A-S ID="S-31753">Given aligned forest-string pairs, we extract composed tree-to-string translation rules that account for multiple interpretations of both aligned and unaligned target function words.</A-S>
    <A-S ID="S-31754">In order to constrain the exhaustive attachments of function words, we limit to bind them to the nearby syntactic chunks yielded by a target dependency parser.</A-S>
    <A-S ID="S-31755">Therefore, the proposed approach can not only capture source-tree-to-target-chunk correspondences but can also use forest structures that compactly encode an exponential number of parse trees to properly generate target function words during decoding.</A-S>
    <A-S ID="S-31756">Extensive experiments involving large-scale English-to- Japanese translation revealed a significant improvement of 1.8 points in BLEU score, as compared with a strong forest-to-string baseline system.</A-S>
  </ABSTRACT>
  <BODY>
    <DIV DEPTH="0">
      <HEADER>1 Introduction</HEADER>
      <P>
        <S ID="S-31757">Rule generalization remains a key challenge for current syntax-based statistical machine translation (SMT) systems.</S>
        <S ID="S-31758">On the one hand, there is a tendency to integrate richer syntactic information into a translation rule in order to better express the translation phenomena.</S>
        <S ID="S-31759">Thus, flat phrases (<REF ID="R-06" RPTR="20">Koehn et al., 2003</REF>), hierarchical phrases (<REF ID="R-00" RPTR="0">Chiang, 2005</REF>), and syntactic tree fragments (<REF ID="R-04" RPTR="10">Galley et al., 2006</REF>; <REF ID="R-14" RPTR="32">Mi and Huang, 2008</REF>; <REF ID="R-24" RPTR="56">Wu et al., 2010</REF>) are gradually used in SMT.</S>
        <S ID="S-31760">On the other hand, the use of syntactic phrases continues due to the requirement for phrase coverage in most syntax-based systems.</S>
        <S ID="S-31761">For example, 22</S>
      </P>
      <P>
        <S ID="S-31762"><REF ID="R-16" RPTR="41">Mi et al. (2008)</REF> achieved a 3.1-point improvement in BLEU score (<REF ID="R-19" RPTR="49">Papineni et al., 2002</REF>) by including bilingual syntactic phrases in their forest-based system.</S>
        <S ID="S-31763">Compared with flat phrases, syntactic rules are good at capturing global reordering, which has been reported to be essential for translating between languages with substantial structural differences, such as English and Japanese, which is a subject-objectverb language (<REF ID="R-25" RPTR="59">Xu et al., 2009</REF>).</S>
      </P>
      <P>
        <S ID="S-31764">Forest-based translation frameworks, which make use of packed parse forests on the source and/or target language side(s), are an increasingly promising approach to syntax-based SMT, being both algorithmically appealing (<REF ID="R-16" RPTR="42">Mi et al., 2008</REF>) and empirically successful (<REF ID="R-14" RPTR="33">Mi and Huang, 2008</REF>; <REF ID="R-11" RPTR="26">Liu et al., 2009</REF>).</S>
        <S ID="S-31765">However, forest-based translation systems, and, in general, most linguistically syntax-based SMT systems (<REF ID="R-03" RPTR="6">Galley et al., 2004</REF>; <REF ID="R-04" RPTR="11">Galley et al., 2006</REF>; <REF ID="R-10" RPTR="25">Liu et al., 2006</REF>; Zhang et al., 2007; <REF ID="R-16" RPTR="43">Mi et al., 2008</REF>; <REF ID="R-11" RPTR="27">Liu et al., 2009</REF>; <REF ID="R-01" RPTR="3">Chiang, 2010</REF>), are built upon word aligned parallel sentences and thus share a critical dependence on word alignments.</S>
        <S ID="S-31766">For example, even a single spurious word alignment can invalidate a large number of otherwise extractable rules, and unaligned words can result in an exponentially large set of extractable rules for the interpretation of these unaligned words (<REF ID="R-04" RPTR="12">Galley et al., 2006</REF>).</S>
        <S ID="S-31767">What makes word alignment so fragile?</S>
        <S ID="S-31768">In order to investigate this problem, we manually analyzed the alignments of the first 100 parallel sentences in our English-Japanese training data (to be shown in Table 2).</S>
        <S ID="S-31769">The alignments were generated by running GIZA++ (<REF ID="R-18" RPTR="47">Och and Ney, 2003</REF>) and the grow-diag-final-and symmetrizing strategy (<REF ID="R-07" RPTR="21">Koehn et al., 2007</REF>) on the training set.</S>
        <S ID="S-31770">Of the 1,324 word alignment pairs, there were 309 error pairs, among</S>
      </P>
      <P>
        <S ID="S-31771">which there were 237 target function words, which account for 76.7% of the error pairs 1 .</S>
        <S ID="S-31772">This indicates that the alignments of the function words are more easily to be mistaken than content words.</S>
        <S ID="S-31773">Moreover, we found that most Japanese function words tend to align to a few English words such as &#8216;of&#8217; and &#8216;the&#8217;, which may appear anywhere in an English sentence.</S>
        <S ID="S-31774">Following these problematic alignments, we are forced to make use of relatively large English tree fragments to construct translation rules that tend to be ill-formed and less generalized.</S>
      </P>
      <P>
        <S ID="S-31775">This is the motivation of the present approach of re-aligning the target function words to source tree fragments, so that the influence of incorrect alignments is reduced and the function words can be generated by tree fragments on the fly.</S>
        <S ID="S-31776">However, the current dominant research only uses 1-best trees for syntactic realignment (<REF ID="R-04" RPTR="13">Galley et al., 2006</REF>; <REF ID="R-13" RPTR="30">May and Knight, 2007</REF>; <REF ID="R-23" RPTR="54">Wang et al., 2010</REF>), which adversely affects the rule set quality due to parsing errors.</S>
        <S ID="S-31777">Therefore, we realign target function words to a packed forest that compactly encodes exponentially many parses.</S>
        <S ID="S-31778">Given aligned forest-string pairs, we extract composed tree-to-string translation rules that account for multiple interpretations of both aligned and unaligned target function words.</S>
        <S ID="S-31779">In order to constrain the exhaustive attachments of function words, we further limit the function words to bind to their surrounding chunks yielded by a dependency parser.</S>
        <S ID="S-31780">Using the composed rules of the present study in a baseline forest-to-string translation system results in a 1.8-point improvement in the BLEU score for large-scale English-to-Japanese translation.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>2 Backgrounds</HEADER>
      <P>
        <S ID="S-31826"></S>
      </P>
      <DIV DEPTH="1">
        <HEADER>2.1 Japanese function words</HEADER>
        <P>
          <S ID="S-31781">In the present paper, we limit our discussion on Japanese particles and auxiliary verbs (<REF ID="R-12" RPTR="29">Martin, 1975</REF>).</S>
          <S ID="S-31782">Particles are suffixes or tokens in Japanese grammar that immediately follow modified content words or sentences.</S>
          <S ID="S-31783">There are eight types of Japanese function words, which are classified depending on what function they serve: case markers, parallel markers, sentence ending particles, interjec-</S>
        </P>
        <P>
          <S ID="S-31784">1 These numbers are language/corpus-dependent and are not</S>
        </P>
        <P>
          <S ID="S-31785">necessarily to be taken as a general reflection of the overall quality of the word alignments for arbitrary language pairs.</S>
        </P>
        <P>
          <S ID="S-31786">tory particles, adverbial particles, binding particles, conjunctive particles, and phrasal particles.</S>
          <S ID="S-31787">Japanese grammar also uses auxiliary verbs to give further semantic or syntactic information about the preceding main or full verb.</S>
          <S ID="S-31788">Alike English, the extra meaning provided by a Japanese auxiliary verb alters the basic meaning of the main verb so that the main verb has one or more of the following functions: passive voice, progressive aspect, perfect aspect, modality, dummy, or emphasis.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>2.2 HPSG forests</HEADER>
        <P>
          <S ID="S-31789">Following our precious work (<REF ID="R-24" RPTR="57">Wu et al., 2010</REF>), we use head-drive phrase structure grammar (HPSG) forests generated by Enju 2 (<REF ID="R-17" RPTR="46">Miyao and Tsujii, 2008</REF>), which is a state-of-the-art HPSG parser for English.</S>
          <S ID="S-31790">HPSG (Pollard and Sag, 1994; <REF ID="R-20" RPTR="51">Sag et al., 2003</REF>) is a lexicalist grammar framework.</S>
          <S ID="S-31791">In HPSG, linguistic entities such as words and phrases are represented by a data structure called a sign.</S>
          <S ID="S-31792">A sign gives a factored representation of the syntactic features of a word/phrase, as well as a representation of their semantic content.</S>
          <S ID="S-31793">Phrases and words represented by signs are collected into larger phrases by the applications of schemata.</S>
          <S ID="S-31794">The semantic representation of the new phrase is calculated at the same time.</S>
          <S ID="S-31795">As such, an HPSG parse forest can be considered to be a forest of signs.</S>
          <S ID="S-31796">Making use of these signs instead of part-of-speech (POS)/phrasal tags in PCFG results in a fine-grained rule set integrated with deep syntactic information.</S>
        </P>
        <P>
          <S ID="S-31797">For example, an aligned HPSG forest 3 -string pair is shown in Figure 1.</S>
          <S ID="S-31798">For simplicity, we only draw the identifiers for the signs of the nodes in the HPSG forest.</S>
          <S ID="S-31799">Note that the identifiers that start with &#8216;c&#8217; denote non-terminal nodes (e.g., c0, c1), and the identifiers that start with &#8216;t&#8217; denote terminal nodes (e.g., t3, t1).</S>
          <S ID="S-31800">In a complete HPSG forest given in (<REF ID="R-24" RPTR="58">Wu et al., 2010</REF>), the terminal signs include features such as the POS tag, the tense, the auxiliary, the voice of a verb, etc..</S>
          <S ID="S-31801">The non-terminal signs include features such as the phrasal category, the name of the schema</S>
        </P>
        <P>
          <S ID="S-31802">2 http://www-tsujii.is.s.u-tokyo.ac.jp/enju/index.html 3 The forest includes three parse trees rooted at c0, c1, and</S>
        </P>
        <P>
          <S ID="S-31803">c2.</S>
          <S ID="S-31804">In the 1-best tree, &#8216;by&#8217; modifies the passive verb &#8216;verified&#8217;.</S>
          <S ID="S-31805">Yet in the 2- and 3-best tree, &#8216;by&#8217; modifies &#8216;this result was verified&#8217;.</S>
          <S ID="S-31806">Furthermore, &#8216;verified&#8217; is an adjective in the 2-best tree and a passive verb in the 3-best tree.</S>
        </P>
        <P>
          <S ID="S-31807">c7 c23 c13</S>
        </P>
        <P>
          <S ID="S-31808">c9 c10 c16 c22 c4 c21 c12 c18 c19 c14 c15</S>
        </P>
        <P>
          <S ID="S-31809">t3 t1 t4 t8 t10 t7 t0 t6 t5 t2 t9</S>
        </P>
        <P>
          <S ID="S-31810">this result was verified by the experiments</S>
        </P>
        <P>
          <S ID="S-31811">&#23455; &#39443; 0 &#12395;&#12424;&#12387;&#12390; 1 &#12371;&#12398; 2 &#32080; &#26524; 3 &#12364; 4 &#26908; &#35388; 5 &#12373; 6 &#12428; 7 &#12383; 8 experiments by this result verified</S>
        </P>
        <P>
          <S ID="S-31812">jikken niyotte kono kekka ga kensyou sa re ta</S>
        </P>
        <P>
          <S ID="S-31813">Realign target function words</S>
        </P>
        <P>
          <S ID="S-31814">c0 c1 c2</S>
        </P>
        <P>
          <S ID="S-31815">c6 c20 c11</S>
        </P>
        <P>
          <S ID="S-31816">c9 c16 c22</S>
        </P>
        <P>
          <S ID="S-31817">c10 3 | 3-4</S>
        </P>
        <P>
          <S ID="S-31818">c21 5-7 | 5-8</S>
        </P>
        <P>
          <S ID="S-31819">c13</S>
        </P>
        <P>
          <S ID="S-31820">c4 5-7 | 5-8 c12 5-7 | 5-8 c18 c19 c14 c15</S>
        </P>
        <P>
          <S ID="S-31821">t3 t1 t4 t8 t10 t7 t0 t6 t5 t2 t9</S>
        </P>
        <P>
          <S ID="S-31822">this result was verified by the experiments</S>
        </P>
        <P>
          <S ID="S-31823">&#23455; &#39443; 0 &#12395;&#12424;&#12387;&#12390; 1 &#12371;&#12398; 2 &#32080; &#26524; 3 &#12364; 4 &#26908; &#35388; 5 &#12373; 6 &#12428; 7 &#12383; 8</S>
        </P>
        <P>
          <S ID="S-31824">C1 C2 C3 C4</S>
        </P>
        <P>
          <S ID="S-31825">applied in the node, etc..</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>3 Composed Rule Extraction</HEADER>
      <P>
        <S ID="S-31887">In this section, we first describe an algorithm that attaches function words to a packed forest guided by target chunk information.</S>
        <S ID="S-31888">That is, given a triple &#10216;F S , T, A&#10217;, namely an aligned (A) source forest (F S ) to target sentence (T ) pair, we 1) tailor the alignment A by removing the alignments for target function words, 2) seek attachable nodes in the source forest F S for each function word, and 3) construct a derivation forest by topologically travers- 24</S>
      </P>
      <P>
        <S ID="S-31889">ing F S .</S>
        <S ID="S-31890">Then, we identify minimal and composed rules from the derivation forest and estimate the probabilities of rules and scores of derivations using the expectation-maximization (EM) (<REF ID="R-02" RPTR="5">Dempster et al., 1977</REF>) algorithm.</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>3.1 Definitions</HEADER>
        <P>
          <S ID="S-31827">In the proposed algorithm, we make use of the following definitions, which are similar to those described in (<REF ID="R-03" RPTR="7">Galley et al., 2004</REF>; <REF ID="R-14" RPTR="34">Mi and Huang, 2008</REF>):</S>
        </P>
        <P>
          <S ID="S-31828">&#8226; s(&#183;): the span of a (source) node v or a (target) chunk C, which is an index set of the words that v or C covers; &#8226; t(v): the corresponding span of v, which is an index set of aligned words on another side; &#8226; c(v): the complement span of v, which is the union of corresponding spans of nodes v &#8242; that share an identical parse tree with v but are neither antecedents nor descendants of v; &#8226; P A : the frontier set of F S , which contains nodes that are consistent with an alignment A (gray nodes in Figure 1), i.e., t(v) &#8800; &#8709; and</S>
        </P>
        <P>
          <S ID="S-31829">The function closure covers the gap(s) that may appear in the interval parameter.</S>
          <S ID="S-31830">For example,</S>
        </P>
        <P>
          <S ID="S-31831">Examples of the applications of these functions can be found in Table 1.</S>
          <S ID="S-31832">Following (<REF ID="R-04" RPTR="14">Galley et al., 2006</REF>), we distinguish between minimal and composed rules.</S>
          <S ID="S-31833">The composed rules are generated by combining a sequence of minimal rules.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.2 Free attachment of target function words 3.2.1 Motivation</HEADER>
        <P>
          <S ID="S-31834">We explain the motivation for the present research using an example that was extracted from our training data, as shown in Figure 1.</S>
          <S ID="S-31835">In the alignment of this example, three lines (in dot lines) are used to align was and the with ga (subject particle), and was with ta (past tense auxiliary verb).</S>
          <S ID="S-31836">Under this alignment, we are forced to extract rules with relatively large tree fragments.</S>
          <S ID="S-31837">For example, by applying the GHKM algorithm (<REF ID="R-03" RPTR="8">Galley et al., 2004</REF>), a rule rooted at c0 will take c7, t4, c4, c19, t2, and c15 as the leaves.</S>
          <S ID="S-31838">The final tree fragment, with a height of 7, contains 13 nodes.</S>
          <S ID="S-31839">In order to ensure that this rule is used during decoding, we must generate subtrees with a height of 7 for c0.</S>
          <S ID="S-31840">Suppose that the input forest is binarized and that |E |is the average number of hyperedges of each node, then we must generate O(|E |26 &#8722;1 ) subtrees 4 for c0 in the worst case.</S>
          <S ID="S-31841">Thus, 4 For one (binarized) hyperedge e of a node, suppose there are x subtrees in the left tail node and y subtrees in the right tail node.</S>
          <S ID="S-31842">Then the number of subtrees guided by e is (x + 1) &#215; (y + 1).</S>
          <S ID="S-31843">Thus, the recursive formula is N h = |E|(N h&#8722;1 + 1) 2 , where h is the height of the hypergraph and N h is the number of subtrees.</S>
          <S ID="S-31844">When h = 1, we let N h = 0.</S>
        </P>
        <P>
          <S ID="S-31845">the existence of these rules prevents the generalization ability of the final rule set that is extracted.</S>
          <S ID="S-31846">In order to address this problem, we tailor the alignment by ignoring these three alignment pairs in dot lines.</S>
          <S ID="S-31847">For example, by ignoring the ambiguous alignments on the Japanese function words, we enlarge the frontier set to include from 12 to 19 of the 24 non-terminal nodes.</S>
          <S ID="S-31848">Consequently, the number of extractable minimal rules increases from 12 (with three reordering rules rooted at c0, c1, and c2) to 19 (with five reordering rules rooted at c0, c1, c2, c5, and c17).</S>
          <S ID="S-31849">With more nodes included in the frontier set, we can extract more minimal and composed monotonic/reordering rules and avoid extracting the less generalized rules with extremely large tree fragments.</S>
        </P>
        <P>
          <S ID="S-31850">In the proposed algorithm, we use a target chunk set to constrain the attachment explosion problem because we use a packed parse forest instead of a 1- best tree, as in the case of (<REF ID="R-04" RPTR="15">Galley et al., 2006</REF>).</S>
          <S ID="S-31851">Multiple interpretations of unaligned function words for an aligned tree-string pair result in a derivation forest.</S>
          <S ID="S-31852">Now, we have a packed parse forest in which each tree corresponds to a derivation forest.</S>
          <S ID="S-31853">Thus, pruning free attachments of function words is practically important in order to extract composed rules from this &#8220;(derivation) forest of (parse) forest&#8221;.</S>
          <S ID="S-31854">In the English-to-Japanese translation test case of the present study, the target chunk set is yielded by a state-of-the-art Japanese dependency parser, Cabocha v0.53 5 (<REF ID="R-08" RPTR="23">Kudo and Matsumoto, 2002</REF>).</S>
          <S ID="S-31855">The output of Cabocha is a list of chunks.</S>
          <S ID="S-31856">A chunk contains roughly one content word (usually the head) and affixed function words, such as case markers (e.g., ga) and verbal morphemes (e.g., sa re ta, which indicate past tense and passive voice).</S>
          <S ID="S-31857">For example, the Japanese sentence in Figure 1 is separated into four chunks, and the dependencies among these chunks are identified by arrows.</S>
          <S ID="S-31858">These arrows point out the head chunk that the current chunk modifies.</S>
          <S ID="S-31859">Moreover, we also hope to gain a fine-grained alignment among these syntactic chunks and source tree fragments.</S>
          <S ID="S-31860">Thereby, during decoding, we are binding the generation of function words with the generation of target chunks.</S>
          <S ID="S-31861">5 http://chasen.org/&#8764;taku/software/cabocha/ Algorithm 1 Aligning function words to the forest Input: HPSG forest F S, target sentence T , word alignment A = {(i, j)}, target function word set {f w} appeared in T , and target chunk set {C} Output: a derivation forest DF</S>
        </P>
        <P>
          <S ID="S-31862">1: A &#8242; &#8592; A \ {(i, s(f w ))} &#9667; f w &#8712; {f w } 2: for each node v &#8712; P A &#8242; in topological order do 3: T v &#8592; &#8709; &#9667; store the corresponding spans of v 4: for each function word f w &#8712; {f w} do 5: if f w &#8712; C and t(v)&#8745;(C) &#8800; &#8709; and f w are not attached to descendants of v then 6: append t(v) &#8746; {s(f w )} to T v 7: end if 8: end for 9: for each corresponding span t(v) &#8712; T v do 10: R &#8592; IDENTIFYMINRULES(v, t(v), T ) &#9667; range over the hyperedges of v, and discount the factional count of each rule r &#8712; R by 1/|T v| 11: create a node n in DF for each rule r &#8712; R 12: create a shared parent node &#8853; when |R |&gt; 1 13: end for 14: end for</S>
        </P>
        <P>
          <S ID="S-31863">3.2.3 The algorithm</S>
        </P>
        <P>
          <S ID="S-31864">Algorithm 1 outlines the proposed approach to constructing a derivation forest to include multiple interpretations of target function words.</S>
          <S ID="S-31865">The derivation forest is a hypergraph as previously used in (<REF ID="R-04" RPTR="16">Galley et al., 2006</REF>), to maintain the constraint that one unaligned target word be attached to some node v exactly once in one derivation tree.</S>
          <S ID="S-31866">Starting from a triple &#10216;F S , T, A&#10217;, we first tailor the alignment A to A &#8242; by removing the alignments for target function words.</S>
          <S ID="S-31867">Then, we traverse the nodes v &#8712; P A &#8242; in topological order.</S>
          <S ID="S-31868">During the traversal, a function word f w will be attached to v if 1) t(v) overlaps with the span of the chunk to which f w belongs, and 2) f w has not been attached to the descendants of v.</S>
          <S ID="S-31869">We identify translation rules that take v as the root of their tree fragments.</S>
          <S ID="S-31870">Each tree fragment is a frontier tree that takes a node in the frontier set P A &#8242; of F S as the root node and non-lexicalized frontier nodes or lexicalized non-frontier nodes as the leaves.</S>
          <S ID="S-31871">Also, a minimal frontier tree used in a minimal rule is limited to be a frontier tree such that all nodes other than the root and leaves are non-frontier nodes.</S>
          <S ID="S-31872">We use Algorithm 1 described in (<REF ID="R-14" RPTR="35">Mi and Huang, 2008</REF>) to collect minimal frontier trees rooted at v in</S>
        </P>
        <P>
          <S ID="S-31873">from A to A &#8242; of the example in Figure 1.</S>
          <S ID="S-31874">Nodes with * superscripts are consistent with A &#8242; but not consistent with A. rent set of hyperedges forms a minimal frontier tree.</S>
          <S ID="S-31875">In the derivation forest, we use &#8853; nodes to manage minimal/composed rules that share the same node and the same corresponding span.</S>
          <S ID="S-31876">Figure 2 shows some minimal rule and &#8853; nodes derived from the example in Figure 1.</S>
          <S ID="S-31877">Even though we bind function words to their nearby chunks, these function words may still be attached to relative large tree fragments, so that richer syntactic information can be used to predict the function words.</S>
          <S ID="S-31878">For example, in Figure 2, the tree fragments rooted at node c 0&#8722;8 0 can predict ga and/or ta.</S>
          <S ID="S-31879">The syntactic foundation behind is that, whether to use ga as a subject particle or to use wo as an object particle depends on both the left-hand-side noun phrase (kekka) and the right-hand-side verb (kensyou sa re ta).</S>
          <S ID="S-31880">This type of node v &#8242; (such as c 0&#8722;8 0 ) should satisfy the following two heuristic conditions:</S>
        </P>
        <P>
          <S ID="S-31881">&#8226; v &#8242; is included in the frontier set P A &#8242; of F S , and &#8226; t(v &#8242; ) covers the function word, or v &#8242; is the root node of F S if the function word is the beginning</S>
        </P>
        <P>
          <S ID="S-31882">Nodes annotated by &#8220;*&#8221; include ga, and nodes annotated by &#8220;+&#8221; include ta.</S>
          <S ID="S-31883">rules as nodes, we can further combine two or more minimal rules to form composed rules nodes and can append these nodes to the derivation forest.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.3 Estimating rule probabilities</HEADER>
        <P>
          <S ID="S-31884">We use the EM algorithm to jointly estimate 1) the translation probabilities and fractional counts of rules and 2) the scores of derivations in the derivation forests.</S>
          <S ID="S-31885">As reported in (<REF ID="R-13" RPTR="31">May and Knight, 2007</REF>), EM, as has been used in (<REF ID="R-04" RPTR="17">Galley et al., 2006</REF>) to estimate rule probabilities in derivation forests, is an iterative procedure and prefers shorter derivations containing large rules over longer derivations containing small rules.</S>
          <S ID="S-31886">In order to overcome this bias problem, we discount the fractional count of a rule by the product of the probabilities of parse hyperedges that are included in the tree fragment of the rule.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>4 Experiments</HEADER>
      <P>
        <S ID="S-31944"></S>
      </P>
      <DIV DEPTH="1">
        <HEADER>4.1 Setup</HEADER>
        <P>
          <S ID="S-31891">We implemented the forest-to-string decoder described in (<REF ID="R-16" RPTR="44">Mi et al., 2008</REF>) that makes use of forestbased translation rules (<REF ID="R-14" RPTR="36">Mi and Huang, 2008</REF>) as the baseline system for translating English HPSG forests into Japanese sentences.</S>
          <S ID="S-31892">We analyzed the performance of the proposed translation rule sets by 27</S>
        </P>
        <P>
          <S ID="S-31893">using the same decoder.</S>
        </P>
        <P>
          <S ID="S-31894">The JST Japanese-English paper abstract corpus 6 (<REF ID="R-22" RPTR="53">Utiyama and Isahara, 2007</REF>), which consists of one million parallel sentences, was used for training, tuning, and testing.</S>
          <S ID="S-31895">Table 2 shows the statistics of this corpus.</S>
          <S ID="S-31896">Note that Japanese function words occupy more than a quarter of the Japanese words.</S>
          <S ID="S-31897">Making use of Enju 2.3.1, we generated 987,401 1-best trees and 984,731 parse forests for the English sentences in the training set, with successful parse rates of 99.3% and 99.1%, respectively.</S>
          <S ID="S-31898">Using the pruning criteria expressed in (<REF ID="R-14" RPTR="37">Mi and Huang, 2008</REF>), we continue to prune a parse forest by setting p e to be 8, 5, and 2, until there are no more than e 10 = 22, 026 trees in a forest.</S>
          <S ID="S-31899">After pruning, there are an average of 82.3 trees in a parse forest.</S>
        </P>
        <P>
          <S ID="S-31900">6 http://www.jst.go.jp</S>
        </P>
        <P>
          <S ID="S-31901">We performed GIZA++ (<REF ID="R-18" RPTR="48">Och and Ney, 2003</REF>) and the grow-diag-final-and symmetrizing strategy (<REF ID="R-07" RPTR="22">Koehn et al., 2007</REF>) on the training set to obtain alignments.</S>
          <S ID="S-31902">The SRI Language Modeling Toolkit (<REF ID="R-21" RPTR="52">Stolcke, 2002</REF>) was employed to train a five-gram Japanese LM on the training set.</S>
          <S ID="S-31903">We evaluated the translation quality using the BLEU-4 metric (<REF ID="R-19" RPTR="50">Papineni et al., 2002</REF>).</S>
        </P>
        <P>
          <S ID="S-31904">Joshua v1.3 (<REF ID="R-09" RPTR="24">Li et al., 2009</REF>), which is a freely available decoder for hierarchical phrasebased SMT (<REF ID="R-00" RPTR="1">Chiang, 2005</REF>), is used as an external baseline system for comparison.</S>
          <S ID="S-31905">We extracted 4.5M translation rules from the training set for the 4K English sentences in the development and test sets.</S>
          <S ID="S-31906">We used the default configuration of Joshua, with the exception of the maximum number of items/rules, and the value of k (of the k-best outputs) is set to be 200.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>4.2 Results</HEADER>
        <P>
          <S ID="S-31907">Table 3 lists the statistics of the following translation rule sets:</S>
        </P>
        <P>
          <S ID="S-31908">&#8226; C3-T: a composed rule set extracted from the derivation forests of 1-best HPSG trees that were constructed using the approach described in (<REF ID="R-04" RPTR="18">Galley et al., 2006</REF>).</S>
          <S ID="S-31909">The maximum number of internal nodes is set to be three when generating a composed rule.</S>
          <S ID="S-31910">We free attach target function words to derivation forests; 28</S>
        </P>
        <P>
          <S ID="S-31911"># of rules (M) 25</S>
        </P>
        <P>
          <S ID="S-31912">M&amp;H-F</S>
        </P>
        <P>
          <S ID="S-31913">Min-F</S>
        </P>
        <P>
          <S ID="S-31914">C3-T</S>
        </P>
        <P>
          <S ID="S-31915">C3-F</S>
        </P>
        <P>
          <S ID="S-31916">0 2 12 22 32 42 52 62 72 82 92</S>
        </P>
        <P>
          <S ID="S-31917"># of tree nodes in rule</S>
        </P>
        <P>
          <S ID="S-31918">&#8226; M&amp;H-F: a minimal rule set extracted from HPSG forests using the extracting algorithm of (<REF ID="R-14" RPTR="38">Mi and Huang, 2008</REF>).</S>
          <S ID="S-31919">Here, we make use of the original alignments.</S>
          <S ID="S-31920">We use the two heuristic conditions described in Section 3.2.3 to attach unaligned words to some node(s) in the forest;</S>
        </P>
        <P>
          <S ID="S-31921">&#8226; Min-F: a minimal rule set extracted from the derivation forests of HPSG forests that were constructed using Algorithm 1 (Section 3).</S>
        </P>
        <P>
          <S ID="S-31922">&#8226; C3-F: a composed rule set extracted from the derivation forests of HPSG forests.</S>
          <S ID="S-31923">Similar to C3-T, the maximum number of internal nodes during combination is three.</S>
        </P>
        <P>
          <S ID="S-31924">We investigate the generalization ability of these rule sets through the following aspects:</S>
        </P>
        <P>
          <S ID="S-31925">1. the number of rules, the number of reordering rules, and the distributions of the number of tree nodes (Figure 3), i.e., more rules with relatively small tree fragments are preferred;</S>
        </P>
        <P>
          <S ID="S-31926">2. the number of rules that are applicable to the development and test sets (Table 3); and</S>
        </P>
        <P>
          <S ID="S-31927">3. the final translation accuracies.</S>
        </P>
        <P>
          <S ID="S-31928">Table 3 and Figure 3 reflect that the generalization abilities of these four rule sets increase in the order of C3-T &lt; M&amp;H-F &lt; Min-F &lt; C3-F.</S>
          <S ID="S-31929">The advantage of using a packed forest for re-alignment is verified by comparing the statistics of the rules and</S>
        </P>
        <P>
          <S ID="S-31930"># of rules (M) 2.5</S>
        </P>
        <P>
          <S ID="S-31931">2.0</S>
        </P>
        <P>
          <S ID="S-31932">1.5</S>
        </P>
        <P>
          <S ID="S-31933">1.0</S>
        </P>
        <P>
          <S ID="S-31934">0.5</S>
        </P>
        <P>
          <S ID="S-31935">0.0</S>
        </P>
        <P>
          <S ID="S-31936"># rules (M) DT</S>
        </P>
        <P>
          <S ID="S-31937">C3-T M&amp;H-F Min-F C3-F</S>
        </P>
        <P>
          <S ID="S-31938">the final BLEU scores of C3-T with Min-F and C3- F. Using the composed rule set C3-F in our forestbased decoder, we achieved an optimal BLEU score of 28.89 (%).</S>
          <S ID="S-31939">Taking M&amp;H-F as the baseline translation rule set, we achieved a significant improvement (p &lt; 0.01) of 1.81 points.</S>
        </P>
        <P>
          <S ID="S-31940">In terms of decoding time, even though we used Algorithm 3 described in (Huang and <REF ID="R-00" RPTR="2">Chiang, 2005</REF>), which lazily generated the N-best translation candidates, the decoding time tended to be increased because more rules were available during cubepruning.</S>
          <S ID="S-31941">Figure 4 shows a comparison of decoding time (seconds per sentence) and the number of rules used for translating the test set.</S>
          <S ID="S-31942">Easy to observe that, decoding time increases in a nearly linear way following the increase of the number of rules used during decoding.</S>
          <S ID="S-31943">Finally, compared with Joshua, which achieved a BLEU score of 24.79 (%) on the test set with a decoding speed of 8.8 seconds per sentence, our forest-based decoder achieved a significantly better (p &lt; 0.01) BLEU score by using either of the four types of translation rules.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>5 Related Research</HEADER>
      <P>
        <S ID="S-31945"><REF ID="R-04" RPTR="9">Galley et al. (2006)</REF> first used derivation forests of aligned tree-string pairs to express multiple interpretations of unaligned target words.</S>
        <S ID="S-31946">The EM algorithm was used to jointly estimate 1) the translation probabilities and fractional counts of rules and 2) the scores of derivations in the derivation forests.</S>
        <S ID="S-31947">By dealing with the ambiguous word alignment instead of unaligned target words, syntaxbased re-alignment models were proposed by (May 29</S>
      </P>
      <P>
        <S ID="S-31948">0</S>
      </P>
      <P>
        <S ID="S-31949">Decoding time (sec./sent.</S>
        <S ID="S-31950">)</S>
      </P>
      <P>
        <S ID="S-31951">and Knight, 2007; <REF ID="R-23" RPTR="55">Wang et al., 2010</REF>) for tree-based translations.</S>
      </P>
      <P>
        <S ID="S-31952">Free attachment of the unaligned target word problem was ignored in (<REF ID="R-14" RPTR="39">Mi and Huang, 2008</REF>), which was the first study on extracting tree-to-string rules from aligned forest-string pairs.</S>
        <S ID="S-31953">This inspired the idea to re-align a packed forest and a target sentence.</S>
        <S ID="S-31954">Specially, we observed that most incorrect or ambiguous word alignments are caused by function words rather than content words.</S>
        <S ID="S-31955">Thus, we focus on the realignment of target function words to source tree fragments and use a dependency parser to limit the attachments of unaligned target words.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>6 Conclusion</HEADER>
      <P>
        <S ID="S-31956">We have proposed an effective use of target function words for extracting generalized transducer rules for forest-based translation.</S>
        <S ID="S-31957">We extend the unaligned word approach described in (<REF ID="R-04" RPTR="19">Galley et al., 2006</REF>) from the 1-best tree to the packed parse forest.</S>
        <S ID="S-31958">A simple yet effective modification is that, during rule extraction, we account for multiple interpretations of both aligned and unaligned target function words.</S>
        <S ID="S-31959">That is, we chose to loose the ambiguous alignments for all of the target function words.</S>
        <S ID="S-31960">The consideration behind is in order to generate target function words in a robust manner.</S>
        <S ID="S-31961">In order to avoid generating too large a derivation forest for a packed forest, we further used chunk-level information yielded by a target dependency parser.</S>
        <S ID="S-31962">Extensive experiments on large-scale English-to-Japanese translation resulted in a significant improvement in BLEU score of 1.8 points (p &lt; 0.01), as compared with our implementation of a strong forest-to-string baseline system (<REF ID="R-16" RPTR="45">Mi et al., 2008</REF>; <REF ID="R-14" RPTR="40">Mi and Huang, 2008</REF>).</S>
        <S ID="S-31963">The present work only re-aligns target function words to source tree fragments.</S>
        <S ID="S-31964">It will be valuable to investigate the feasibility to re-align all the target words to source tree fragments.</S>
        <S ID="S-31965">Also, it is interesting to automatically learn a word set for realigning 7 .</S>
        <S ID="S-31966">Given source parse forests and a target word set for re-aligning beforehand, we argue our approach is generic and applicable to any language pairs.</S>
        <S ID="S-31967">Finally, we intend to extend the proposed approach to tree-to-tree translation frameworks by 7 This idea comes from one reviewer, we express our thankfulness here.</S>
        <S ID="S-31968">re-aligning subtree pairs (<REF ID="R-11" RPTR="28">Liu et al., 2009</REF>; <REF ID="R-01" RPTR="4">Chiang, 2010</REF>) and consistency-to-dependency frameworks by re-aligning consistency-tree-to-dependency-tree pairs (Mi and Liu, 2010) in order to tackle the rulesparseness problem.</S>
      </P>
    </DIV>
  </BODY>
  <ACKNOWLEDGMENTS>
    <P>
      <S ID="S-31969">The present study was supported in part by a Grantin-Aid for Specially Promoted Research (MEXT, Japan), by the Japanese/Chinese Machine Translation</S>
    </P>
  </ACKNOWLEDGMENTS>
  <REFERENCES>
    <REFERENCE ID="0">
      <RAUTHOR>David Chiang</RAUTHOR>
      <REFTITLE>A hierarchical phrase-based model for statistical machine translation.</REFTITLE>
      <DATE>2005</DATE>
    </REFERENCE>
    <REFERENCE ID="1">
      <RAUTHOR>David Chiang</RAUTHOR>
      <REFTITLE>Learning to translate with source and target syntax.</REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="2">
      <RAUTHOR>A P Dempster</RAUTHOR>
      <REFTITLE>Maximum likelihood from incomplete data via the em algorithm.</REFTITLE>
      <DATE>1977</DATE>
    </REFERENCE>
    <REFERENCE ID="3">
      <RAUTHOR>Michel Galley</RAUTHOR>
      <REFTITLE>What&#8217;s in a translation rule?</REFTITLE>
      <DATE>2004</DATE>
    </REFERENCE>
    <REFERENCE ID="4">
      <RAUTHOR>Michel Galley</RAUTHOR>
      <REFTITLE>Scalable inference and training of context-rich syntactic translation models.</REFTITLE>
      <DATE>2006</DATE>
    </REFERENCE>
    <REFERENCE ID="5">
      <RAUTHOR>Liang Huang</RAUTHOR>
      <REFTITLE>Better k-best parsing.</REFTITLE>
      <DATE>2005</DATE>
    </REFERENCE>
    <REFERENCE ID="6">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Statistical phrase-based translation.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="7">
      <RAUTHOR>Philipp Koehn</RAUTHOR>
      <REFTITLE>Moses: Open source toolkit for statistical machine translation.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="8">
      <RAUTHOR>Taku Kudo</RAUTHOR>
      <REFTITLE>Japanese dependency analysis using cascaded chunking.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="9">
      <RAUTHOR>Zhifei Li</RAUTHOR>
      <REFTITLE>Demonstration of joshua: An open source toolkit for parsing-based machine translation.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="10">
      <RAUTHOR>Yang Liu</RAUTHOR>
      <REFTITLE>Treeto-string alignment templates for statistical machine transaltion.</REFTITLE>
      <DATE>2006</DATE>
    </REFERENCE>
    <REFERENCE ID="11">
      <RAUTHOR>Yang Liu</RAUTHOR>
      <REFTITLE>Improving tree-to-tree translation with packed forests.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
    <REFERENCE ID="12">
      <RAUTHOR>Samuel E Martin</RAUTHOR>
      <REFTITLE>A Reference Grammar of Japanese.</REFTITLE>
      <DATE>1975</DATE>
    </REFERENCE>
    <REFERENCE ID="13">
      <RAUTHOR>Jonathan May</RAUTHOR>
      <REFTITLE>Syntactic realignment models for machine translation.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="14">
      <RAUTHOR>Haitao Mi</RAUTHOR>
      <REFTITLE>Forest-based translation rule extraction.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="15">
      <RAUTHOR>Haitao Mi</RAUTHOR>
      <REFTITLE>Constituency to dependency translation with forests.</REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="16">
      <RAUTHOR>Haitao Mi</RAUTHOR>
      <REFTITLE>Forestbased translation.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="17">
      <RAUTHOR>Yusuke Miyao</RAUTHOR>
      <REFTITLE>Feature forest models for probabilistic hpsg parsing.</REFTITLE>
      <DATE>2008</DATE>
    </REFERENCE>
    <REFERENCE ID="18">
      <RAUTHOR>Franz Josef Och</RAUTHOR>
      <REFTITLE>A systematic comparison of various statistical alignment models.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="19">
      <RAUTHOR>Kishore Papineni</RAUTHOR>
      <REFTITLE>Bleu: a method for automatic evaluation of machine translation.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="20">
      <RAUTHOR>Ivan A Sag</RAUTHOR>
      <REFTITLE>Syntactic Theory: A Formal Introduction. Number 152 in CSLI Lecture Notes.</REFTITLE>
      <DATE>2003</DATE>
    </REFERENCE>
    <REFERENCE ID="21">
      <RAUTHOR>Andreas Stolcke</RAUTHOR>
      <REFTITLE>Srilm-an extensible language modeling toolkit.</REFTITLE>
      <DATE>2002</DATE>
    </REFERENCE>
    <REFERENCE ID="22">
      <RAUTHOR>Masao Utiyama</RAUTHOR>
      <REFTITLE>A japaneseenglish patent parallel corpus.</REFTITLE>
      <DATE>2007</DATE>
    </REFERENCE>
    <REFERENCE ID="23">
      <RAUTHOR>Wei Wang</RAUTHOR>
      <REFTITLE>Re-structuring, re-labeling, and realigning for syntax-based machine translation.</REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="24">
      <RAUTHOR>Xianchao Wu</RAUTHOR>
      <REFTITLE>Fine-grained tree-to-string translation rule extraction.</REFTITLE>
      <DATE>2010</DATE>
    </REFERENCE>
    <REFERENCE ID="25">
      <RAUTHOR>Peng Xu</RAUTHOR>
      <REFTITLE>Using a dependency parser to improve smt for subject-object-verb languages.</REFTITLE>
      <DATE>2009</DATE>
    </REFERENCE>
  </REFERENCES>
</PAPER>
