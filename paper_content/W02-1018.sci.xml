<PAPER>
  <FILENO/>
  <TITLE>Association for Computational Linguistics. A Phrase-Based, Joint Probability Model for Statistical Machine Translation</TITLE>
  <AUTHORS>
    <AUTHOR>Daniel Marcu</AUTHOR>
  </AUTHORS>
  <ABSTRACT>
    <A-S ID="S-39494">We present a joint probability model for statistical machine translation, which automatically learns word and phrase equivalents from bilingual corpora.</A-S>
    <A-S ID="S-39495">Translations produced with parameters estimated using the joint model are more accurate than translations produced using IBM Model 4.</A-S>
  </ABSTRACT>
  <BODY>
    <DIV DEPTH="0">
      <HEADER>1 Motivation</HEADER>
      <P>
        <S ID="S-39496">Most of the noisy-channel-based models used in statistical machine translation (MT) (<REF ID="R-01" RPTR="2">Brown et al., 1993</REF>) are conditional probability models.</S>
        <S ID="S-39497">In the noisy-channel framework, each source sentence e in a parallel corpus is assumed to &#8220;generate&#8221; a target sentence f by means of a stochastic process, whose parameters are estimated using traditional EM techniques (Dempster et al., 1977).</S>
        <S ID="S-39498">The generative model explains how source words are mapped into target words and how target words are re-ordered to yield well-formed target sentences.</S>
        <S ID="S-39499">A variety of methods are used to account for the re-ordering stage: word-based (<REF ID="R-01" RPTR="3">Brown et al., 1993</REF>), templatebased (Och et al., 1999), and syntax-based (Yamada and Knight, 2001), to name just a few.</S>
        <S ID="S-39500">Although these models use different generative processes to explain how translated words are re-ordered in a target language, at the lexical level they are quite similar; all these models assume that source words are individually translated into target words.</S>
        <S ID="S-39501">1</S>
      </P>
      <P>
        <S ID="S-39502">1 The individual words may contain a non-existent element,</S>
      </P>
      <P>
        <S ID="S-39503">called NULL.</S>
      </P>
      <P>
        <S ID="S-39504">We suspect that MT researchers have so far chosen to automatically learn translation lexicons defined only over words for primarily pragmatic reasons.</S>
        <S ID="S-39505">Large scale bilingual corpora with vocabularies in the range of hundreds of thousands yield very large translation lexicons.</S>
        <S ID="S-39506">Tuning the probabilities associated with these large lexicons is a difficult enough task to deter one from trying to scale up to learning phrase-based lexicons.</S>
        <S ID="S-39507">Unfortunately, trading space requirements and efficiency for explanatory power often yields non-intuitive results.</S>
      </P>
      <P>
        <S ID="S-39508">Consider, for example, the parallel corpus of three sentence pairs shown in Figure 1.</S>
        <S ID="S-39509">Intuitively, if we allow any Source words to be aligned to any Target words, the best alignment that we can come up with is the one in Figure 1.c.</S>
        <S ID="S-39510">Sentence pair (S2, T2) offers strong evidence that &#8220;b c&#8221; in language S means the same thing as &#8220;x&#8221; in language T.</S>
        <S ID="S-39511">On the basis of this evidence, we expect the system to also learn from sentence pair (S1, T1) that &#8220;a&#8221; in language S means the same thing as &#8220;y&#8221; in language T.</S>
        <S ID="S-39512">Unfortunately, if one works with translation models that do not allow Target words to be aligned to more than one Source word &#8212; as it is the case in the IBM models (<REF ID="R-01" RPTR="4">Brown et al., 1993</REF>) &#8212; it is impossible to learn that the phrase &#8220;b c&#8221; in language S means the same thing as word &#8220;x&#8221; in language T.</S>
        <S ID="S-39513">The IBM Model 4 (<REF ID="R-01" RPTR="5">Brown et al., 1993</REF>), for example, converges to the word alignments shown in Figure 1.b and learns the translation probabilities shown in Figure 1.a.</S>
        <S ID="S-39514">2 Since in the IBM model one cannot link a Target word to more than a Source word, the training procedure</S>
      </P>
      <P>
        <S ID="S-39515">1999).</S>
      </P>
      <P>
        <S ID="S-39516">2 To train the IBM-4 model, we used Giza (Al-Onaizan et al.,</S>
      </P>
      <P>
        <S ID="S-39517"></S>
      </P>
      <P>
        <S ID="S-39518"></S>
      </P>
      <P>
        <S ID="S-39519"></S>
      </P>
      <P>
        <S ID="S-39520">a) b) c) d) e)</S>
      </P>
      <P>
        <S ID="S-39521">yields unintuitive translation probabilities.</S>
        <S ID="S-39522">(Note that another good word-for-word model is one that assigns high probability to p(x b) and p(z b) and low probability to p(x c).</S>
        <S ID="S-39523">)</S>
      </P>
      <P>
        <S ID="S-39524">In this paper, we describe a translation model that assumes that lexical correspondences can be established not only at the word level, but at the phrase level as well.</S>
        <S ID="S-39525">In constrast with many previous approaches (<REF ID="R-01" RPTR="6">Brown et al., 1993</REF>; Och et al., 1999; Yamada and Knight, 2001), our model does not try to capture how Source sentences can be mapped into Target sentences, but rather how Source and Target sentences can be generated simultaneously.</S>
        <S ID="S-39526">In other words, in the style of Melamed (2001), we estimate a joint probability model that can be easily marginalized in order to yield conditional probability models for both source-to-target and target-tosource machine translation applications.</S>
        <S ID="S-39527">The main difference between our work and that of Melamed is that we learn joint probability models of translation equivalence not only between words but also between phrases and we show that these models can be used not only for the extraction of bilingual lexicons but also for the automatic translation of unseen sentences.</S>
      </P>
      <P>
        <S ID="S-39528">In the rest of the paper, we first describe our model (Section 2) and explain how it can be implemented/trained (Section 3).</S>
        <S ID="S-39529">We briefly describe a decoding algorithm that works in conjunction with our model (Section 4) and evaluate the performance of a translation system that uses the joint-probability model (Section 5).</S>
        <S ID="S-39530">We end with a discussion of the strengths and weaknesses of our model as compared to other models proposed in the literature.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>2 A Phrase-Based Joint Probability Model</HEADER>
      <P>
        <S ID="S-39620"></S>
      </P>
      <DIV DEPTH="1">
        <HEADER>2.1 Model 1</HEADER>
        <P>
          <S ID="S-39531">In developing our joint probability model, we started out with a very simple generative story.</S>
          <S ID="S-39532">We assume that each sentence pair in our corpus is generated by the following stochastic process:</S>
        </P>
        <P>
          <S ID="S-39533">1.</S>
          <S ID="S-39534">Generate a bag of concepts &#161; .</S>
        </P>
        <P>
          <S ID="S-39535">2.</S>
          <S ID="S-39536">For each concept &#162;&#164;&#163;&#166;&#165;&#167;&#161; , generate a pair of phrases &#168;&#169;  &#163; &#169; &#163; , according to the distribution</S>
        </P>
        <P>
          <S ID="S-39537">&#168;&#169;  &#163; &#169; &#163; , where  &#169; &#163; and &#169; &#163; each contain at least</S>
        </P>
        <P>
          <S ID="S-39538">one word.</S>
        </P>
        <P>
          <S ID="S-39539">3.</S>
          <S ID="S-39540">Order the phrases generated in each language so as to create two linear sequences of phrases; these sequences correspond to the sentence pairs in a bilingual corpus.</S>
        </P>
        <P>
          <S ID="S-39541">For simplicity, we initially assume that the bag of concepts and the ordering of the generated phrases are modeled by uniform distributions.</S>
          <S ID="S-39542">We do not assume that &#162;&#164;&#163; is a hidden variable that generates</S>
        </P>
        <P>
          <S ID="S-39543"></S>
        </P>
        <P>
          <S ID="S-39544"></S>
        </P>
        <P>
          <S ID="S-39545"></S>
        </P>
        <P>
          <S ID="S-39546"></S>
        </P>
        <P>
          <S ID="S-39547"></S>
        </P>
        <P>
          <S ID="S-39548"></S>
        </P>
        <P>
          <S ID="S-39549"></S>
        </P>
        <P>
          <S ID="S-39550">MD</S>
        </P>
        <P>
          <S ID="S-39551">U</S>
        </P>
        <P>
          <S ID="S-39552"></S>
        </P>
        <P>
          <S ID="S-39553"></S>
        </P>
        <P>
          <S ID="S-39554">M</S>
        </P>
        <P>
          <S ID="S-39555"></S>
        </P>
        <P>
          <S ID="S-39556"></S>
        </P>
        <P>
          <S ID="S-39557"></S>
        </P>
        <P>
          <S ID="S-39558"></S>
        </P>
        <P>
          <S ID="S-39559"></S>
        </P>
        <P>
          <S ID="S-39560">M</S>
        </P>
        <P>
          <S ID="S-39561">&#163; &#169; &#163; &#169;</S>
        </P>
        <P>
          <S ID="S-39562">the pair &#168;&#169; &#163; , but rather that &#162;&#164;&#163;&#168;&#169; &#163; .</S>
          <S ID="S-39563">Under these assumptions, it follows that the probability of generating a sentence pair (E, F) using concepts</S>
        </P>
        <P>
          <S ID="S-39564">&#162;&#164;&#163;&#165;&#161; is given by the product of all phrase-tophrase translation probabilities, !</S>
          <S ID="S-39565">&#168;&#169;  &#163;  &#169; &#163;  that yield bags of phrases that can be ordered linearly so as to obtain the sentences E and F. For example, the sentence pair &#8220;a b c&#8221; &#8212; &#8220;x y&#8221; can be generated using two concepts, (&#8220;a b&#8221; : &#8220;y&#8221;) and (&#8220;c&#8221; : &#8220;x&#8221;); or one concept, (&#8220;a b c&#8221; : &#8220;x y&#8221;), because in both cases the phrases in each language can be arranged in a sequence that would yield the original sentence pair.</S>
          <S ID="S-39566">However, the same sentence pair cannot be generated using the concepts (&#8220;a b&#8221; : &#8220;y&#8221;) and (&#8220;c&#8221; : &#8220;y&#8221;) because the sequence &#8220;x y&#8221; cannot be recreated from the two phrases &#8220;y&#8221; and &#8220;y&#8221;.</S>
          <S ID="S-39567">Similarly, the pair cannot be generated using concepts (&#8220;a c&#8221; : &#8220;x&#8221;) and (&#8220;b&#8221; : &#8220;y&#8221;) because the sequence &#8220;a b c&#8221; cannot be created by catenating the phrases &#8220;a c&#8221; and &#8220;b&#8221;.</S>
        </P>
        <P>
          <S ID="S-39568">We say that a set of concepts &#161; can be linearized into a sentence pair (E, F) if E and F can be obtained by permuting the phrases</S>
        </P>
        <P>
          <S ID="S-39569">&#169; &#163; and &#169; &#163; that characterize</S>
        </P>
        <P>
          <S ID="S-39570">all concepts &#162;&#164;&#163;"&#165;#&#161; .</S>
          <S ID="S-39571">We denote this property using the predicate $%&#168;&amp;')(*+&#161;, .</S>
          <S ID="S-39572">Under this model, the probability of a given sentence pair (E, F) can then be obtained by summing up over all possible ways of generating bags of concepts &#161;-&#165;/.</S>
          <S ID="S-39573">that can be linearized to (E, F).</S>
        </P>
        <P>
          <S ID="S-39574">0 &#168;&amp;')(12 3 46587 9;:=&lt;?&gt; @A&gt;CB</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>2.2 Model 2</HEADER>
        <P>
          <S ID="S-39575">D E</S>
        </P>
        <P>
          <S ID="S-39576">&#168;&#169;   &#163;F &#169; &#163; (1)</S>
        </P>
        <P>
          <S ID="S-39577">Although Model 1 is fairly unsophisticated, we have found that it produces in practice fairly good alignments.</S>
          <S ID="S-39578">However, this model is clearly unsuited for translating unseen sentences as it imposes no constraints on the ordering of the phrases associated with a given concept.</S>
          <S ID="S-39579">In order to account for this, we modify slightly the generative process in Model 1 so as to account for distortions.</S>
          <S ID="S-39580">The generative story of Model 2 is this:</S>
        </P>
        <P>
          <S ID="S-39581">1.</S>
          <S ID="S-39582">Generate a bag of concepts &#161; .</S>
        </P>
        <P>
          <S ID="S-39583">2.</S>
          <S ID="S-39584">Initialize E and F to empty sequences G .</S>
        </P>
        <P>
          <S ID="S-39585">3.</S>
          <S ID="S-39586">Randomly take a concept &#162;+&#163;H&#165;I&#161; and generate a pair of phrases &#168;&#169;  &#163; &#169; &#163; , according to the dis-</S>
        </P>
        <P>
          <S ID="S-39587">tribution &#168;&#169;  &#163; &#169; &#163; , where  &#169; &#163; and &#169;</S>
        </P>
        <P>
          <S ID="S-39588">at least one word.</S>
          <S ID="S-39589">Remove then &#162;+&#163; from &#161; .</S>
        </P>
        <P>
          <S ID="S-39590">4.</S>
          <S ID="S-39591">Append phrase &#169; start position of &#169; &#163; in F.</S>
        </P>
        <P>
          <S ID="S-39592">&#163; each contain</S>
        </P>
        <P>
          <S ID="S-39593">&#163; at the end of F. Let J be the</S>
        </P>
        <P>
          <S ID="S-39594">&#163; at position K in E provided that</S>
        </P>
        <P>
          <S ID="S-39595">5.</S>
          <S ID="S-39596">Insert phrase &#169; no other phrase occupies any of the positions between K and KL  &#169; &#163; , where</S>
        </P>
        <P>
          <S ID="S-39597">&#169; &#163; gives the</S>
        </P>
        <P>
          <S ID="S-39598">length of the phrase</S>
        </P>
        <P>
          <S ID="S-39599">&#169; &#163; .</S>
          <S ID="S-39600">We hence create the</S>
        </P>
        <P>
          <S ID="S-39601">alignment between the two phrases &#169; &#163; and</S>
        </P>
        <P>
          <S ID="S-39602">&#169; &#163;</S>
        </P>
        <P>
          <S ID="S-39603">with probability</S>
        </P>
        <P>
          <S ID="S-39604">MON</S>
        </P>
        <P>
          <S ID="S-39605">D RTS 7P Q 7 MVU</S>
        </P>
        <P>
          <S ID="S-39606">&#168; 0 T&#168;KL  &#169; &#163; XW!YZ+</S>
        </P>
        <P>
          <S ID="S-39607">where U &#168;\[)]8 is a position-based distortion distribution.</S>
        </P>
        <P>
          <S ID="S-39608">6.</S>
          <S ID="S-39609">Repeat steps 3 to 5 until &#161; is empty.</S>
        </P>
        <P>
          <S ID="S-39610">In Model 2, the probability to generate a sentence pair (E, F) is given by formula (2), where 0_^E` &#168; &#169;</S>
        </P>
        <P>
          <S ID="S-39611">&#163;</S>
        </P>
        <P>
          <S ID="S-39612">denotes the position of word J of phrase &#169; &#163; in sentence F and 0_^E` a &#168;&#169;  &#163; denotes the position in sentence E of the center of mass of phrase  &#163; .</S>
        </P>
        <P>
          <S ID="S-39613">0 D &#168;&amp;')(12 3 &#168;&#169;  &#163; &#169; &#163;Hd</S>
        </P>
        <P>
          <S ID="S-39614">4T587 9;:=&lt;?&gt; @A&gt;CB Ecb 7P Q 7 (2)</S>
        </P>
        <P>
          <S ID="S-39615">&#168; 0_^E`  &#168; &#169; &#163; + 0_^E` a &#168;&#169;  &#163;Xf S4e</S>
        </P>
        <P>
          <S ID="S-39616">Model 2 implements an absolute position-based distortion model, in the style of IBM Model 3.</S>
          <S ID="S-39617">We have tried many types of distortion models.</S>
          <S ID="S-39618">We eventually settled for the model discussed here because it produces better translations during decoding.</S>
          <S ID="S-39619">Since the number of factors involved in computing the probability of an alignment does not vary with the size of the Target phrases into which Source phrases are translated, this model is not predisposed to produce translations that are shorter than the Source sentences given as input.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>3 Training</HEADER>
      <P>
        <S ID="S-39684">Training the models described in Section 2 is computationally challenging.</S>
        <S ID="S-39685">Since there is an exponential number of alignments that can generate a sentence pair (E, F), it is clear that we cannot apply the</S>
      </P>
      <P>
        <S ID="S-39686">&#169;</S>
      </P>
      <P>
        <S ID="S-39687"></S>
      </P>
      <P>
        <S ID="S-39688"></S>
      </P>
      <P>
        <S ID="S-39689">&#163;</S>
      </P>
      <P>
        <S ID="S-39690">M {</S>
      </P>
      <P>
        <S ID="S-39691">M {</S>
      </P>
      <P>
        <S ID="S-39692"></S>
      </P>
      <P>
        <S ID="S-39693">M {</S>
      </P>
      <P>
        <S ID="S-39694">B</S>
      </P>
      <P>
        <S ID="S-39695"></S>
      </P>
      <P>
        <S ID="S-39696">e</S>
      </P>
      <P>
        <S ID="S-39697">o</S>
      </P>
      <P>
        <S ID="S-39698">1.</S>
        <S ID="S-39699">Determine high-frequency n- grams in the bilingual corpus.</S>
      </P>
      <P>
        <S ID="S-39700">2.</S>
        <S ID="S-39701">Initialize the t-distribution table.</S>
      </P>
      <P>
        <S ID="S-39702">3.</S>
        <S ID="S-39703">Apply EM training on the Viterbi alignments, while using smoothing.</S>
      </P>
      <P>
        <S ID="S-39704">4.</S>
        <S ID="S-39705">Generate conditional model probabilities.</S>
      </P>
      <P>
        <S ID="S-39706">EM training algorithm exhaustively.</S>
        <S ID="S-39707">To estimate the parameters of our model, we apply the algorithm in Figure 2, whose steps are motivated and described below.</S>
      </P>
      <DIV DEPTH="1">
        <HEADER>3.1 Determine high-frequency n-grams in E and F</HEADER>
        <P>
          <S ID="S-39621">If one assumes from the outset that any phrases</S>
        </P>
        <P>
          <S ID="S-39622">&#163;g&#165;h4i and &#169; &#163;*&#165;jki can be generated from a concept &#162;&#164;&#163; , one would need a supercomputer in order to</S>
        </P>
        <P>
          <S ID="S-39623">store in the memory a table that models the &#168;&#169;  &#163;l &#169; &#163;</S>
        </P>
        <P>
          <S ID="S-39624">distribution.</S>
          <S ID="S-39625">Since we don&#8217;t have access to computers with unlimited memory, we initially learn t distribution entries only for the phrases that occur often in the corpus and for unigrams.</S>
          <S ID="S-39626">Then, through smoothing, we learn t distribution entries for the phrases that occur rarely as well.</S>
          <S ID="S-39627">In order to be considered in step 2 of the algorithm, a phrase has to occur at least five times in the corpus.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.2 Initialize the t-distribution table</HEADER>
        <P>
          <S ID="S-39628">Before the EM training procedure starts, one has no idea what word/phrase pairs are likely to share the same meaning.</S>
          <S ID="S-39629">In other words, all alignments that can generate a sentence pair (E, F) can be assumed to have the same probability.</S>
          <S ID="S-39630">Under these conditions, the evidence that a sentence pair (E, F) contributes to the fact that &#168;&#169;  &#163;  &#169; &#163;  are generated by the same concept &#162;&#164;&#163; is given by the number of alignments that can be built between (E, F) that have a concept &#162;&#164;&#163; that is linked to phrase</S>
        </P>
        <P>
          <S ID="S-39631">&#169; &#163; in sentence E and phrase &#169;</S>
        </P>
        <P>
          <S ID="S-39632">in sentence F divided by the total number of alignments that can be built between the two sentences.</S>
          <S ID="S-39633">Both these numbers can be easily approximated.</S>
        </P>
        <P>
          <S ID="S-39634">Given a sentence E of K words, there are m*&#168;KlnJA ways in which the K words can be partitioned into J non-empty sets/concepts, where m*&#168;KlnJA is the Stirling number of second kind.</S>
        </P>
        <P>
          <S ID="S-39635">m*&#168;KlnJA2po Jrq</S>
        </P>
        <P>
          <S ID="S-39636">M6s</S>
        </P>
        <P>
          <S ID="S-39637">3 &#163; Sut</S>
        </P>
        <P>
          <S ID="S-39638">&#168;lv</S>
        </P>
        <P>
          <S ID="S-39639">&#163;Ew J [Tx</S>
        </P>
        <P>
          <S ID="S-39640">There are also m*&#168;\|VnJA ways in which the |</S>
        </P>
        <P>
          <S ID="S-39641">&#168;Jyvz[lF{ (3)</S>
        </P>
        <P>
          <S ID="S-39642">words of a sentence F can be partitioned into J nonempty sets.</S>
          <S ID="S-39643">Given that any words in E can be mapped to any words in F, it follows that there are</S>
        </P>
        <P>
          <S ID="S-39644">} a &#163; :=~&gt; a&#8364;B S4e Jrq+m*&#168;KlnJA&#65533;m*&#168;\|VnJA alignments that can be</S>
        </P>
        <P>
          <S ID="S-39645">built between two sentences (E, F) of lengths K and</S>
        </P>
        <P>
          <S ID="S-39646">| , respectively.</S>
          <S ID="S-39647">When a concept &#162;&#164;&#163; generates two</S>
        </P>
        <P>
          <S ID="S-39648">phrases &#168;&#169;  &#163;  &#169; &#163;  of length &#8218; and &#402; , respectively, there are only K&#8222;v'&#8218; and |&#8230;v"&#402; words left to link.</S>
          <S ID="S-39649">Hence, in the absence of any other information, the probability that phrases</S>
        </P>
        <P>
          <S ID="S-39650">&#169; &#163; and &#169; &#163; are generated by the same</S>
        </P>
        <P>
          <S ID="S-39651">concept &#162;&#164;&#163; is given by formula (4).</S>
        </P>
        <P>
          <S ID="S-39652">s;&#8225; s;&#710; } a &#163; :&#8224;~ &gt; a</S>
        </P>
        <P>
          <S ID="S-39653">S4e Jrq+m*&#168;Kuvz&#8218;_nJA&#65533;m*&#168;\|&#8240;v&#402;6nJA } a &#163; :&#8224;~&#352;&gt; a&#8364;B</S>
        </P>
        <P>
          <S ID="S-39654">S4e Jrq+m*&#168;KlnJA&#65533;m*&#168;\|VnJA</S>
        </P>
        <P>
          <S ID="S-39655">(4)</S>
        </P>
        <P>
          <S ID="S-39656">Note that the fractional counts returned by equation (4) are only an approximation of the t distribution that we are interested in because the Stirling numbers of the second kind do not impose any restriction on the words that are associated with a given concept be consecutive.</S>
          <S ID="S-39657">However, since formula (4) overestimates the numerator and denominator equally, the approximation works well in practice.</S>
          <S ID="S-39658">In the second step of the algorithm, we apply equation (4) to collect fractional counts for all unigram and high-frequency n-gram pairs in the cartesian product defined over the phrases in each sentence pair (E, F) in a corpus.</S>
          <S ID="S-39659">We sum over all these t-counts and we normalize to obtain an initial joint distribution  .</S>
          <S ID="S-39660">This step amounts to running the EM algorithm for one step over all possible alignments in the corpus.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.3 EM training on Viterbi alignments</HEADER>
        <P>
          <S ID="S-39661">Given a non-uniform t distribution, phrase-to-phrase alignments have different weights and there are no</S>
        </P>
        <P>
          <S ID="S-39662">U</S>
        </P>
        <P>
          <S ID="S-39663">other tricks one can apply to collect fractional counts over all possible alignments in polynomial time.</S>
          <S ID="S-39664">Starting with step 3 of the algorithm in Figure 2, for each sentence pair in a corpus, we greedily produce an initial alignment by linking together phrases so as to create concepts that have high t probabilities.</S>
          <S ID="S-39665">We then hillclimb towards the Viterbi alignment of highest probability by breaking and merging concepts, swapping words between concepts, and moving words across concepts.</S>
          <S ID="S-39666">We compute the probabilities associated with all the alignments we generate during the hillclimbing process and collect t counts over all concepts in these alignments.</S>
          <S ID="S-39667">We apply this Viterbi-based EM training procedure for a few iterations.</S>
          <S ID="S-39668">The first iterations estimate the alignment probabilities using Model 1.</S>
          <S ID="S-39669">The rest of the iterations estimate the alignment probabilities using Model 2.</S>
          <S ID="S-39670">During training, we apply smoothing so we can associate non-zero values to phrase-pairs that do not occur often in the corpus.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.4 Derivation of conditional probability model</HEADER>
        <P>
          <S ID="S-39671">At the end of the training procedure, we take marginals on the joint probability distributions  and .</S>
          <S ID="S-39672">This yields conditional probability distributions</S>
        </P>
        <P>
          <S ID="S-39673">&#168; &#169; &#163;  &#169; &#163;  and U &#168; 0_^E` (</S>
        </P>
        <P>
          <S ID="S-39674">decoding.</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>3.5 Discussion</HEADER>
        <P>
          <S ID="S-39675">0_^E` &amp;+ which we use for</S>
        </P>
        <P>
          <S ID="S-39676">When we run the training procedure in Figure 2 on the corpus in Figure 1, after four Model 1 iterations we obtain the alignments in Figure 1.d and the joint and conditional probability distributions shown in Figure 1.e.</S>
          <S ID="S-39677">At prima facie, the Viterbi alignment for the first sentence pair appears incorrect because we, as humans, have a natural tendency to build alignments between the smallest phrases possible.</S>
          <S ID="S-39678">However, note that the choice made by our model is quite reasonable.</S>
          <S ID="S-39679">After all, in the absence of additional information, the model can either assume that &#8220;a&#8221; and &#8220;y&#8221; mean the same thing or that phrases &#8220;a b c&#8221; and &#8220;x y&#8221; mean the same thing.</S>
          <S ID="S-39680">The model chose to give more weight to the second hypothesis, while preserving some probability mass for the first one.</S>
        </P>
        <P>
          <S ID="S-39681">Also note that although the joint distribution puts the second hypothesis at an advantage, the conditional distribution does not.</S>
          <S ID="S-39682">The conditional distribution in Figure 1.e is consistent with our intuitions that tell us that it is reasonable both to translate &#8220;a b c&#8221; into &#8220;x y&#8221;, as well as &#8220;a&#8221; into &#8220;y&#8221;.</S>
          <S ID="S-39683">The conditional distribution mirrors perfectly our intuitions.</S>
        </P>
      </DIV>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>4 Decoding</HEADER>
      <P>
        <S ID="S-39708">For decoding, we have implemented a greedy procedure similar to that proposed by Germann et al. (2001).</S>
        <S ID="S-39709">Given a Foreign sentence F, we first produce a gloss of it by selecting phrases in h i that maximize the probability 0 &#168;&amp;')(1 .</S>
        <S ID="S-39710">We then iteratively hillclimb by modifying E and the alignment between E and F so as to maximize the formula</S>
      </P>
      <P>
        <S ID="S-39711">0 &#168;&amp; 0 &#168;( &amp; .</S>
        <S ID="S-39712">We hillclimb by modifying an existing alignment/translation through a set of operations that modify locally the aligment/translation built until a given time.</S>
        <S ID="S-39713">These operations replace the English side of an alignment with phrases of different probabilities, merge and break existing concepts, and swap words across concepts.</S>
        <S ID="S-39714">The probability p(E) is computed using a simple trigram language model that was trained using the CMU Language Modeling Toolkit (<REF ID="R-02" RPTR="8">Clarkson and Rosenfeld, 1997</REF>).</S>
        <S ID="S-39715">The language model is estimated at the word (not phrase) level.</S>
        <S ID="S-39716">Figure 3 shows the steps taken by our decoder in order to find the translation of sentence &#8220;je vais me arr&#234;ter l&#224; .&#8221; Each intermediate translation in Figure 3 is preceded by its probability and succeded by the operation that changes it to yield a translation of higher probability.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>5 Evaluation</HEADER>
      <P>
        <S ID="S-39717">To evaluate our system, we trained both Giza (IBM Model 4) (<REF ID="R-00" RPTR="0">Al-Onaizan et al., 1999</REF>) and our joint probability model on a French-English parallel corpus of 100,000 sentence pairs from the Hansard corpus.</S>
        <S ID="S-39718">The sentences in the corpus were at most 20 words long.</S>
        <S ID="S-39719">The English side had a total of 1,073,480 words (21,484 unique tokens).</S>
        <S ID="S-39720">The French side had a total of 1,177,143 words (28,132 unique tokens).</S>
      </P>
      <P>
        <S ID="S-39721">We translated 500 unseen sentences, which were uniformly distributed across lengths 6, 8, 10, 15, and 20.</S>
        <S ID="S-39722">For each group of 100 sentences, we manually determined the number of sentences translated perfectly by the IBM model decoder of Germann et al. (2001) and the decoder that uses the joint prob-</S>
      </P>
      <P>
        <S ID="S-39723">1.28e&#8722;14</S>
      </P>
      <P>
        <S ID="S-39724">7.50e&#8722;11</S>
      </P>
      <P>
        <S ID="S-39725">2.97e&#8722;10</S>
      </P>
      <P>
        <S ID="S-39726">7.75e&#8722;10</S>
      </P>
      <P>
        <S ID="S-39727">1.09e&#8722;09</S>
      </P>
      <P>
        <S ID="S-39728">9.46e&#8722;08</S>
      </P>
      <P>
        <S ID="S-39729">je vais me arreter la .</S>
      </P>
      <P>
        <S ID="S-39730">i .</S>
        <S ID="S-39731">me to that .</S>
      </P>
      <P>
        <S ID="S-39732">je vais me arreter la .</S>
      </P>
      <P>
        <S ID="S-39733">i want me to that .</S>
      </P>
      <P>
        <S ID="S-39734">je vais me arreter la .</S>
      </P>
      <P>
        <S ID="S-39735">i want me to there .</S>
      </P>
      <P>
        <S ID="S-39736">je vais me arreter la .</S>
      </P>
      <P>
        <S ID="S-39737">i want me stop there .</S>
      </P>
      <P>
        <S ID="S-39738">je vais me arreter la .</S>
      </P>
      <P>
        <S ID="S-39739">let me to stop there .</S>
      </P>
      <P>
        <S ID="S-39740">je vais me arreter la .</S>
      </P>
      <P>
        <S ID="S-39741">i am going to stop there .</S>
      </P>
      <P>
        <S ID="S-39742">changeWordTrans("vais", "want")</S>
      </P>
      <P>
        <S ID="S-39743">FuseAndChangeTrans("la .</S>
        <S ID="S-39744">", "there .</S>
        <S ID="S-39745">")</S>
      </P>
      <P>
        <S ID="S-39746">ChangeWordTrans("arreter","stop")</S>
      </P>
      <P>
        <S ID="S-39747">FuseAndChange("je vais","let me")</S>
      </P>
      <P>
        <S ID="S-39748">FuseAndChange("je vais me", "i am going to")</S>
      </P>
      <P>
        <S ID="S-39749">ability model.</S>
        <S ID="S-39750">We also evaluated the translations automatically, using the IBM-Bleu metric (Papineni et al., 2002).</S>
        <S ID="S-39751">The results in Table 1 show that the phrased-based translation model proposed in this paper significantly outperforms IBM Model 4 on both the subjective and objective metrics.</S>
      </P>
    </DIV>
    <DIV DEPTH="0">
      <HEADER>6 Discussion</HEADER>
      <P>
        <S ID="S-39776"></S>
      </P>
      <DIV DEPTH="1">
        <HEADER>6.1 Limitations</HEADER>
        <P>
          <S ID="S-39752">The main shortcoming of the phrase-based model in this paper concerns the size of the t-table and the cost of the training procedure we currently apply.</S>
          <S ID="S-39753">To keep the memory requirements manageable, we arbitrarily restricted the system to learning phrase translations of at most six words on each side.</S>
          <S ID="S-39754">Also, the swap, break, and merge operations used during the Viterbi training are computationally expensive.</S>
          <S ID="S-39755">We are currently investigating the applicability of dynamic programming techniques to increase the speed of the training procedure.</S>
        </P>
        <P>
          <S ID="S-39756">Clearly, there are language pairs for which it would be helpful to allow concepts to be realized as non-contiguous phrases.</S>
          <S ID="S-39757">The English word &#8220;not&#8221;, for example, is often translated into two French words, &#8220;ne&#8221; and &#8220;pas&#8221;.</S>
          <S ID="S-39758">But &#8220;ne&#8221; and &#8220;pas&#8221; almost never occur in adjacent positions in French texts.</S>
          <S ID="S-39759">At the outset of this work, we attempted to develop a translation model that enables concepts to be mapped into non-contiguous phrases.</S>
          <S ID="S-39760">But we were not able to scale and train it on large amounts of data.</S>
          <S ID="S-39761">The model described in this paper cannot learn that the English word &#8220;not&#8221; corresponds to the French words &#8220;ne&#8221; and &#8220;pas&#8221;.</S>
          <S ID="S-39762">However, our model learns to deal with negation by memorizing longer phrase translation equivalents, such as (&#8220;ne est pas&#8221;, &#8220;is not&#8221;); (&#8220;est inadmissible&#8221;, &#8220;is not good enough&#8221;); and (&#8220;ne est pas ici&#8221;, &#8220;is not here&#8221;).</S>
        </P>
      </DIV>
      <DIV DEPTH="1">
        <HEADER>6.2 Comparison with other work</HEADER>
        <P>
          <S ID="S-39763">A number of researchers have already gone beyond word-level translations in various MT settings.</S>
          <S ID="S-39764">For example, Melamed (2001) uses wordlevel alignments in order to learn translations of noncompositional compounds.</S>
          <S ID="S-39765">Och and Ney (1999) learn phrase-to-phrase mappings involving word classes, which they call &#8220;templates&#8221;, and exploit them in a statistical machine translation system.</S>
          <S ID="S-39766">And Marcu (2001) extracts phrase translations from automatically aligned corpora and uses them in conjunction with a word-for-word statistical translation system.</S>
          <S ID="S-39767">However, none of these approaches learn simultaneously the translation of phrases/templates and the translation of words.</S>
          <S ID="S-39768">As a consequence, there is a chance that the learning procedure will not discover phrase-level patterns that occur often in the data.</S>
          <S ID="S-39769">In our approach, phrases are not treated differently from individual words, and as a consequence the likelihood of the EM algorithm converging to a better local maximum is increased.</S>
          <S ID="S-39770">Working with phrase translations that are learned independent of a translation model can also affect the decoder performance.</S>
          <S ID="S-39771">For example, in our previous work (Marcu, 2001), we have used a statistical translation memory of phrases in conjunction with a statistical translation model (<REF ID="R-01" RPTR="7">Brown et al., 1993</REF>).</S>
          <S ID="S-39772">The phrases in the translation memory were automatically extracted from the Viterbi alignments produced by Giza (<REF ID="R-00" RPTR="1">Al-Onaizan et al., 1999</REF>) and reused in decoding.</S>
          <S ID="S-39773">The decoder described in (Marcu, 2001) starts from a gloss that uses the translations in the translation memory and then tries to improve on the gloss translation by modifying it incrementally, in the style described in Section 4.</S>
          <S ID="S-39774">However, because the decoder hill-climbs on a word-forword translation model probability, it often discards good phrasal translations in favour of word-for-word translations of higher probability.</S>
          <S ID="S-39775">The decoder in Section 4 does not have this problem because it hillclimbs on translation model probabilities in which phrases play a crucial role.</S>
        </P>
      </DIV>
    </DIV>
  </BODY>
  <ACKNOWLEDGMENTS/>
  <REFERENCES>
    <REFERENCE ID="0">
      <RAUTHOR>Yaser Al-Onaizan</RAUTHOR>
      <REFTITLE>Statistical machine translation. Final Report, JHU Summer Workshop.</REFTITLE>
      <DATE>1999</DATE>
    </REFERENCE>
    <REFERENCE ID="1">
      <RAUTHOR>Peter F Brown</RAUTHOR>
      <REFTITLE>The mathematics of statistical machine translation: Parameter estimation.</REFTITLE>
      <DATE>1993</DATE>
    </REFERENCE>
    <REFERENCE ID="2">
      <RAUTHOR>Philip Clarkson</RAUTHOR>
      <REFTITLE>Statistical language modeling using the CMU-Cambridge toolkit.</REFTITLE>
      <DATE>1997</DATE>
    </REFERENCE>
  </REFERENCES>
</PAPER>
